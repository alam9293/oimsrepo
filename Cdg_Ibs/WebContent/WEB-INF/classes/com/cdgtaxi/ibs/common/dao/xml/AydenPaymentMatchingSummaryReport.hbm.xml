<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <!--
        Created by the Middlegen Hibernate plugin 2.1

        http://boss.bekk.no/boss/middlegen/
        http://www.hibernate.org/
    -->

    <sql-query name="AydenPaymentMatchingSummaryReport">
        <return-scalar column="numOfRecords" type="long"/>
        <return-scalar column="batchId" type="long"/>
        <return-scalar column="matchingStatus" type="string"/>

        <![CDATA[

    SELECT count(*) as numOfRecords,txn.batch_id as batchId,txn.matching_status as matchingStatus FROM TMTB_NON_BILLABLE_TXN txn
	 LEFT OUTER JOIN TMTB_NON_BILLABLE_TXN_CRCA crca1
	 ON (txn.pspreference1 = crca1.psp_ref_no)
	 LEFT OUTER JOIN TMTB_NON_BILLABLE_TXN_CRCA crca2
	 ON (txn.pspreference2 = crca2.psp_ref_no)
	 LEFT OUTER JOIN TMTB_NON_BILLABLE_BATCH batch
	 ON (txn.batch_id = batch.batch_id)
     WHERE (
        (crca1.record_type in (:recordType1 , :recordType2) AND crca2.record_type in (:recordType1 , :recordType2))
        OR
        (crca1.record_type in (:recordType1 , :recordType2) AND crca2.record_type IS NULL)
        OR
        (crca1.record_type IS NULL AND crca2.record_type in (:recordType1 , :recordType2))
    )
    AND (:batchNo is null or batch.batch_no = :batchNo)
    AND batch.settlement_date between  to_date(:settlementStartDate,'yyyy-MM-dd hh24:mi:ss') and to_date(:settlementEndDate,'yyyy-MM-dd hh24:mi:ss')
    AND txn.matching_status not in ('T')
    GROUP BY txn.matching_status,txn.batch_id

	]]>
    </sql-query>

    <sql-query name="AydenPaymentMatchingSummaryReport2">
        <return-scalar column="numOfRecords" type="long"/>
        <return-scalar column="batchId" type="long"/>
        <return-scalar column="batchNo" type="string"/>
        <return-scalar column="fileName" type="string"/>
        <return-scalar column="total" type="java.math.BigDecimal"/>
        <return-scalar column="matchingStatus" type="string"/>
        <return-scalar column="completeStatus" type="string"/>
        <return-scalar column="commission" type="java.math.BigDecimal"/>
        <return-scalar column="interchange" type="java.math.BigDecimal"/>
        <return-scalar column="schemeFee" type="java.math.BigDecimal"/>
        <return-scalar column="markUp" type="java.math.BigDecimal"/>
        <return-scalar column="grossAmount" type="java.math.BigDecimal"/>
        <return-scalar column="uploadDate" type="java.util.Date"/>
        <return-scalar column="settlementDate" type="java.util.Date"/>
        <return-scalar column="batchNoSecond" type="string"/>

        <![CDATA[

SELECT COUNT(*) as numOfRecords,batch_id as batchId,batch_no2 as batchNo,SUM(nvl(txn_amount,0)) as total,matching_status as matchingStatus,SUM(nvl(commission,0)) as commission,SUM(nvl(interchange,0)) as interchange,SUM(nvl(scheme_fee,0)) as schemeFee,SUM(nvl(mark_up,0)) as markUp
,ABS(SUM(GROSS_AMOUNT)) as grossAmount,upload_date as uploadDate,settlement_date as settlementDate, file_name as fileName,complete_status as completeStatus, batch_code as batchNoSecond
FROM(

    SELECT * FROM TMTB_NON_BILLABLE_TXN_CRCA crca
    RIGHT JOIN
    (SELECT txn1.matching_status as matching_status,txn1.batch_id,txn1.txn_amount1 as txn_amount, txn1.pspreference1 as pspreference, batch.batch_no as batch_no2,batch.complete_status,batch.settlement_date
    FROM TMTB_NON_BILLABLE_TXN txn1,TMTB_NON_BILLABLE_TXN txn2,TMTB_NON_BILLABLE_BATCH batch
    where txn1.txn_id = txn2.txn_id and txn1.pspreference1 is not null and batch.batch_id = txn1.batch_id and batch.settlement_date between to_date(:settlementStartDate,'yyyy-MM-dd hh24:mi:ss') and to_date(:settlementEndDate,'yyyy-MM-dd hh24:mi:ss') and (:batchNo is null or batch.batch_no = :batchNo) AND txn1.matching_status not in ('T')
    ) txn
    ON crca.psp_ref_no = txn.pspreference
    WHERE crca.record_type in (:recordType1 , :recordType2)

    UNION

    SELECT * FROM TMTB_NON_BILLABLE_TXN_CRCA crca
    RIGHT JOIN
    (SELECT txn2.matching_status as matching_status,txn2.batch_id,txn2.txn_amount2 as txn_amount,txn2.pspreference2 as pspreference, batch.batch_no as batch_no2,batch.complete_status,batch.settlement_date
    FROM TMTB_NON_BILLABLE_TXN txn1,TMTB_NON_BILLABLE_TXN txn2,TMTB_NON_BILLABLE_BATCH batch
    where txn1.txn_id = txn2.txn_id and txn2.pspreference2 is not null and batch.batch_id = txn2.batch_id and batch.settlement_date between to_date(:settlementStartDate,'yyyy-MM-dd hh24:mi:ss') and to_date(:settlementEndDate,'yyyy-MM-dd hh24:mi:ss') and (:batchNo is null or batch.batch_no = :batchNo) AND txn2.matching_status not in ('T')
    )txn
    ON (crca.psp_ref_no = txn.pspreference)
    WHERE crca.record_type in (:recordType1 , :recordType2)


) group by matching_status,batch_id,batch_no2,upload_date,settlement_date,file_name,complete_status,batch_code
order by settlement_date
	]]>
    </sql-query>

    <sql-query name="AydenPaymentMatchingExcessAmount">
        <return-scalar column="numOfRecords" type="string"/>
        <return-scalar column="fileName" type="string"/>
        <return-scalar column="grossAmount" type="java.math.BigDecimal"/>
        <![CDATA[

SELECT count(*) as numOfRecords, ABS(sum(gross_amount)) as grossAmount,file_name as fileName FROM TMTB_NON_BILLABLE_TXN_CRCA where file_name in (
    SELECT crca.file_name from TMTB_NON_BILLABLE_TXN txn, TMTB_NON_BILLABLE_BATCH batch,TMTB_NON_BILLABLE_TXN_CRCA crca where (batch.settlement_date between to_date(:settlementStartDate,'yyyy-MM-dd hh24:mi:ss') and to_date(:settlementEndDate,'yyyy-MM-dd hh24:mi:ss')) and batch.batch_id = txn.batch_id and (:batchNo is null or batch.batch_no = :batchNo) and txn.pspreference1 = crca.psp_ref_no and txn.PSPREFERENCE1 is not null
    UNION
    SELECT crca.file_name from TMTB_NON_BILLABLE_TXN txn, TMTB_NON_BILLABLE_BATCH batch,TMTB_NON_BILLABLE_TXN_CRCA crca where (batch.settlement_date between to_date(:settlementStartDate,'yyyy-MM-dd hh24:mi:ss') and to_date(:settlementEndDate,'yyyy-MM-dd hh24:mi:ss')) and batch.batch_id = txn.batch_id and (:batchNo is null or batch.batch_no = :batchNo) and txn.pspreference2 = crca.psp_ref_no and txn.PSPREFERENCE2 is not null
) and psp_ref_no not in
(
    SELECT crca.psp_ref_no from TMTB_NON_BILLABLE_TXN txn, TMTB_NON_BILLABLE_BATCH batch,TMTB_NON_BILLABLE_TXN_CRCA crca where (batch.settlement_date between to_date(:settlementStartDate,'yyyy-MM-dd hh24:mi:ss') and to_date(:settlementEndDate,'yyyy-MM-dd hh24:mi:ss')) and batch.batch_id = txn.batch_id and (:batchNo is null or batch.batch_no = :batchNo) and txn.pspreference1 = crca.psp_ref_no and txn.PSPREFERENCE1 is not null
    UNION
    SELECT crca.psp_ref_no from TMTB_NON_BILLABLE_TXN txn,  TMTB_NON_BILLABLE_BATCH batch,TMTB_NON_BILLABLE_TXN_CRCA crca where (batch.settlement_date between to_date(:settlementStartDate,'yyyy-MM-dd hh24:mi:ss') and to_date(:settlementEndDate,'yyyy-MM-dd hh24:mi:ss')) and batch.batch_id = txn.batch_id and (:batchNo is null or batch.batch_no = :batchNo) and txn.pspreference2 = crca.psp_ref_no and txn.PSPREFERENCE2 is not null
) group by file_name

	]]>
    </sql-query>
</hibernate-mapping>