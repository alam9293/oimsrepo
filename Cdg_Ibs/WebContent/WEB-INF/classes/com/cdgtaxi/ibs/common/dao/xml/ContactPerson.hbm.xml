<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
    
<hibernate-mapping>
<!-- 
    Created by the Middlegen Hibernate plugin 2.1

    http://boss.bekk.no/boss/middlegen/
    http://www.hibernate.org/
-->

<sql-query name="contactPerson">
	<return-scalar column="account_no" 				type="string"/>
	<return-scalar column="account_name" 			type="string"/>
	<return-scalar column="ACCT_STATUS" 			type="string"/>
	<return-scalar column="business_nature" 		type="string"/>
	<return-scalar column="product_type" type="string"/>
	<return-scalar column="division_code" 			type="string"/>
	<return-scalar column="division_name" 			type="string"/>
	<return-scalar column="division_status" 		type="string"/>
	<return-scalar column="department_code" 		type="string"/>
	<return-scalar column="department_name" 		type="string"/>
	<return-scalar column="department_status" 		type="string"/>
	
	<return-scalar column="contact_name" 			type="string"/>
	<return-scalar column="MAIN_CONTACT_TYPE" 		type="string"/>
	<return-scalar column="contact_tel" 			type="string"/>
	<return-scalar column="contact_mobile" 			type="string"/>
	<return-scalar column="contact_fax" 			type="string"/>
	<return-scalar column="contact_email" 			type="string"/>
	<return-scalar column="ADDRESS_AREA" 			type="string"/>
	<return-scalar column="ADDRESS_BLOCK" 			type="string"/>
	<return-scalar column="ADDRESS_STREET" 			type="string"/>
	<return-scalar column="ADDRESS_UNIT" 			type="string"/>
	<return-scalar column="ADDRESS_BUILDING" 		type="string"/>
	<return-scalar column="MASTER_VALUE" 			type="string"/>
	<return-scalar column="ADDRESS_STATE" 			type="string"/>
	<return-scalar column="ADDRESS_CITY" 			type="string"/>
	<return-scalar column="ADDRESS_POSTAL" 			type="string"/>
	<return-scalar column="SALES_PERSON" 			type="string"/>
	
	<![CDATA[
	SELECT
	CASE 
		WHEN gp_acct.ACCOUNT_NO IS NOT NULL THEN gp_acct.CUST_NO
		WHEN p_acct.ACCOUNT_NO IS NOT NULL THEN p_acct.CUST_NO
		ELSE acct.CUST_NO
	END account_no,
	CASE 
		WHEN gp_acct.account_no IS NOT NULL THEN gp_acct.ACCOUNT_NAME
		WHEN p_acct.account_no IS NOT NULL THEN p_acct.ACCOUNT_NAME
		ELSE acct.ACCOUNT_NAME
	END account_name, acct_status_tbl.account_status AS ACCT_STATUS,
	CASE
		WHEN corp_biz.INDUSTRY IS NOT NULL THEN (SELECT MASTER_VALUE FROM MSTB_MASTER_TABLE WHERE MASTER_NO = corp_biz.INDUSTRY)
		WHEN per_biz.INDUSTRY IS NOT NULL THEN (SELECT MASTER_VALUE FROM MSTB_MASTER_TABLE WHERE MASTER_NO = per_biz.INDUSTRY)
	END business_nature,
	subscribe_prod_type.product_type,
	CASE
	     WHEN p_acct.ACCOUNT_CATEGORY = 'DIV' THEN p_acct.code
	     WHEN acct.ACCOUNT_CATEGORY = 'DIV' THEN acct.code
	END division_code,
	CASE
	     WHEN p_acct.ACCOUNT_CATEGORY = 'DIV' THEN p_acct.ACCOUNT_NAME
	     WHEN acct.ACCOUNT_CATEGORY = 'DIV' THEN acct.ACCOUNT_NAME
	END division_name,
	div_status_tbl.account_status AS division_status,
	CASE
	     WHEN acct.ACCOUNT_CATEGORY = 'DEPT' THEN acct.code
	END department_code,
	CASE
	     WHEN acct.ACCOUNT_CATEGORY = 'DEPT' THEN acct.ACCOUNT_NAME
	END department_name,
	dept_status_tbl.account_status AS department_status,
	CASE
		WHEN contact.MAIN_CONTACT_NAME IS NOT NULL AND contact.SUB_CONTACT_NAME IS NULL
			THEN (SELECT MASTER_VALUE FROM MSTB_MASTER_TABLE WHERE MASTER_NO=contact.MAIN_CONTACT_SAL) || ' ' || contact.MAIN_CONTACT_NAME
		WHEN contact.MAIN_CONTACT_NAME IS NULL AND contact.SUB_CONTACT_NAME IS NOT NULL
			THEN (SELECT MASTER_VALUE FROM MSTB_MASTER_TABLE WHERE MASTER_NO=contact.SUB_CONTACT_SAL) || ' ' || contact.SUB_CONTACT_NAME
		WHEN contact.MAIN_CONTACT_NAME IS NOT NULL AND contact.SUB_CONTACT_NAME IS NOT NULL
			THEN (SELECT MASTER_VALUE FROM MSTB_MASTER_TABLE WHERE MASTER_NO=contact.MAIN_CONTACT_SAL) || ' ' || contact.MAIN_CONTACT_NAME || ' / ' || (SELECT MASTER_VALUE FROM MSTB_MASTER_TABLE WHERE MASTER_NO=contact.SUB_CONTACT_SAL) || ' ' || contact.SUB_CONTACT_NAME
	END contact_name,
	main.MAIN_CONTACT_TYPE,
	CASE
		WHEN contact.MAIN_CONTACT_TEL IS NOT NULL AND contact.SUB_CONTACT_TEL IS NULL
			THEN contact.MAIN_CONTACT_TEL
		WHEN contact.MAIN_CONTACT_TEL IS NULL AND contact.SUB_CONTACT_TEL IS NOT NULL
			THEN contact.SUB_CONTACT_TEL
		WHEN contact.MAIN_CONTACT_TEL IS NOT NULL AND contact.SUB_CONTACT_TEL IS NOT NULL
			THEN contact.MAIN_CONTACT_TEL || ' / ' || contact.SUB_CONTACT_TEL
	END contact_tel,
	CASE
		WHEN contact.MAIN_CONTACT_MOBILE IS NOT NULL AND contact.SUB_CONTACT_MOBILE IS NULL
			THEN contact.MAIN_CONTACT_MOBILE
		WHEN contact.MAIN_CONTACT_MOBILE IS NULL AND contact.SUB_CONTACT_MOBILE IS NOT NULL
			THEN contact.SUB_CONTACT_MOBILE
		WHEN contact.MAIN_CONTACT_MOBILE IS NOT NULL AND contact.SUB_CONTACT_MOBILE IS NOT NULL
			THEN contact.MAIN_CONTACT_MOBILE || ' / ' || contact.SUB_CONTACT_MOBILE
	END contact_mobile,
	CASE
		WHEN contact.MAIN_CONTACT_FAX IS NOT NULL AND contact.SUB_CONTACT_FAX IS NULL
			THEN contact.MAIN_CONTACT_FAX
		WHEN contact.MAIN_CONTACT_FAX IS NULL AND contact.SUB_CONTACT_FAX IS NOT NULL
			THEN contact.SUB_CONTACT_FAX
		WHEN contact.MAIN_CONTACT_FAX IS NOT NULL AND contact.SUB_CONTACT_FAX IS NOT NULL
			THEN contact.MAIN_CONTACT_FAX || ' / ' || contact.SUB_CONTACT_FAX
	END contact_fax,
	CASE
		WHEN contact.MAIN_CONTACT_EMAIL IS NOT NULL AND contact.SUB_CONTACT_EMAIL IS NULL
			THEN contact.MAIN_CONTACT_EMAIL
		WHEN contact.MAIN_CONTACT_EMAIL IS NULL AND contact.SUB_CONTACT_EMAIL IS NOT NULL
			THEN contact.SUB_CONTACT_EMAIL
		WHEN contact.MAIN_CONTACT_EMAIL IS NOT NULL AND contact.SUB_CONTACT_EMAIL IS NOT NULL
			THEN contact.MAIN_CONTACT_EMAIL || ' / ' || contact.SUB_CONTACT_EMAIL
	END contact_email,
	contact.ADDRESS_AREA,contact.ADDRESS_BLOCK,contact.ADDRESS_STREET,contact.ADDRESS_UNIT,contact.ADDRESS_BUILDING, country.MASTER_VALUE,
	contact.ADDRESS_STATE, contact.ADDRESS_CITY, contact.ADDRESS_POSTAL,
	CASE
		WHEN sales.name IS NOT NULL THEN sales.name
		WHEN p_sales.name IS NOT NULL THEN p_sales.name
		WHEN gp_sales.name IS NOT NULL THEN gp_sales.name
	END SALES_PERSON
	FROM AMTB_ACCT_MAIN_CONTACT main
	LEFT JOIN AMTB_ACCOUNT acct ON main.ACCOUNT_NO = acct.ACCOUNT_NO
	LEFT JOIN AMTB_ACCOUNT p_acct on acct.PARENT_NO = p_acct.ACCOUNT_NO
	LEFT JOIN AMTB_ACCOUNT gp_acct on p_acct.PARENT_NO = gp_acct.ACCOUNT_NO
	inner join FMTB_AR_CONT_CODE_MASTER ar on ar.ar_control_code_no = (
	CASE 
		WHEN gp_acct.ACCOUNT_NO IS NOT NULL THEN gp_acct.ar_control_code_no  
		WHEN p_acct.ACCOUNT_NO IS NOT NULL THEN p_acct.ar_control_code_no
		ELSE acct.ar_control_code_no END
	)
	inner join FMTB_ENTITY_MASTER entity on ar.entity_no =entity.entity_no
	LEFT JOIN (
		SELECT DISTINCT account_no, 
		first_value(ACCT_STATUS) OVER (PARTITION BY account_no ORDER BY EFFECTIVE_DT DESC) AS account_status
	FROM AMTB_ACCT_STATUS) acct_status_tbl ON acct_status_tbl.account_no = (
	CASE
			WHEN gp_acct.account_no IS NOT NULL THEN gp_acct.account_no
			WHEN p_acct.account_no IS NOT NULL THEN p_acct.account_no
			ELSE acct.account_no END
	)
	LEFT JOIN (
		SELECT DISTINCT account_no, 
		first_value(ACCT_STATUS) OVER (PARTITION BY account_no ORDER BY EFFECTIVE_DT DESC) AS account_status
	FROM AMTB_ACCT_STATUS) div_status_tbl ON div_status_tbl.account_no = (
	CASE
		WHEN p_acct.ACCOUNT_CATEGORY = 'DIV' THEN p_acct.account_no
	     WHEN acct.ACCOUNT_CATEGORY = 'DIV' THEN acct.account_no
	     END
	)
	LEFT JOIN (
		SELECT DISTINCT account_no, 
		first_value(ACCT_STATUS) OVER (PARTITION BY account_no ORDER BY EFFECTIVE_DT DESC) AS account_status
	FROM AMTB_ACCT_STATUS) dept_status_tbl ON dept_status_tbl.account_no = (
	CASE
		WHEN acct.ACCOUNT_CATEGORY = 'DEPT' THEN acct.account_no
	END
	)
	LEFT JOIN AMTB_CORPORATE_DETAIL corp_biz ON corp_biz.ACCOUNT_NO = (
	CASE
		WHEN gp_acct.account_no IS NOT NULL THEN gp_acct.account_no
		WHEN p_acct.account_no IS NOT NULL THEN p_acct.account_no
		ELSE acct.account_no END
	)
	LEFT JOIN AMTB_PERSONAL_DETAIL per_biz ON per_biz.ACCOUNT_NO = (
	CASE
		WHEN p_acct.ACCOUNT_CATEGORY = 'DIV' THEN p_acct.account_no
		ELSE acct.account_no END
	)

	INNER JOIN AMTB_CONTACT_PERSON contact ON contact.CONTACT_PERSON_NO=main.CONTACT_PERSON_NO
	inner join MSTB_MASTER_TABLE country on contact.ADDRESS_COUNTRY = country.MASTER_NO
	LEFT JOIN (
			    SELECT account_no, MAX(ACCT_SALESPERSON_NO) AS ACCT_SALESPERSON_NO
			    FROM AMTB_ACCT_SALESPERSON
			    WHERE trunc(sysdate) >= EFFECTIVE_DT_FROM
	              AND (trunc(sysdate) <= EFFECTIVE_DT_TO OR EFFECTIVE_DT_TO IS NULL)
			    GROUP BY account_no
			    ) latest_acct_sales ON latest_acct_sales.account_no = acct.account_no
	LEFT JOIN AMTB_ACCT_SALESPERSON acct_sales ON acct_sales.ACCT_SALESPERSON_NO = latest_acct_sales.ACCT_SALESPERSON_NO
	LEFT JOIN MSTB_SALESPERSON sales ON acct_sales.salesperson_no = sales.salesperson_no
	LEFT JOIN (
			    SELECT account_no, MAX(ACCT_SALESPERSON_NO) AS ACCT_SALESPERSON_NO
			    FROM AMTB_ACCT_SALESPERSON
			    WHERE trunc(sysdate) >= EFFECTIVE_DT_FROM
	              AND (trunc(sysdate) <= EFFECTIVE_DT_TO OR EFFECTIVE_DT_TO IS NULL)
			    GROUP BY account_no
			    ) p_latest_acct_sales ON p_latest_acct_sales.account_no = p_acct.account_no
	LEFT JOIN AMTB_ACCT_SALESPERSON p_acct_sales ON p_acct_sales.ACCT_SALESPERSON_NO = p_latest_acct_sales.ACCT_SALESPERSON_NO
	LEFT JOIN MSTB_SALESPERSON p_sales ON p_acct_sales.salesperson_no = p_sales.salesperson_no
	LEFT JOIN (
			    SELECT account_no, MAX(ACCT_SALESPERSON_NO) AS ACCT_SALESPERSON_NO
			    FROM AMTB_ACCT_SALESPERSON
			    WHERE trunc(sysdate) >= EFFECTIVE_DT_FROM
	              AND (trunc(sysdate) <= EFFECTIVE_DT_TO OR EFFECTIVE_DT_TO IS NULL)
			    GROUP BY account_no
			    ) gp_latest_acct_sales ON gp_latest_acct_sales.account_no = gp_acct.account_no
	LEFT JOIN AMTB_ACCT_SALESPERSON gp_acct_sales ON gp_acct_sales.ACCT_SALESPERSON_NO = gp_latest_acct_sales.ACCT_SALESPERSON_NO
	LEFT JOIN MSTB_SALESPERSON gp_sales ON gp_acct_sales.salesperson_no = gp_sales.salesperson_no
	LEFT JOIN MSTB_MASTER_TABLE biz_nature ON biz_nature.MASTER_NO=(
	CASE
		WHEN corp_biz.INDUSTRY IS NOT NULL THEN corp_biz.INDUSTRY
		WHEN per_biz.INDUSTRY IS NOT NULL THEN per_biz.INDUSTRY
		END
	)
	INNER JOIN (
		select listagg(PRODUCT_TYPE_ID, ',') within group(order by product_type_id) as product_type, account_no from AMTB_SUBSC_TO group by account_no
	) subscribe_prod_type ON subscribe_prod_type.ACCOUNT_NO = acct.ACCOUNT_NO
	WHERE
	(:accountNo IS NULL
	    OR gp_acct.cust_no = :accountNo
	    OR p_acct.cust_no = :accountNo
	    OR acct.cust_no = :accountNo)
	AND
	    (:accountName IS NULL
	    OR acct.ACCOUNT_NAME LIKE :accountName
	    OR p_acct.ACCOUNT_NAME LIKE :accountName
	    OR gp_acct.ACCOUNT_NAME LIKE :accountName)
	AND
	    (:division IS NULL
	    OR p_acct.account_no = :division
		OR acct.account_no = :division)
	AND
	    (:department IS NULL
	    OR acct.account_no = :department)
	AND
	    (:accountStatus IS NULL
	    OR acct_status_tbl.account_status LIKE :accountStatus)
	AND
	    (:contactPersonName IS NULL
	    OR contact.MAIN_CONTACT_NAME LIKE :contactPersonName
	    OR contact.SUB_CONTACT_NAME LIKE :contactPersonName)
	AND
	    (:typeOfContact IS NULL
	    OR main.MAIN_CONTACT_TYPE LIKE :typeOfContact)
	AND
	    (:businessNature IS NULL
	    OR biz_nature.MASTER_CODE LIKE :businessNature)
	AND
	    (:productType IS NULL
	    OR subscribe_prod_type.product_type LIKE :productType)
	AND
		(:salesPerson IS NULL
		OR sales.salesperson_no = :salesPerson
		OR p_sales.salesperson_no = :salesPerson
		OR gp_sales.salesperson_no = :salesPerson)
	and (:entityNo is null or entity.entity_no = :entityNo)
	ORDER BY
		CASE WHEN :sortBy = 'AN' THEN account_name END,
	    
	    CASE WHEN :sortBy = 'CP' THEN contact.MAIN_CONTACT_NAME END,
	    CASE WHEN :sortBy = 'CP' THEN contact.SUB_CONTACT_NAME END
	]]>
</sql-query>

</hibernate-mapping>