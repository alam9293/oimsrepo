<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
    
<hibernate-mapping>
<!-- 
    Created by the Middlegen Hibernate plugin 2.1

    http://boss.bekk.no/boss/middlegen/
    http://www.hibernate.org/
-->

<sql-query name="suspensionReactivationVoucher">
	<return-scalar column="cust_no" 		      type="string"/>
	<return-scalar column="account_name"      type="string"/>
	<return-scalar column="type_name"		      type="string"/>
	<return-scalar column="serial_no"	        type="string"/>
	<return-scalar column="created_dt"	      type="string"/>
	<return-scalar column="price"		          type="string"/>
	<return-scalar column="action"			      type="string"/>
  <return-scalar column="REQUEST_DT"        type="string"/>
  <return-scalar column="REQUESTOR"         type="string"/>
  <return-scalar column="master_value"      type="string"/>
  <return-scalar column="remarks"           type="string"/>
  <return-scalar column="flow_dt"           type="string"/>
  <return-scalar column="login_id"          type="string"/>
  <return-scalar column="TO_STATUS"         type="string"/>
  <return-scalar column="approval_remarks"  type="string"/>
	<![CDATA[
  select
    case 
      when acct3.cust_no is not null then acct3.cust_no
      when acct2.cust_no is not null then acct2.cust_no
      when acct.cust_no is not null then acct.cust_no
    end as cust_no,
    case 
      when acct3.cust_no is not null then acct3.account_name
      when acct2.cust_no is not null then acct2.account_name
      when acct.cust_no is not null then acct.account_name
    end as account_name,
    itemType.type_name,
    item.serial_no,
    to_char(item.created_dt, 'dd/MM/yyyy HH24:MI:SS') as created_dt,
    itemType.price,
    req.action,
    case when req.REQUEST_DT is not null then to_char( req.REQUEST_DT, 'dd/MM/yyyy HH24:MI:SS') end as REQUEST_DT,
    req.REQUESTOR,
    reason.master_value,
    req.remarks,
    case when flow.FLOW_DT is not null then to_char(flow.FLOW_DT, 'dd/MM/yyyy HH24:MI:SS') end as flow_dt,
    usr.login_id,
    case when flow.TO_STATUS is null then 'P' ELSE flow.TO_STATUS end as TO_STATUS,
    flow.REMARKS as approval_remarks
  from IMTB_ITEM_REQ req
  left join IMTB_ITEM_REQ_FLOW flow on req.REQ_NO = flow.REQ_NO AND flow.REQ_FLOW_NO in (
    select
     distinct first_value
     (
        req_flow_no
     )
     over (partition by req2.ITEM_NO order by flow2.FLOW_DT desc) as REQ_FLOW_NO
     from IMTB_ITEM_REQ_FLOW flow2
     inner join IMTB_ITEM_REQ req2 on flow2.REQ_NO = req2.REQ_NO
     where flow2.TO_STATUS in ('R','A')
      AND req2.REQ_NO = req.REQ_NO
  )
  inner join IMTB_ITEM item on req.ITEM_NO = item.ITEM_NO
  inner join IMTB_ITEM_TYPE itemType on item.ITEM_TYPE_NO = itemType.ITEM_TYPE_NO
  inner join IMTB_ISSUE issue on item.ISSUE_NO = issue.ISSUE_NO
  inner join IMTB_ISSUE_REQ issueReq on issueReq.ISSUE_REQ_NO = issue.ISSUE_NO
  inner join AMTB_ACCOUNT acct on acct.account_no = issueReq.account_no
  left join AMTB_ACCOUNT acct2 on acct.parent_no = acct2.account_no
  left join AMTB_ACCOUNT acct3 on acct2.parent_no = acct3.account_no
  	left join FMTB_AR_CONT_CODE_MASTER ar on ar.ar_control_code_no = CASE WHEN acct3.CUST_NO IS NOT NULL THEN acct3.ar_control_code_no  WHEN acct2.CUST_NO IS NOT NULL THEN acct2.ar_control_code_no ELSE acct.ar_control_code_no END
	left join FMTB_ENTITY_MASTER entity on ar.entity_no =entity.entity_no
  left join MSTB_MASTER_TABLE reason on req.MASTER_NO = reason.MASTER_NO
  left join SATB_USER usr on flow.USER_ID = usr.user_id
  where
    req.ACTION in ('PS', 'PR')
    AND
    (:actionStartDate is null OR req.REQUEST_DT between to_date((:actionStartDate), 'dd/MM/yyyy') and to_date((:actionEndDate), 'dd/MM/yyyy HH24:MI:SS'))
    AND
    (:approvalStartDate is null OR flow.FLOW_DT between to_date((:approvalStartDate), 'dd/MM/yyyy') and to_date((:approvalEndDate), 'dd/MM/yyyy HH24:MI:SS'))
    AND
    (:serialNoStart is null OR item.serial_no between :serialNoStart and :serialNoEnd)
    AND
    (:itemTypeNo is null OR itemType.item_Type_No = :itemTypeNo)
    AND
    (:actionType is null OR req.action = :actionType)
    AND
    (:approvalStatus is null OR req.current_status = :approvalStatus)
    AND 
    (:entityNo is null OR entity.entity_no = TO_NUMBER(:entityNo))
	]]>
</sql-query>
</hibernate-mapping>