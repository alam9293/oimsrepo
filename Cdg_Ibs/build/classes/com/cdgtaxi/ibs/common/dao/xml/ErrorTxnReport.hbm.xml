<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
	
<hibernate-mapping>
<!-- 
	Created by the Middlegen Hibernate plugin 2.1

	http://boss.bekk.no/boss/middlegen/
	http://www.hibernate.org/
-->

<sql-query name="errorTxnReport">
	<return-scalar column="B_CARD_NO" 				type="string"/>
	<return-scalar column="B_JOB_NO" 				type="string"/>
	<return-scalar column="B_VEHICLE_NO"			type="string"/>
	<return-scalar column="B_DRIVER_IC"				type="string"/>
	<return-scalar column="B_ENTITY"				type="string"/>
	<return-scalar column="B_TOTAL_AMOUNT"			type="string"/>
	<return-scalar column="B_TRIP_START"			type="string"/>
	<return-scalar column="B_TRIP_END"				type="string"/>
	<return-scalar column="B_PICKUP_DT"				type="string"/>
	<return-scalar column="B_PICKUP"				type="string"/>
	<return-scalar column="B_DESTINATION"			type="string"/>
	<return-scalar column="B_JOB_TYPE"				type="string"/>
	<return-scalar column="B_BOOKED_DATE_TIME"		type="string"/>
	<return-scalar column="B_BOOKED_VEHICLE_GROUP"	type="string"/>
	<return-scalar column="B_VEH_TYPE"				type="string"/>
	<return-scalar column="B_PAX_NAME"				type="string"/>
	<return-scalar column="B_BOOKING_REFERENCE"		type="string"/>
	<return-scalar column="B_PRODUCT_ID"			type="string"/>
	<return-scalar column="B_ACCOUNT_LV1_NAME"		type="string"/>
	<return-scalar column="B_ACCOUNT_LV2_NAME"		type="string"/>
	<return-scalar column="B_ACCOUNT_LV3_NAME"		type="string"/>
	<return-scalar column="B_SURCHARGE_DESCRIPTION"	type="string"/>
	<return-scalar column="B_COMPLIMENTARY"			type="string"/>
	<return-scalar column="B_FLIGHT_DETAILS"		type="string"/>
	<return-scalar column="B_AGENT_NAME"			type="string"/>
	<return-scalar column="B_SALES_DRAFT_NO"		type="string"/>
	<return-scalar column="B_PAYMENT_MODE"			type="string"/>
	<return-scalar column="B_SETL_DATE"				type="string"/>
	<return-scalar column="B_BANK_TID"				type="string"/>
	<return-scalar column="B_MID"					type="string"/>
	<return-scalar column="B_BANK_BATCH_CLOSE_NO"	type="string"/>
	<return-scalar column="B_HOTEL_CHARGE_TO"		type="string"/>
	<return-scalar column="B_CREATE_DATE"			type="string"/>
	<return-scalar column="B_JOB_STATUS"			type="string"/>
	<return-scalar column="B_OFFLINE_FLAG"			type="string"/>
	<return-scalar column="B_OFFLINE_TXN_DATE"		type="string"/>
	<return-scalar column="B_ERROR_MSG"				type="string"/>
	<return-scalar column="BLANK" 					type="string"/>
	<return-scalar column="JOB_NO" 					type="string"/>
	<return-scalar column="CUST_NO" 				type="string"/>
	<return-scalar column="DIVISION"				type="string"/>
	<return-scalar column="DEPARTMENT"				type="string"/>
	<return-scalar column="CARD_NO"					type="string"/>
	<return-scalar column="SALES_DRAFT_NO"			type="string"/>
	<return-scalar column="PRODUCT_TYPE"			type="string"/>
	<return-scalar column="COMPANY_CODE"			type="string"/>
	<return-scalar column="TAXI_NO"					type="string"/>
	<return-scalar column="DRIVER_NRIC"				type="string"/>
	<return-scalar column="TRIP_START_DATE"			type="string"/>
	<return-scalar column="TRIP_START_TIME"			type="string"/>
	<return-scalar column="TRIP_END_DATE"			type="string"/>
	<return-scalar column="TRIP_END_TIME"			type="string"/>
	<return-scalar column="FARE_AMOUNT"				type="string"/>
	<return-scalar column="ADMIN_FEE_VALUE"			type="string"/>
	<return-scalar column="GST_VALUE"				type="string"/>
	<return-scalar column="COMPLIMENTARY"			type="string"/>
	<return-scalar column="SURCHARGE_REMARKS"		type="string"/>
	<return-scalar column="TRIP_CODE"				type="string"/>
	<return-scalar column="TRIP_CODE_REASON"		type="string"/>
	<return-scalar column="TRIP_TYPE"				type="string"/>
	<return-scalar column="JOB_TYPE"				type="string"/>
	<return-scalar column="VEHICLE_TYPE"			type="string"/>
	<return-scalar column="PICKUP"					type="string"/>
	<return-scalar column="DESTINATION"				type="string"/>
	<return-scalar column="REMARKS"					type="string"/>
	<return-scalar column="UPDATE_FMS"				type="string"/>
	<return-scalar column="REFUNDCOLLECT"			type="string"/>
	<return-scalar column="FMS_AMOUNT"				type="string"/>
	<return-scalar column="INCENTIVE_AMOUNT"		type="string"/>
	<return-scalar column="PROMO_AMOUNT"			type="string"/>
	<return-scalar column="CABREWARDS_AMOUNT"		type="string"/>
	<return-scalar column="LEVY_AMOUNT"				type="string"/>
	<![CDATA[
select 
	error.CARD_NO as B_CARD_NO,
	JOB_NO as B_JOB_NO,
	error.VEHICLE_NO as B_VEHICLE_NO,
	DRIVER_IC as B_DRIVER_IC,
	ENTITY as B_ENTITY,
	trim(to_char(TOTAL_AMOUNT, '999,999,990.00')) as B_TOTAL_AMOUNT,
	to_char(TRIP_START, 'dd/mm/yyyy hh24:mi') as B_TRIP_START,
	to_char(TRIP_END, 'dd/mm/yyyy hh24:mi') as B_TRIP_END,
	to_char(PICKUP_DT, 'dd/mm/yyyy hh24:mi') as B_PICKUP_DT,
	PICKUP as B_PICKUP,
	DESTINATION as B_DESTINATION,
	JOB_TYPE as B_JOB_TYPE,
	to_char(BOOKED_DATE_TIME, 'dd/mm/yyyy hh24:mi') as B_BOOKED_DATE_TIME,
	BOOKED_VEHICLE_GROUP as B_BOOKED_VEHICLE_GROUP,
	VEH_TYPE as B_VEH_TYPE,
	PAX_NAME as B_PAX_NAME,
	BOOKING_REFERENCE as B_BOOKING_REFERENCE,
	mmt.MASTER_VALUE as B_PRODUCT_ID,
	case when lvl_1_acct.ACCOUNT_NO is not null then (lvl_1_acct.ACCOUNT_NAME || '(' || lvl_1_acct.CUST_NO || ')' ) else ACCOUNT_LV1_NAME end as B_ACCOUNT_LV1_NAME,
	case when lvl_2_acct.ACCOUNT_NO is not null then (lvl_2_acct.ACCOUNT_NAME || '(' || lvl_2_acct.CODE || ')' ) else ACCOUNT_LV2_NAME end as B_ACCOUNT_LV2_NAME,
	case when lvl_3_acct.ACCOUNT_NO is not null then (lvl_3_acct.ACCOUNT_NAME || '(' || lvl_3_acct.CODE || ')' ) else ACCOUNT_LV3_NAME end as B_ACCOUNT_LV3_NAME,
	SURCHARGE_DESCRIPTION as B_SURCHARGE_DESCRIPTION,
	COMPLIMENTARY as B_COMPLIMENTARY,
	FLIGHT_DETAILS as B_FLIGHT_DETAILS,
	AGENT_NAME as B_AGENT_NAME,
	SALES_DRAFT_NO as B_SALES_DRAFT_NO,
	PAYMENT_MODE as B_PAYMENT_MODE,
	to_char(SETL_DATE, 'dd/mm/yyyy') as B_SETL_DATE,
	BANK_TID as B_BANK_TID,
	MID as B_MID,
	BANK_BATCH_CLOSE_NO as B_BANK_BATCH_CLOSE_NO,
	case when acct2.CUST_NO is not null then acct2.ACCOUNT_NAME when parent2.CUST_NO is not null then parent2.ACCOUNT_NAME else grand2.ACCOUNT_NAME end as B_HOTEL_CHARGE_TO,
	to_char(CREATE_DATE, 'dd/mm/yyyy') as B_CREATE_DATE,
	JOB_STATUS as B_JOB_STATUS,
	OFFLINE_FLAG as B_OFFLINE_FLAG,
	to_char(OFFLINE_TXN_DATE, 'dd/mm/yyyy') as B_OFFLINE_TXN_DATE,
	ERROR_MSG AS B_ERROR_MSG,
	'' as BLANK,
JOB_NO,
	case when acct.cust_NO is not null then acct.CUST_NO 
		when parent.cust_no is not null then parent.cust_no
		when grand.cust_no is not null then grand.cust_no
		else lvl_1_acct.CUST_NO end as CUST_NO,
	case when acct.account_category in ('DIV','SAPP') then lpad(acct.code,4,'0') 
		when parent.account_category in ('DIV','SAPP') then lpad(parent.code,4,'0') 
		when grand.account_category in ('DIV','SAPP') then lpad(grand.code,4,'0') 
		else '' end as DIVISION,
	case when acct.account_category = 'DEPT' then lpad(acct.code,4,'0') 
		when parent.account_category = 'DEPT' then lpad(parent.code,4,'0') 
		when grand.account_category = 'DEPT' then lpad(grand.code,4,'0') 
		else '' end as DEPARTMENT,
	error.CARD_NO,
	error.SALES_DRAFT_NO,
	ppt.NAME as PRODUCT_TYPE,
	mmt2.MASTER_VALUE as COMPANY_CODE,
	error.VEHICLE_NO as TAXI_NO,
	error.DRIVER_IC as DRIVER_NRIC,
	nvl(to_char(error.trip_start,'dd/mm/yyyy'), null) TRIP_START_DATE, 
	nvl(to_char(error.trip_start,'HH:MI:SS AM'), null) TRIP_START_TIME, 
     to_char(error.trip_end,'dd/mm/yyyy') TRIP_END_DATE,
     to_char(error.trip_end,'HH:MI:SS AM') TRIP_END_TIME,
	error.TOTAL_AMOUNT as FARE_AMOUNT,
	nvl(error.ADMIN_AMOUNT,0) as ADMIN_FEE_VALUE,
	nvl(error.GST_AMOUNT,0) as GST_VALUE,
	case when error.COMPLIMENTARY = 'Y' then 'YES' else 'NO' end as COMPLIMENTARY,
	error.SURCHARGE_DESCRIPTION as SURCHARGE_REMARKS,
	error.trip_code as TRIP_CODE,
	error.trip_desc as TRIP_CODE_REASON,
	mmt.MASTER_VALUE as TRIP_TYPE,
	error.JOB_TYPE as JOB_TYPE,
	mmt3.MASTER_VALUE as VEHICLE_TYPE,
	error.PICKUP as PICKUP,
	error.DESTINATION as DESTINATION,
	'' as remarks,
	'NO' as UPDATE_FMS,
	'' as REFUNDCOLLECT,
	'0.00' as FMS_AMOUNT,
	'0.00' as INCENTIVE_AMOUNT,
	'0.00' as PROMO_AMOUNT,
	'0.00' as CABREWARDS_AMOUNT,
	'0.00' as LEVY_AMOUNT	
	from ITTB_TRIPS_TXN_ERROR error
	left join PMTB_PRODUCT pp on pp.card_no = error.CARD_NO
	left join PMTB_PRODUCT_TYPE ppt on ppt.PRODUCT_TYPE_ID = pp.PRODUCT_TYPE_ID
	left join MSTB_MASTER_TABLE mmt2 on mmt2.MASTER_CODE = error.ENTITY
	left join AMTB_ACCOUNT acct on pp.ACCOUNT_NO = acct.ACCOUNT_NO
	left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.ACCOUNT_NO
	left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.ACCOUNT_NO
	left join AMTB_ACCOUNT lvl_1_acct on error.ACCOUNT_LV1 = lvl_1_acct.CUST_NO
	left join AMTB_ACCOUNT lvl_2_acct on error.ACCOUNT_LV2 = lvl_2_acct.CODE and lvl_1_acct.ACCOUNT_NO = lvl_2_acct.PARENT_NO
	left join AMTB_ACCOUNT lvl_3_acct on error.ACCOUNT_LV3 = lvl_3_acct.CODE and lvl_2_acct.ACCOUNT_NO = lvl_3_acct.PARENT_NO
	left join MSTB_MASTER_TABLE mmt on error.PRODUCT_ID = mmt.INTERFACE_MAPPING_VALUE and mmt.MASTER_TYPE = 'VTT'
	left join MSTB_MASTER_TABLE mmt3 on error.VEH_TYPE = mmt3.INTERFACE_MAPPING_VALUE and mmt3.MASTER_TYPE = 'VM' 
	left join AMTB_ACCOUNT acct2 on error.HOTEL_CHARGE_TO = acct2.ACCOUNT_NO
	left join AMTB_ACCOUNT parent2 on acct2.PARENT_NO = parent2.ACCOUNT_NO
	left join AMTB_ACCOUNT grand2 on parent2.PARENT_NO = grand2.ACCOUNT_NO
	where ((:txnStart is null and :txnEnd is null)or(error.TRIP_START between case when :txnStart is null then to_timestamp(:txnEnd, 'yyyy-mm-dd hh24:mi:ss') else to_timestamp(:txnStart, 'yyyy-mm-dd hh24:mi:ss') end and case when :txnEnd is null then to_timestamp(:txnStart, 'yyyy-mm-dd hh24:mi:ss') else to_timestamp(:txnEnd, 'yyyy-mm-dd hh24:mi:ss') end))
	and ((:uploadStart is null and :uploadEnd is null)or(error.CREATE_DATE between case when :uploadStart is null then to_timestamp(:uploadEnd, 'yyyy-mm-dd hh24:mi:ss') else to_timestamp(:uploadStart, 'yyyy-mm-dd hh24:mi:ss') end and case when :uploadEnd is null then to_timestamp(:uploadStart, 'yyyy-mm-dd hh24:mi:ss') else to_timestamp(:uploadEnd, 'yyyy-mm-dd hh24:mi:ss') end))
	and (:errorMsg is null or error.ERROR_MSG = :errorMsg)
	and (:offline is null or error.OFFLINE_FLAG = :offline)
	and (:jobNo is null or error.JOB_NO = :jobNo)
	and (:cardNo is null or error.CARD_NO = :cardNo)
	and (:nric is null or error.DRIVER_IC = :nric)
	and (:taxiNo is null or error.VEHICLE_NO = :taxiNo)
	and rownum <= (
			select MAX(MASTER_VALUE) from MSTB_MASTER_TABLE where MASTER_TYPE = 'MRR' and MASTER_STATUS = 'A'
		)
	order by case
		when :sort = 'UD' then error.CREATE_DATE 
		when :sort = 'TD' then error.TRIP_START
		else null
	end, case
		when :sort = 'JN' then error.JOB_NO
		when :sort = 'CN' then error.CARD_NO
		else null
	end
	]]>
</sql-query>
</hibernate-mapping>