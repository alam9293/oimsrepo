<?xml version="1.0" encoding="utf-8"?>
<project name="middlegen" default="hbm2java" basedir=".">
    <!-- Library versions and JARs -->
    <property name="lib.dir" location="lib"/>
    <property file="${lib.dir}/lib.properties"/>

    <!-- Load user overrides -->
    <property file="${user.home}/.${ant.project.name}-build.properties"/>
    <property file="${user.home}/.build.properties"/>
    <property file="build.properties"/>

    <!-- import properties (app settings, classpath, jar file locations) -->
    <import file="properties_oracle.xml"/>

    <property name="hibernate.cascade" value="all"/>
    <property name="class.base" value="com.cdgtaxi.ibs"/>
    <property name="class.module" value=".common"/>
    <!--property name="class.extends" value="org.xfw.XAbstractEntity"/-->
    <property name="gen.base.methods" value="true"/>
    <property name="gen.xdoclet-tag" value="false"/>
    <property name="middlegen.gui" value="false"/>
    <property name="middlegen.lib.dir" value="lib/middlegen-2.1"/>
    <property name="middlegen.dest.dir" value="src"/>

  <!-- Update the class.package if we have a class.module -->
     <condition property="class.package" value="${class.base}.model">
        <equals arg1="${class.module}" arg2="" trim="true"/>
     </condition>
     <condition property="class.package" value="${class.base}${class.module}.model">
       <not><equals arg1="${class.module}" arg2="" trim="true"/></not>
     </condition>

    <path id="lib.class.path">
        <path refid="hibernate.classpath"/>
        <path refid="xdoclet.classpath"/>
        <fileset dir="${middlegen.lib.dir}" includes="*.jar"/>
    </path>

    <target name="init">
        <available property="xdoclet1.2+" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="lib.class.path"/>
    </target>

    <!-- =================================================================== -->
    <!-- Fails if XDoclet 1.2.x is not on classpath                          -->
    <!-- =================================================================== -->
    <target name="fail-if-no-xdoclet-1.2" unless="xdoclet1.2+">
        <fail>You must download several jar files before you can build Middlegen.</fail>
    </target>

    <!-- =================================================================== -->
    <!-- Fails if no table name is set                                       -->
    <!-- =================================================================== -->
    <target name="fail-if-no-table-name" unless="table.name">
        <input message="Database table?" addproperty="table.name"/>
        <fail unless="table.name">
            Table name not set. Please specify table.name property.
        </fail>
    </target>
    <!-- =================================================================== -->
    <!-- Run Middlegen                                                       -->
    <!-- =================================================================== -->
    <target name="middlegen" description="Run Middlegen" unless="middlegen.skip"
        depends="init,fail-if-no-xdoclet-1.2"> <!-- fail-if-no-table-name -->
        <mkdir dir="${middlegen.dest.dir}"/>

        <taskdef name="middlegen" classname="middlegen.MiddlegenTask" classpathref="lib.class.path"/>

        <middlegen
            appname="middlegen"
            prefsdir="."
            gui="${middlegen.gui}"
            databaseurl="${database.url}"
            driver="${database.driver_class}"
            username="${database.username}"
            password="${database.password}"
            schema="${database.schema}">

            <!--
            We can specify what tables we want Data generated for.
            If none are specified, Data will be generated for all tables.
            Comment out the <table> elements if you want to generate for all tables.
            Also note that table names are CASE SENSITIVE for certain databases,
            so on e.g. Oracle you should specify table names in upper case.
            -->
            <!--table generate="true" name="flights" pktable="flights_pk"/-->

			<!-- Common -->
			<!-- Account management -->
			
			<table name="PMTB_PRODUCT_STATUS"/>
			<table name="PMTB_PRODUCT_RETAG"/>
			<table name="PMTB_PRODUCT_REPLACEMENT"/>
			<table name="PMTB_PRODUCT_CREDIT_LIMIT"/>
			<table name="PMTB_PRODUCT"/>
			<table name="AMTB_APPLICATION_FLOW"/>
			<table name="AMTB_APPLICATION_PRODUCT"/>
			<table name="AMTB_APPLICATION"/>
			<table name="AMTB_ACCT_BILL_CYCLE"/>
			<table name="AMTB_ACCT_VOL_DISC"/>
			<table name="AMTB_ACCT_ADMIN_FEE"/>
			<table name="AMTB_ACCT_CRED_TERM"/>
			<table name="AMTB_ACCT_EARLY_PYMT"/>
			<table name="AMTB_ACCT_LATE_PYMT"/>
			<table name="AMTB_CORPORATE_DETAIL"/>
			<table name="AMTB_PERSONAL_DETAIL"/>
			<table name="AMTB_ACCT_LATE_PYMT_REQ"/>
			<table name="AMTB_ACCT_EARLY_PYMT_REQ"/>
			<table name="AMTB_ACCT_CRED_TERM_REQ"/>
			<table name="AMTB_ACCT_ADMIN_FEE_REQ"/>
			<table name="AMTB_ACCT_VOL_DISC_REQ"/>
			<table name="AMTB_ACCT_BILL_CYCLE_REQ"/>
			<table name="AMTB_ACCT_SALESPERSON"/>
			<table name="AMTB_ACCT_SALESPERSON_REQ"/>
			<table name="AMTB_BILL_REQ_FLOW"/>
			<table name="AMTB_BILL_REQ"/>
			<table name="AMTB_CRED_REV_REQ_FLOW"/>
			<table name="AMTB_CRED_REV_REQ"/>
			<table name="AMTB_ACCT_STATUS"/>
			<table name="AMTB_SUBSC_TO"/>
			<!-- <table name="AMTB_SUBSC_TO_HIST"/> -->
			<table name="AMTB_ACCT_MAIN_CONTACT"/>
			<table name="AMTB_CONTACT_PERSON"/>
			<table name="LRTB_REWARD_ACCOUNT"/>
			<table name="LRTB_REWARD_TXN"/>
			<table name="AMTB_ACCT_CRED_LIMIT"/>
			<table name="AMTB_ACCOUNT"/>
			<table name="AMTB_SUBSC_PROD_TYPE"/>
			<table name="AMTB_ACCT_TYPE"/>
        	
        	<!-- Product management -->
        	<table name="PMTB_PRODUCT"/>
        	<table name="PMTB_PRODUCT_TYPE"/>
        	<table name="PMTB_PRODUCT_REPLACEMENT"/>
        	<table name="PMTB_PRODUCT_STATUS"/>
        	<table name="PMTB_PRODUCT_RETAG"/>
            <table name="PMTB_PRODUCT_RENEW"/>
            
            <!-- Transaction management -->
        	<table name="TMTB_ACQUIRE_TXN"/>
        	<table name="TMTB_TXN_REVIEW_REQ"/>
        	<table name="TMTB_TXN_REVIEW_REQ_FLOW"/>
        	
        	<!-- Billing management -->
        	<table name="BMTB_BILL_GEN_SETUP"/>
        	<table name="BMTB_BILL_GEN_REQ"/>
        	<table name="BMTB_BILL_GEN_REQ_DETAIL"/>
        	<table name="BMTB_INVOICE_FILE"/>
        	<table name="BMTB_INVOICE_HEADER"/>
        	<table name="BMTB_INVOICE_SUMMARY"/>
        	<table name="BMTB_INVOICE_DETAIL"/>
        	<table name="BMTB_INVOICE_TXN"/>
        	<table name="BMTB_INVOICE_PAYMENT_HEADER"/>
        	<table name="BMTB_INVOICE_PAYMENT_DETAIL"/>
        	<table name="BMTB_PAYMENT_RECEIPT"/>
        	<table name="BMTB_PAYMENT_RECEIPT_DETAIL"/>
        	<table name="BMTB_NOTE"/>
        	<table name="BMTB_LAST_INVOICE_LOG"/>
        	<table name="BMTB_INVOICE_DEPOSIT_TXN"/>
        	<table name="BMTB_BILL_GEN_ERROR"/>
        	<table name="BMTB_INVOICE_PRINT_REQ"/>
        	
        	<table name="BMTB_DRAFT_INV_FILE"/>
			<table name="BMTB_DRAFT_INV_HEADER"/>
			<table name="BMTB_DRAFT_INV_SUMMARY"/>
			<table name="BMTB_DRAFT_INV_DETAIL"/>
			<table name="BMTB_DRAFT_INV_TXN"/>
			<table name="BMTB_DRAFT_INV_PAYMENT_HEADER"/>
			<table name="BMTB_DRAFT_INV_PAYMENT_DETAIL"/>
        	
        	<table name="VW_INTF_TRIPS_FOR_IBS"/>
        	<table name="ASVW_ACCOUNT"/>
        	<table name="ASVW_PRODUCT"/>
        	<table name="ASVW_PRODUCT_EXPIRY_DATE"/>
        	<table name="ASVW_PRODUCT_TYPE"/>
        	
        	<table name="TEMP_ACCT_MAPPING"/>
        	<!--  -->
        	<!-- 
        	Required table for generating correct mapping.
        	The table is generated by using another build file due to different package name.
        	if you do not understand, kindly find me, sengtat.
        	-->
        	<table name="MSTB_VOL_DISC_MASTER"/>
            <table name="MSTB_VOL_DISC_DETAIL"/>
            <table name="MSTB_VOL_DISC_TIER"/>
            <table name="MSTB_PROD_DISC_MASTER"/>
            <table name="MSTB_PROD_DISC_DETAIL"/>
            <table name="MSTB_ADMIN_FEE_MASTER"/>
            <table name="MSTB_ADMIN_FEE_DETAIL"/>
            <table name="MSTB_EARLY_PAYMENT_MASTER"/>
            <table name="MSTB_EARLY_PAYMENT_DETAIL"/>
            <table name="MSTB_LATE_PAYMENT_MASTER"/>
            <table name="MSTB_LATE_PAYMENT_DETAIL"/>
            <table name="MSTB_GST_DETAIL"/>
            <table name="MSTB_MASTER_TABLE"/>
            <table name="LRTB_REWARD_MASTER"/>
            <table name="LRTB_REWARD_DETAIL"/>
            <table name="LRTB_REWARD_TIER"/>
            <table name="MSTB_SUBSC_FEE_MASTER"/>
            <table name="MSTB_SUBSC_FEE_DETAIL"/>
            <table name="MSTB_SALESPERSON"/>
            <table name="MSTB_CREDIT_TERM_MASTER"/>
            <table name="MSTB_CREDIT_TERM_DETAIL"/>
        	<table name="MSTB_MASTER_TABLE"/>
        	<table name="MSTB_BANK_MASTER"/>
        	<table name="MSTB_BRANCH_MASTER"/>
        	<table name="MSTB_REPORT_FORMAT_MAP"/>
        	<table name="SATB_USER"/>
        	<table name="SATB_RESOURCE"/>
        	
            <table name="FMTB_ENTITY_MASTER"/>
            <table name="FMTB_AR_CONT_CODE_MASTER"/>
            <table name="FMTB_AR_CONT_CODE_DETAIL"/>
            <table name="FMTB_TRANSACTION_CODE"/>
        	<!-- <table name="FMTB_ENTITY_CODE"/> -->
        	<table name="FMTB_TAX_CODE"/>
        	<table name="FMTB_BANK_CODE"/>
        	<!-- <table name="FMTB_PAYMENT_MODE"/> -->
        	<table name="FMTB_GL_LOG_HEADER"/>
        	<table name="FMTB_GL_LOG_DETAIL"/>
        	
        	<table name="ITTB_FMS_DRVR_RFND_COL_REQ"/>
        	<table name="ITTB_CNII_ACCT_REQ"/>
        	<table name="ITTB_TRIPS_TXN_ERROR"/>
        	<table name="ITTB_TRIPS_TXN"/>
        	<table name="ITTB_TRIPS_TXN_REQ"/>
        	<table name="ITTB_CP_LOGIN"/>
        	<table name="ITTB_SETL_TXN"/>
        	
            <table name="LRTB_GIFT_CATEGORY"/>
            <table name="LRTB_GIFT_ITEM"/>
            <table name="LRTB_GIFT_STOCK"/>

            <table name="IMTB_ITEM_TYPE"/>
            <table name="IMTB_STOCK"/>
            <table name="IMTB_ISSUE_REQ"/>
            <table name="IMTB_ISSUE_REQ_FLOW"/>
            <table name="IMTB_ISSUE"/>
            <table name="IMTB_ITEM"/>
        	
			<table name="MSTB_PROMOTION"/>
        	
        	<!-- Non Billable Trips -->
        	<table name="mstb_acquirer"/>
			<table name="mstb_acquirer_pymt_type"/>
        	<table name="tmtb_non_billable_batch"/>
			<table name="tmtb_non_billable_txn"/>
        	<table name="MSTB_ACQUIRER_MDR"/>
        	<table name="BMTB_BANK_PAYMENT"/>
        	<table name="BMTB_BANK_PAYMENT_DETAIL"/>
        	<table name="FMTB_NON_BILLABLE_MASTER"/>
			<table name="FMTB_NON_BILLABLE_DETAIL"/>
			<table name="FMTB_BANK_PAYMENT_MASTER"/>
			<table name="FMTB_BANK_PAYMENT_DETAIL"/>
        	
        	<!-- UOB Interface -->
        	<table name="ITTB_GIRO_SETUP"/>
        	<table name="ITTB_GIRO_REQ"/>
        	<table name="ITTB_GIRO_UOB_HEADER"/>
        	<table name="ITTB_GIRO_UOB_REJECTED"/>
        	<table name="ITTB_GIRO_UOB_DETAIL"/>
            <table name="ITTB_GIRO_RETURN_REQ"/>
        	
        	<!--
            If you want m:n relations, they must be specified like this.
            Note that tables declare in multiple locations must all have
            the same value of the generate attribute.
            -->
	        <many2many>
	            <tablea generate="true" name="AMTB_ACCT_TYPE"/>
	            <jointable name="AMTB_SUBSC_PROD_TYPE" generate="false"/>
	            <tableb generate="true" name="PMTB_PRODUCT_TYPE"/>
	        </many2many>
	        <many2many>
	            <tablea generate="true" name="AMTB_ACCOUNT"/>
	            <jointable name="AMTB_SUBSC_TO" generate="true"/>
	            <tableb generate="true" name="PMTB_PRODUCT_TYPE"/>
	        </many2many>
		<!--
	      <many2many>
	            <tablea generate="true" name="AMTB_ACCOUNT"/>
	            <jointable name="AMTB_ACCOUNT_MAIN_CONTACT" generate="true"/>
	            <tableb generate="true" name="AMTB_CONTACT_PERSON"/>
	        </many2many>
		-->
        	<many2many>
	            <tablea generate="true" name="BMTB_BILL_GEN_REQ"/>
	            <jointable name="BMTB_BILL_GEN_REQ_DETAIL" generate="false"/>
	            <tableb generate="true" name="AMTB_ACCOUNT"/>
	        </many2many>

            <!-- Plugins - Only Hibernate Plugin has been included with this special distribution  -->

            <!--
            If you want to generate XDoclet markup for hbm2java to include in the POJOs then
            set genXDocletTags to true. Also, composite keys are generated as external classes which is
            recommended. If you wish to keep them internal then set genIntergratedCompositeKeys to true.
            Since r4 the ability to customise the selection of JavaTypes is now provided. The is a
            recommended type mapper provided as shown. It is optional - if not provided then Middlegen
            itself will select the Java mapping (as it did previously).
            These settings are optional thus if they are not define here values default to false.
            -->
            <hibernate
                destination="${middlegen.dest.dir}"
                package="${class.package}"
                
                equalsHashcode="${gen.base.methods}"
                columnsIncToString="${gen.base.methods}"
                columnsIncEquals="${gen.base.methods}"
                genXDocletTags="${gen.xdoclet-tag}"
                standardCascade="${hibernate.cascade}"
        		standardGeneratorScheme="sequence"
        	    standardGeneratorArg="{0}_SQ1"
                javaTypeMapper="middlegen.plugins.hibernate.HibernateJavaTypeMapper"
                dynamicUpdate="true"
                dynamicInsert="true"
                plainCompoundKeys="false"
                genIntegratedCompositeKeys="true"
            />
        </middlegen>
    </target>

    <!-- =================================================================== -->
    <!-- Run hbm2java    depends="middlegen"                                 -->
    <!-- =================================================================== -->
    <target name="hbm2java" depends="middlegen" description="Generate .java from .hbm files">

        <taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask"
            classpathref="lib.class.path"/>

        <hibernatetool destdir="${middlegen.dest.dir}">
            <configuration>
                <fileset dir="${middlegen.dest.dir}" includes="**/*.hbm.xml"/>
            </configuration>
            <hbm2java jdk5="true" ejb3="false"/>
        </hibernatetool>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys to target package in ApFuse                                 -->
    <!-- =================================================================== -->
    <target name="install" depends="hbm2java" description="Installs .java files in AppFuse">
        <replace dir="${middlegen.dest.dir}">
            <replacetoken> *        @hibernate.class</replacetoken>
            <replacevalue> * @struts.form include-all="true" extends="BaseForm"
 * @hibernate.class</replacevalue>
        </replace>
        <copy todir="../../src/dao">
            <fileset dir="${middlegen.dest.dir}" includes="**/*.java"/>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Build everything                                                    -->
    <!-- =================================================================== -->
    <target name="all" description="Build and install everything" depends="install"/>

    <!-- =================================================================== -->
    <!-- Clean everything                                                    -->
    <!-- =================================================================== -->
    <target name="clean" description="Clean all generated stuff">
        <delete dir="build.dir"/>
        <delete dir="${middlegen.dest.dir}"/>
        <delete>
            <fileset dir="." includes="*-prefs.properties"/>
        </delete>
    </target>

    <!-- ==================================================================== -->
    <!-- Validate the generated xml mapping documents                         -->
    <!-- ==================================================================== -->
    <target name="validate" description="Validate the generated xml mapping documents">
        <xmlvalidate failonerror="no" lenient="no" warn="yes">
            <fileset dir="${middlegen.dest.dir}" includes="*.xml"/>
        </xmlvalidate>
    </target>

    <!-- =================================================================== -->
    <!-- Creates new project, and tests middlegen                            -->
    <!-- =================================================================== -->
    <target name="test" description="Creates appfuse-middlegen and tests">
        <property name="app.name" value="appfuse-middlegen"/>
        <property name="db.name" value="appfuse"/>
        <property name="new.pkg.name" value="com.wiz.ipg"/>
        <property name="web.framework" value=""/>
        <delete dir="../../../${app.name}"/>
        <ant dir="../.." target="new" inheritAll="false">
            <property name="app.name" value="${app.name}"/>
            <property name="db.name" value="${db.name}"/>
            <property name="new.pkg.name" value="${new.pkg.name}"/>
            <property name="web.framework" value="${web.framework}"/>
        </ant>

        <!-- Create database table -->
        <sql driver="${database.driver_class}" url="${database.url}"
            userid="${database.username}" password="${database.password}">
            <classpath><pathelement path="${database.jar}/"/></classpath>
            <![CDATA[
                DROP TABLE IF EXISTS cat;
                CREATE TABLE cat (
                  cat_id int(8) auto_increment,
                  color varchar(50) NOT NULL,
                  name varchar(50) NOT NULL,
                  PRIMARY KEY (cat_id)
                );
            ]]>
        </sql>

        <!-- Run middlegen to generate Cat POJO -->
        <ant dir="../../../${app.name}/extras/appgen" target="install-detailed">
            <property name="appgen.type" value="table"/>
            <property name="object.name" value="cat"/>
        </ant>

        <!-- Add the mapping file for Cat to applicationContext-hibernate.xml -->
        <replace dir="../../../${app.name}/src">
            <include name="**/applicationContext-hibernate.xml"/>
            <replacetoken><![CDATA[<value>com/wiz/ipg/model/Role.hbm.xml</value>]]></replacetoken>
            <replacevalue><![CDATA[<value>com/wiz/ipg/model/Cat.hbm.xml</value>
                <value>com/wiz/ipg/model/Role.hbm.xml</value>]]></replacevalue>
        </replace>

        <!-- Test installation -->
        <ant dir="../../../${app.name}" target="setup-db" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="test-all" inheritAll="false"/>
    </target>
</project>
