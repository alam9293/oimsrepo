<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Batch Issued Card" type="JDBC" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="ACCOUNT_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="ACCOUNTNAMECODE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="START_CARD_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="END_CARD_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="NUMBER_OF_DIGIT" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>select
  acct.account_name, 
  case when acct.cust_no is not NULL then '-'
  else acct.account_name || '(' || acct.code  ||')' end AccountNameCode,
  prod.start_card_no, 
  prod.end_card_no,
  number_of_digit
from
  amtb_account acct
   inner join (select
                pstart.account_no,
                pstart.product_type_id,
                pstart.number_of_digit number_of_digit,
                lpad(pstart.card_no, pstart.number_of_digit, '0') start_card_no, 
                lpad(min(pend.card_no), pstart.number_of_digit, '0') end_card_no
       
              from 
                (select p1.account_no, p1.card_no,p1.product_type.number_of_digit,p1.product_type_id
                from (select to_number(card_no) card_no,product_type_id, account_no,issue_date from pmtb_product) p1
                  left join (select to_number(card_no) card_no, account_no,product_type_id,issue_date from pmtb_product) p2
                    on p2.account_no = p1.account_no
                   -- and p1.product_type_id=p2.product_type_id
                    and p1.card_no = p2.card_no+1
                  left join pmtb_product_type product_type on  
                   p1.product_type_id=product_type.product_type_id
                where p2.card_no is null
and
(('${5. Issue Start Date#date}' is null and '${6. Issue End Date#date}' is null)or(p1.issue_date between to_date('${5. Issue Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${6. Issue End Date#date}' is null then to_date('${5. Issue Start Date#date}} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_date('${6. Issue End Date#date}} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end)) 

 


) pstart
                inner join (select p1.account_no, p1.card_no,p1.product_type.number_of_digit,p1.product_type_id
                            from (select to_number(card_no) card_no, account_no,product_type_id from pmtb_product) p1
                              left join (select to_number(card_no) card_no, account_no ,product_type_id from pmtb_product) p2
                                on p2.account_no = p1.account_no
                                and p1.card_no = p2.card_no-1
                                left join pmtb_product_type product_type on  
                            p1.product_type_id=product_type.product_type_id
                            where p2.card_no is null) pend
                  on pend.account_no = pstart.account_no
                  and pstart.card_no &lt;= pend.card_no
              group by
                pstart.account_no,
                pstart.card_no,
                pstart. number_of_digit,
                pstart.product_type_id
              ) prod
    on prod.account_no = acct.account_no
    and prod.product_type_id='${2. Product Type#choice(CC,OV,FV)#MASTER:PT}'
    and ( ('${3. Card No Start}') is null or (prod.start_card_no&gt;='${3. Card No Start}')) 
    and ( ('${4. Card No End}') is null or ( prod.start_card_no&lt;='${4. Card No End}'))

    inner join amtb_acct_main_contact account_main_contact
    on account_main_contact.account_no=acct.account_no
    and account_main_contact.contact_person_no='${1. Contact Person No}'
    and account_main_contact.main_contact_type='S'
    
  -- inner join pmtb_product product_temp
  -- on prod.account_no=acct.account_no

 where
 
acct.account_no in

 (
select ACCOUNT_NO from AMTB_ACCOUNT
    where CUST_NO like '%${01a. Account No#acctsearch#custId}%' and ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and CUST_NO is not null and '${01c. Division#acctsearch#div}' is null
union
select child.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and child.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and '${01d. Department#acctsearch#dept}' is null
union
select grand.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    left join AMTB_ACCOUNT grand on child.ACCOUNT_NO = grand.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and grand.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and ('${01d. Department#acctsearch#dept}' is null or grand.ACCOUNT_NO = '${01d. Department#acctsearch#dept}')

)

            

order by
  prod.account_no,
  prod.start_card_no</ds:sql>
  </ds:jdbc>
</ds:datasource>

