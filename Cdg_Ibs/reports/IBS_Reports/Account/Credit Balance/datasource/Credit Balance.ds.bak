<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Credit Balance" type="JDBC" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="ACCOUNT_NO" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CUST_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="PARENTACCOUNTNAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="DIVNAMECODE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="DEPTNAMECODE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MAIN_CONTACT_ADDRESS" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MAIN_CONTACT_PHONES" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MAIN_CONTACT_EMAIL" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CONTACT_PERSONS" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CREDIT_LIMIT" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CREDIT_BALANCE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CARD_HOLDER_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CARD_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="Yes" read-only="Yes" auto-commit="Yes">
    <ds:sql>select 

--Account Info
parent_account.account_no,parent_account.cust_no,parent_account.account_name ParentAccountName,
child_account.account_no,

case when child_account.code is not null then
(child_account.account_name ||'('||child_account.code||')')
else child_account.account_name
end DivNameCode,
grandchild_account.account_no,

case when grandchild_account.code is not null then
(grandchild_account.account_name ||'('||grandchild_account.code||')') 
else grandchild_account.account_name
end
DeptNameCode,







account_contact_person.main_contact_address,
account_contact_person.main_contact_phones,
account_contact_person.main_contact_email,

case when account_contact_person.sub_contact_name is not NULL then
   (account_contact_person.main_contact_name|| ' / ' ||account_contact_person.sub_contact_name)
else  account_contact_person.main_contact_name
end contact_persons,

--account.account_no,
--account.credit_limit,
--account.credit_balance,
productAndAccount.credit_limit,
productAndAccount.credit_balance, 
productAndAccount.card_holder_name,
productAndAccount.card_no

from 
 amtb_account account

inner join
(select  max(effective_dt),account_no from amtb_acct_status where acct_status='A' and effective_dt&lt; current_timestamp  group by account_no ) status on 
account.account_no=status.account_no



inner join (select account_no, contact_person_no from amtb_acct_main_contact where main_contact_type='B') mainBilling
   on mainBilling.account_no=account.account_no
   
--join with account_contact_person table

inner join
(select
contact_person.contact_person_no,
contact_person.account_no,
case when main_contact_salution_master.master_value is not NULL then
  (main_contact_salution_master.master_value|| ' ' ||contact_person.main_contact_name)
  else contact_person.main_contact_name end main_contact_name,

case when sub_contact_salution_master.master_value is not NULL then
  (sub_contact_salution_master.master_value || ' ' || contact_person.sub_contact_name)
  else contact_person.sub_contact_name end sub_contact_name,
  
case when contact_person.main_contact_email is NULL then '-' else contact_person.main_contact_email  End main_contact_email,
--case when contact_person.sub_contact_email is NULL then '-' else contact_person.main_contact_email  End sub_contact_email,

concat(concat((case when contact_person.main_contact_tel is NULL then '' else  contact_person.main_contact_tel   End )
,(case when (contact_person.main_contact_tel is NULL or contact_person.main_contact_mobile is Null) then '' else  ' ,'  End ))
,(case when contact_person.main_contact_mobile is NULL then '' else contact_person.main_contact_mobile  End ))main_contact_phones,

(case when contact_person.address_block is NULL     then '' else (contact_person.address_block || ',') End ) ||
 (case when contact_person.address_street is NULL   then '' else (contact_person.address_street || ',')   End )||
(case when contact_person.address_building is NULL  then '' else (contact_person.address_building || ' ,')  End )||
(case when contact_person.address_country is NULL   then '' else ( mstb_master_table.master_value||',' )  End )||
(case when contact_person.address_postal is NULL    then '' else  contact_person.address_postal   End ) main_contact_address

from amtb_contact_person contact_person 
   left join mstb_master_table 
   on mstb_master_table.master_no=contact_person.address_country
   left join mstb_master_table main_contact_salution_master
   on contact_person.main_contact_sal=main_contact_salution_master.master_no
   left join mstb_master_table sub_contact_salution_master
   on contact_person.sub_contact_sal=sub_contact_salution_master.master_no
   
   ) account_contact_person
  
 on mainBilling.contact_person_no=account_contact_person.contact_person_no
--end of code for contact deatails

right join
--start code

(select account_no,credit_limit,credit_balance,card_no,card_holder_name from (

( select account_no,credit_limit,credit_balance,card_no,card_holder_name from pmtb_product
where (('${02. Credit Balance}' is null) or (credit_balance&lt; '${02. Credit Balance}' and credit_balance is not null))
and current_status not in ('T')
and account_no in (


select ACCOUNT_NO from AMTB_ACCOUNT
    where CUST_NO like '%${01a. Account No#acctsearch#custId}%' and ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and CUST_NO is not null and '${01c. Division#acctsearch#div}' is null
union
select child.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and child.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and '${01d. Department#acctsearch#dept}' is null
union
select grand.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    left join AMTB_ACCOUNT grand on child.ACCOUNT_NO = grand.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and grand.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and ('${01d. Department#acctsearch#dept}' is null or grand.ACCOUNT_NO = '${01d. Department#acctsearch#dept}')


)
)
union all
(select tempAccount.account_no,credit_limit,credit_balance,card_holder_name,card_no from (
( select account_no,credit_limit,credit_balance from amtb_account
where (('${02. Credit Balance}' is null) or (credit_balance&lt;'${02. Credit Balance}' and credit_balance is not null))
and account_no in (


select ACCOUNT_NO from AMTB_ACCOUNT
    where CUST_NO like '%${01a. Account No#acctsearch#custId}%' and ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and CUST_NO is not null and '${01c. Division#acctsearch#div}' is null
union
select child.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and child.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and '${01d. Department#acctsearch#dept}' is null
union
select grand.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    left join AMTB_ACCOUNT grand on child.ACCOUNT_NO = grand.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and grand.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and ('${01d. Department#acctsearch#dept}' is null or grand.ACCOUNT_NO = '${01d. Department#acctsearch#dept}')

)) tempAccount 
left join
(select card_holder_name,card_no,account_no from pmtb_product where account_no is null) tempProduct
on tempAccount.account_no=tempProduct.account_no
))

))
 productAndAccount
--end of code

on productAndAccount.account_no=account.account_no

--JOIN WIHT THREE LEVELS OF ACCOCOUNTS--
--start


left join 
(select account_no,account_name,parent_no,account_category,code from amtb_account where account_category ='DEPT'  and account_no in (
select account_no from amtb_account
)) grandchild_account 
on  productAndAccount.account_no=grandchild_account.account_no 

left join (select code,account_no,account_name,parent_no,account_category from amtb_account where account_category in ('SAPP','DIV') and  ( account_no in (
select account_no from amtb_account
) or account_no in (select parent_no from amtb_account where account_no in (


select ACCOUNT_NO from AMTB_ACCOUNT
    where CUST_NO like '%${01a. Account No#acctsearch#custId}%' and ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and CUST_NO is not null and '${01c. Division#acctsearch#div}' is null
union
select child.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and child.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and '${01d. Department#acctsearch#dept}' is null
union
select grand.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    left join AMTB_ACCOUNT grand on child.ACCOUNT_NO = grand.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and grand.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and ('${01d. Department#acctsearch#dept}' is null or grand.ACCOUNT_NO = '${01d. Department#acctsearch#dept}')


)))) child_account 
on (child_account.account_no=grandchild_account.parent_no or child_account.account_no=productAndAccount.account_no)
left join
(select account_no,account_name,cust_no from amtb_account where  account_category in ('APP','CORP') and ((account_no in (select parent_no from amtb_account where account_no in (


select ACCOUNT_NO from AMTB_ACCOUNT
    where CUST_NO like '%${01a. Account No#acctsearch#custId}%' and ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and CUST_NO is not null and '${01c. Division#acctsearch#div}' is null
union
select child.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and child.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and '${01d. Department#acctsearch#dept}' is null
union
select grand.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    left join AMTB_ACCOUNT grand on child.ACCOUNT_NO = grand.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and grand.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and ('${01d. Department#acctsearch#dept}' is null or grand.ACCOUNT_NO = '${01d. Department#acctsearch#dept}')


))) or ( account_no in (


select ACCOUNT_NO from AMTB_ACCOUNT
    where CUST_NO like '%${01a. Account No#acctsearch#custId}%' and ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and CUST_NO is not null and '${01c. Division#acctsearch#div}' is null
union
select child.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and child.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and '${01d. Department#acctsearch#dept}' is null
union
select grand.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    left join AMTB_ACCOUNT grand on child.ACCOUNT_NO = grand.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and grand.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and ('${01d. Department#acctsearch#dept}' is null or grand.ACCOUNT_NO = '${01d. Department#acctsearch#dept}')

) or account_no in (select parent_no from amtb_account where account_no in (select parent_no from amtb_account where account_no in (


select ACCOUNT_NO from AMTB_ACCOUNT
    where CUST_NO like '%${01a. Account No#acctsearch#custId}%' and ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and CUST_NO is not null and '${01c. Division#acctsearch#div}' is null
union
select child.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and child.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and '${01d. Department#acctsearch#dept}' is null
union
select grand.ACCOUNT_NO from AMTB_ACCOUNT acct
    left join AMTB_ACCOUNT child on acct.ACCOUNT_NO = child.PARENT_NO
    left join AMTB_ACCOUNT grand on child.ACCOUNT_NO = grand.PARENT_NO
    where acct.CUST_NO like '%${01a. Account No#acctsearch#custId}%' and acct.ACCOUNT_NAME like '%${01b. Name#acctsearch#custName}%' and grand.ACCOUNT_NO is not null and ('${01c. Division#acctsearch#div}' is null or child.ACCOUNT_NO = '${01c. Division#acctsearch#div}') and ('${01d. Department#acctsearch#dept}' is null or grand.ACCOUNT_NO = '${01d. Department#acctsearch#dept}')


))))) ) parent_account 
on
(child_account.parent_no=parent_account.account_no or parent_account.account_no=productAndAccount.account_no)

 order by 
case when '${03. Sort By#choice(CN,DIVN,DEPTN)#NC:CARD_HOLDER_ORDER:REQUIRED}' = 'CN' then productAndAccount.card_holder_name
when '${03. Sort By#choice(CN,DIVN,DEPTN)#NC:CARD_HOLDER_ORDER:REQUIRED}' = 'DIVN' then child_account.account_name else 
grandchild_account.account_name end</ds:sql>
  </ds:jdbc>
</ds:datasource>

