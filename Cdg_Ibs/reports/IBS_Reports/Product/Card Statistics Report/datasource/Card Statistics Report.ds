<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Card Statistics Report" type="JDBC" path="/IBS_Reports/Product/Card Statistics Report/datasource/Card Statistics Report.ds" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="CUST_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="ACCOUNT_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CLOSED_DATE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TERMINATED_DATE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="SUSPEND_DATE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="ACTIVE_PRODUCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="LOST_PRODUCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TERMINATED_PRODUCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="FAULTY_PRODUCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="SUSPEND_PRODUCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="PARENT_SUSPEND_PRODUCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="USED_PRODUCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TOTAL_INACTIVE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TOTAL" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security name="" />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>select cust_no, account_name, to_char(closed_status.EFFECTIVE_DT, 'dd/mm/yyyy') as closed_date, to_char(terminated_status.EFFECTIVE_DT, 'dd/mm/yyyy') as terminated_date,
    case when current_acct_status.ACCT_STATUS = 'S' then to_char(current_acct_status.EFFECTIVE_DT, 'dd/mm/yyyy') else null end as suspend_date,
    products.ACTIVE_PRODUCTS, products.CARD_LOST as LOST_PRODUCTS, products.TERMINATED_PRODUCTS, products.FAULTY as FAULTY_PRODUCTS, products.SUSPEND_PRODUCTS, products.PARENT_SUSPEND_PRODUCTS,
    products.USED_PRODUCTS, products.CARD_LOST + products.TERMINATED_PRODUCTS + products.FAULTY + products.SUSPEND_PRODUCTS + products.PARENT_SUSPEND_PRODUCTS as TOTAL_INACTIVE,
    products.CARD_LOST + products.TERMINATED_PRODUCTS + products.FAULTY + products.SUSPEND_PRODUCTS + products.PARENT_SUSPEND_PRODUCTS + products.ACTIVE_PRODUCTS as TOTAL from AMTB_ACCOUNT acct
    left join AMTB_ACCT_STATUS closed_status on closed_status.ACCOUNT_NO = acct.ACCOUNT_NO and closed_status.ACCT_STATUS = 'C'
    left join AMTB_ACCT_STATUS terminated_status on terminated_status.ACCOUNT_NO = acct.ACCOUNT_NO and terminated_status.ACCT_STATUS = 'T'
    inner join (select ACCOUNT_NO, max(EFFECTIVE_DT) last_effective_dt from AMTB_ACCT_STATUS where EFFECTIVE_DT &lt; current_timestamp group by ACCOUNT_NO) last_acct_status on acct.ACCOUNT_NO = last_acct_status.ACCOUNT_NO and acct.CUST_NO is not null
    inner join AMTB_ACCT_STATUS current_acct_status on acct.ACCOUNT_NO = current_acct_status.ACCOUNT_NO and current_acct_status.EFFECTIVE_DT = last_acct_status.LAST_EFFECTIVE_DT
    inner join (
    select acct.ACCOUNT_NO,
    nvl(active.ACTIVE_PRODUCTS, 0) as ACTIVE_PRODUCTS,
    nvl(active.TERMINATED_PRODUCTS, 0) as TERMINATED_PRODUCTS,
    nvl(active.SUSPEND_PRODUCTS, 0) as SUSPEND_PRODUCTS,
    nvl(active.PARENT_SUSPEND_PRODUCTS, 0) as PARENT_SUSPEND_PRODUCTS,
    nvl(active.USED_PRODUCTS, 0) as USED_PRODUCTS,
    nvl(card_lost_faulty.CARD_LOST, 0) as CARD_LOST,
    nvl(card_lost_faulty.FAULTY, 0) as FAULTY from AMTB_ACCOUNT acct
    left join (
select case when acct.CUST_NO is not null then acct.ACCOUNT_NO when parent.CUST_NO is not null then parent.ACCOUNT_NO else grand.ACCOUNT_NO end as account_no,
    count(case when product_status.STATUS_TO = 'A' then product.PRODUCT_NO else null end) as active_products,
    count(case when product_status.STATUS_TO = 'T' and master.MASTER_TYPE &lt;&gt; 'RR' and master.MASTER_CODE not in ('CL', 'FD') then product.PRODUCT_NO else null end) as terminated_products,
    count(case when product_status.STATUS_TO = 'S' then product.PRODUCT_NO else null end) as suspend_products,
    count(case when product_status.STATUS_TO = 'PS' then product.PRODUCT_NO else null end) as parent_suspend_products,
    count(case when product_status.STATUS_TO = 'U' then product.PRODUCT_NO else null end) as used_products
    from PMTB_PRODUCT product
    inner join (select PRODUCT_NO, max(STATUS_DT) as last_product_status_dt from PMTB_PRODUCT_STATUS where STATUS_DT &lt; to_timestamp('${01. Product Status Date#date#REQUIRED} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') group by PRODUCT_NO) last_product_status on product.PRODUCT_NO = last_product_status.PRODUCT_NO
    inner join PMTB_PRODUCT_STATUS product_status on product_status.PRODUCT_NO = product.PRODUCT_NO and product_status.STATUS_DT = last_product_status.LAST_PRODUCT_STATUS_DT
    inner join AMTB_ACCOUNT acct on acct.ACCOUNT_NO = product.ACCOUNT_NO
    left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.ACCOUNT_NO
    left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.ACCOUNT_NO
    left join MSTB_MASTER_TABLE master on product_status.STATUS_REASON = master.MASTER_NO and product_status.STATUS_TO = 'T'
    where product.PRODUCT_TYPE_ID = '${10. Product Type#choice(CC,OV,FV)#MASTER:PT3:REQUIRED}'
    and (('${02. Issue Start Date#date}' is null and '${03. Issue End Date#date}' is null)or(product.issue_date between to_timestamp('${02. Issue Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${03. Issue End Date#date}' is null then to_timestamp('${02. Issue Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${03. Issue End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    and (('${04. Termination Start Date#date}' is null and '${05. Termination End Date#date}' is null)or(product_status.STATUS_TO = 'T' and product_status.STATUS_DT between to_timestamp('${04. Termination Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${05. Termination End Date#date}' is null then to_timestamp('${04. Termination Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${05. Termination End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    and exists (select 1 from PMTB_PRODUCT_STATUS status where product.PRODUCT_NO = status.PRODUCT_NO and (('${06. Suspension Start Date#date}' is null and '${07. Suspension End Date#date}' is null)or(STATUS_TO = 'S' and status_dt between to_timestamp('${06. Suspension Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${07. Suspension End Date#date}' is null then to_timestamp('${06. Suspension Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${07. Suspension End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end)))
    and exists (select 1 from PMTB_PRODUCT_REPLACEMENT replace where (('${08. Replacement Start Date#date}' is null and '${09. Replacement End Date#date}' is null)or(product.PRODUCT_NO = replace.PRODUCT_NO and replace.replacement_date between to_timestamp('${08. Replacement Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${09. Replacement End Date#date}' is null then to_timestamp('${08. Replacement Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${09. Replacement End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end)))
    and (('${11. Product Status#choice(A,S)#NC:PRODUCT_STATUS:A}' is null) or ( product_status.status_to='${11. Product Status#choice(A,S)#NC:PRODUCT_STATUS:A}'))
    group by case when acct.CUST_NO is not null then acct.ACCOUNT_NO when parent.CUST_NO is not null then parent.ACCOUNT_NO else grand.ACCOUNT_NO end
    ) active on acct.ACCOUNT_NO = active.ACCOUNT_NO
    left join (
select case when acct.CUST_NO is not null then acct.ACCOUNT_NO when parent.CUST_NO is not null then parent.ACCOUNT_NO else grand.ACCOUNT_NO end as account_no, sum(case when reason.MASTER_CODE = 'CL' then 1 else 0 end) as card_lost, sum(case when reason.MASTER_CODE &lt;&gt; 'CL' then 1 else 0 end) as faulty
    from PMTB_PRODUCT_REPLACEMENT replace
    inner join MSTB_MASTER_TABLE reason on replace.REPLACEMENT_REASON = reason.MASTER_NO and reason.MASTER_TYPE = 'RR' and (('${08. Replacement Start Date#date}' is null and '${09. Replacement End Date#date}' is null)or(replace.replacement_date between to_timestamp('${08. Replacement Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${09. Replacement End Date#date}' is null then to_timestamp('${08. Replacement Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${09. Replacement End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    inner join PMTB_PRODUCT product on replace.PRODUCT_NO = product.PRODUCT_NO and product.PRODUCT_TYPE_ID = '${10. Product Type#choice(CC,OV,FV)#MASTER:PT3:REQUIRED}'
    inner join (select PRODUCT_NO, max(STATUS_DT) as last_product_status_dt from PMTB_PRODUCT_STATUS where STATUS_DT &lt; to_timestamp('${01. Product Status Date#date#REQUIRED} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') group by PRODUCT_NO) last_product_status on product.PRODUCT_NO = last_product_status.PRODUCT_NO
    inner join PMTB_PRODUCT_STATUS product_status on product_status.PRODUCT_NO = product.PRODUCT_NO and product_status.STATUS_DT = last_product_status.LAST_PRODUCT_STATUS_DT
    inner join AMTB_ACCOUNT acct on product.ACCOUNT_NO = acct.ACCOUNT_NO
    left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.ACCOUNT_NO
    left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.ACCOUNT_NO
    where (('${02. Issue Start Date#date}' is null and '${03. Issue End Date#date}' is null)or(product.issue_date between to_timestamp('${02. Issue Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${03. Issue End Date#date}' is null then to_timestamp('${02. Issue Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${03. Issue End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    and (('${04. Termination Start Date#date}' is null and '${05. Termination End Date#date}' is null)or(product_status.STATUS_TO = 'T' and product_status.STATUS_DT between to_timestamp('${04. Termination Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${05. Termination End Date#date}' is null then to_timestamp('${04. Termination Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${05. Termination End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    and (('${06. Suspension Start Date#date}' is null and '${07. Suspension End Date#date}' is null)or(STATUS_TO = 'S' and status_dt between to_timestamp('${06. Suspension Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${07. Suspension End Date#date}' is null then to_timestamp('${06. Suspension Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${07. Suspension End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    and exists (select 1 from PMTB_PRODUCT_STATUS status where product.PRODUCT_NO = status.PRODUCT_NO and (('${06. Suspension Start Date#date}' is null and '${07. Suspension End Date#date}' is null)or(STATUS_TO = 'S' and status_dt between to_timestamp('${06. Suspension Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and case when '${07. Suspension End Date#date}' is null then to_timestamp('${06. Suspension Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_timestamp('${07. Suspension End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end)))
    and (('${11. Product Status#choice(A,S)#NC:PRODUCT_STATUS:A}' is null) or ( product_status.status_to='${11. Product Status#choice(A,S)#NC:PRODUCT_STATUS:A}'))
    group by case when acct.CUST_NO is not null then acct.ACCOUNT_NO when parent.CUST_NO is not null then parent.ACCOUNT_NO else grand.ACCOUNT_NO end
    ) card_lost_faulty on acct.ACCOUNT_NO = card_lost_faulty.ACCOUNT_NO
    where acct.CUST_NO is not null
    and (nvl(active.ACTIVE_PRODUCTS, 0) &gt; 0 or nvl(active.TERMINATED_PRODUCTS, 0) &gt; 0 or nvl(active.SUSPEND_PRODUCTS, 0) &gt; 0 or nvl(active.PARENT_SUSPEND_PRODUCTS, 0) &gt; 0 or nvl(active.USED_PRODUCTS, 0) &gt; 0 or nvl(card_lost_faulty.CARD_LOST, 0) &gt; 0 or nvl(card_lost_faulty.FAULTY, 0) &gt; 0)
    ) products on products.ACCOUNT_NO = acct.ACCOUNT_NO
    where (('${12. Account Status#choice(A,S)#NC:PRODUCT_STATUS:A}' is null) or ( current_acct_status.ACCT_STATUS='${12. Account Status#choice(A,S)#NC:PRODUCT_STATUS:A}'))
    order by to_number(acct.CUST_NO), acct.ACCOUNT_NAME</ds:sql>
  </ds:jdbc>
</ds:datasource>

