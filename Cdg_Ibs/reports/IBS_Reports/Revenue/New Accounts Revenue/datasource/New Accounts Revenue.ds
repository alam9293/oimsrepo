<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="New Accounts Revenue" type="JDBC" path="/IBS_Reports/Revenue/New Accounts Revenue/datasource/New Accounts Revenue.ds" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="CUST_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="ACCOUNT_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CREATED_DT" type="Timestamp">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="SALESPERSON_NO" type="Double">
      <ds:attribute name="Nullable" nullable="no" />
    </ds:column>
    <ds:column name="NAME" type="String">
      <ds:attribute name="Nullable" nullable="no" />
    </ds:column>
    <ds:column name="TYPES" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="JAN_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="FEB_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MAR_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="APR_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MAY_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="JUN_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="JUL_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="AUG_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="SEP_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="OCT_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="NOV_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="DEC_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TOTAL_USAGE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security name="" />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>select acct.CUST_NO, acct.ACCOUNT_NAME, acct.CREATED_DT, sales.SALESPERSON_NO, sales.NAME, subscriptions.types,
    nvl(acct_usage.jan_usage, 0) as jan_usage,
    nvl(acct_usage.feb_usage, 0) as feb_usage,
    nvl(acct_usage.mar_usage, 0) as mar_usage,
    nvl(acct_usage.apr_usage, 0) as apr_usage,
    nvl(acct_usage.may_usage, 0) as may_usage,
    nvl(acct_usage.jun_usage, 0) as jun_usage,
    nvl(acct_usage.jul_usage, 0) as jul_usage,
    nvl(acct_usage.aug_usage, 0) as aug_usage,
    nvl(acct_usage.sep_usage, 0) as sep_usage,
    nvl(acct_usage.oct_usage, 0) as oct_usage,
    nvl(acct_usage.nov_usage, 0) as nov_usage,
    nvl(acct_usage.dec_usage, 0) as dec_usage,
    nvl(acct_usage.total_usage, 0) as total_usage
    from AMTB_ACCOUNT acct
    left join (
	select ACCOUNT_NO, listagg(PRODUCT_TYPE_ID, ',') within GROUP (order by product_type_id) as types from AMTB_SUBSC_TO group by ACCOUNT_NO
    ) subscriptions on acct.ACCOUNT_NO = subscriptions.ACCOUNT_NO
    left join (
		select 
			case when acct.CUST_NO is not null then acct.ACCOUNT_NO when parent.CUST_NO is not null then parent.ACCOUNT_NO else grand.ACCOUNT_NO end as acct_no,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '01' then header.NEW_TXN else 0 end) as jan_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '02' then header.NEW_TXN else 0 end) as feb_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '03' then header.NEW_TXN else 0 end) as mar_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '04' then header.NEW_TXN else 0 end) as apr_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '05' then header.NEW_TXN else 0 end) as may_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '06' then header.NEW_TXN else 0 end) as jun_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '07' then header.NEW_TXN else 0 end) as jul_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '08' then header.NEW_TXN else 0 end) as aug_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '09' then header.NEW_TXN else 0 end) as sep_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '10' then header.NEW_TXN else 0 end) as oct_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '11' then header.NEW_TXN else 0 end) as nov_usage,
			sum(case when to_char(header.INVOICE_DATE, 'mm') = '12' then header.NEW_TXN else 0 end) as dec_usage,
			sum(new_txn) as total_usage, acct_sales.SALESPERSON_NO
			from BMTB_INVOICE_HEADER header
			left join BMTB_INVOICE_DEPOSIT_TXN deposit on deposit.INVOICE_HEADER_NO = header.INVOICE_HEADER_NO
			inner join AMTB_ACCOUNT acct on acct.ACCOUNT_NO = header.ACCOUNT_NO and deposit.INVOICE_DEPOSIT_TXN_NO is null
			left join AMTB_ACCOUNT parent on parent.ACCOUNT_NO = acct.PARENT_NO
			left join AMTB_ACCOUNT grand on grand.ACCOUNT_NO = parent.PARENT_NO
			inner join AMTB_ACCT_SALESPERSON acct_sales on acct_sales.ACCOUNT_NO=(
				CASE 
					WHEN grand.account_no IS NOT NULL THEN grand.account_no
					WHEN parent.account_no IS NOT NULL THEN parent.account_no
					ELSE acct.account_no 
				END
			)
			inner join (
				select header.INVOICE_HEADER_NO, max(acct_sales.EFFECTIVE_DT_FROM) as last_effective_dt_from from BMTB_INVOICE_HEADER header
					inner join AMTB_ACCOUNT acct on header.ACCOUNT_NO = acct.ACCOUNT_NO
					left join AMTB_ACCOUNT parent on parent.ACCOUNT_NO = acct.PARENT_NO
					left join AMTB_ACCOUNT grand on grand.ACCOUNT_NO = parent.PARENT_NO
					
					inner join AMTB_ACCT_SALESPERSON acct_sales on acct_sales.ACCOUNT_NO=(
						CASE 
							WHEN grand.account_no IS NOT NULL THEN grand.account_no
							WHEN parent.account_no IS NOT NULL THEN parent.account_no
							ELSE acct.account_no 
						END
					)
					where (header.INVOICE_DATE+1) &gt; acct_sales.EFFECTIVE_DT_FROM
					group by header.INVOICE_HEADER_NO
			) last_acct_sales on header.INVOICE_HEADER_NO = last_acct_sales.INVOICE_HEADER_NO and acct_sales.EFFECTIVE_DT_FROM = last_acct_sales.last_effective_dt_from
		
		where ('${4. Usage Year#choice()#NC:PT:REQUIRED}' is null or to_char(header.INVOICE_DATE, 'YYYY') = '${4. Usage Year#choice()#NC:PT:REQUIRED}')-- and header.NEW_TXN &lt;&gt; 0
		group by case when acct.CUST_NO is not null then acct.ACCOUNT_NO when parent.CUST_NO is not null then parent.ACCOUNT_NO else grand.ACCOUNT_NO end,acct_sales.SALESPERSON_NO
    ) acct_usage on acct.ACCOUNT_NO = acct_usage.ACCT_NO
    inner join (
        select account_no, max(EFFECTIVE_DT_FROM) as LAST_EFFECTIVE_DT_FROM
            from AMTB_ACCT_SALESPERSON
            where systimestamp &gt;= EFFECTIVE_DT_FROM
            and (systimestamp &lt;= EFFECTIVE_DT_TO or EFFECTIVE_DT_TO is null)
            group by account_no
    ) last_acct_sales on last_acct_sales.ACCOUNT_NO = acct.ACCOUNT_NO
    inner join AMTB_ACCT_SALESPERSON acct_sales on acct_sales.ACCOUNT_NO = last_acct_sales.ACCOUNT_NO and acct_sales.EFFECTIVE_DT_FROM = last_acct_sales.LAST_EFFECTIVE_DT_FROM
    inner join MSTB_SALESPERSON sales on sales.SALESPERSON_NO = case when acct_usage.SALESPERSON_NO is null then acct_sales.SALESPERSON_NO else acct_usage.SALESPERSON_NO end
    inner join FMTB_AR_CONT_CODE_MASTER ar on ar.AR_CONTROL_CODE_NO = acct.AR_CONTROL_CODE_NO
    inner join FMTB_ENTITY_MASTER entity on ar.ENTITY_NO = entity.ENTITY_NO
    inner join (
		select ACCOUNT_NO, max(EFFECTIVE_DT) as latest from AMTB_ACCT_STATUS where EFFECTIVE_DT &lt; current_timestamp group by ACCOUNT_NO
    ) last_acct_status on last_acct_status.ACCOUNT_NO = acct.ACCOUNT_NO
    inner join AMTB_ACCT_STATUS acct_status on acct_status.ACCOUNT_NO = last_acct_status.ACCOUNT_NO and last_acct_status.latest = acct_status.EFFECTIVE_DT and ('${6. Account Status#choice()#NC:ACCOUNT_STATUS}' is null or acct_status.ACCT_STATUS = '${6. Account Status#choice()#NC:ACCOUNT_STATUS}')
    left join AMTB_CORPORATE_DETAIL corp_detail on acct.ACCOUNT_NO = corp_detail.ACCOUNT_NO
    left join AMTB_PERSONAL_DETAIL pers_detail on acct.ACCOUNT_NO = pers_detail.ACCOUNT_NO
    left join MSTB_MASTER_TABLE industry on case when corp_detail.INDUSTRY is not null then corp_detail.INDUSTRY else pers_detail.INDUSTRY end = industry.MASTER_NO
    where ('${1. Account Type#choice()#MASTER:AT:REQUIRED}' is null or acct.ACCT_TYPE_NO = '${1. Account Type#choice()#MASTER:AT:REQUIRED}')
    and (('${2. Joined Start Date#date}' is null and '${3. Joined End Date#date}' is null)or(acct.CREATED_DT between case when '${2. Joined Start Date#date}' is null then to_date('${3. Joined End Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') else to_date('${2. Joined Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') end and case when '${3. Joined End Date#date}' is null then to_date('${2. Joined Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_date('${3. Joined End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    and ('${5. Entity#choice()#MASTER:EM:REQUIRED}' is null or entity.ENTITY_NO = '${5. Entity#choice()#MASTER:EM:REQUIRED}')
    and ('${7. Business Nature#choice()#CC:IND}' is null or industry.MASTER_CODE = '${7. Business Nature#choice()#CC:IND}')
    and ('${8. Sales Person#choice()#MASTER:SP}' is null or sales.SALESPERSON_NO = '${8. Sales Person#choice()#MASTER:SP}')
    order by sales.SALESPERSON_NO, acct.CREATED_DT</ds:sql>
  </ds:jdbc>
</ds:datasource>

