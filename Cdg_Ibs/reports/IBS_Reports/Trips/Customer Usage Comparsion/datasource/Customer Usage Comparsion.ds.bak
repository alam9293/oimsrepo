<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Customer Usage Comparsion" type="JDBC" path="/IBS_Reports/Trips/Customer Usage Comparsion/datasource/Customer Usage Comparsion.ds" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="LAST_TRIPS" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="LAST_AMT" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="LAST_ADMIN_PERCENT" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="LAST_ADMIN_FEE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="LAST_GST" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="LAST_TOTAL" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIS_TRIPS" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIS_AMT" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIS_ADMIN_PERCENT" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIS_ADMIN_FEE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIS_GST" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIS_TOTAL" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security name="" />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>select name, 
    trim(to_char(sum(last_trips), '999,999,990')) as last_trips, 
    trim(to_char(sum(last_amt), '999,999,990.00')) as last_amt, 
    trim(to_char(avg(last_admin_percent), '999,999,990.00')) as last_admin_percent, 
    trim(to_char(sum(last_admin_fee), '999,999,990.00')) as last_admin_fee, 
    trim(to_char(sum(last_gst), '999,999,990.00')) as last_gst, 
    trim(to_char(sum(last_total), '999,999,990.00')) as last_total, 
    trim(to_char(sum(this_trips), '999,999,990')) as this_trips, 
    trim(to_char(sum(this_amt), '999,999,990.00')) as this_amt, 
    trim(to_char(avg(this_admin_percent), '999,999,990.00')) as this_admin_percent, 
    trim(to_char(sum(this_admin_fee), '999,999,990.00')) as this_admin_fee, 
    trim(to_char(sum(this_gst), '999,999,990.00')) as this_gst, 
    trim(to_char(sum(this_total), '999,999,990.00')) as this_total 
    from (select top.account_name || '(' || top.CUST_NO || ')' AS name,
               last_trips, 
               last_amt, 
               last_admin_percent, 
               last_admin_fee, 
               last_gst, 
               last_total, 
               this_trips, 
               this_amt, 
               this_admin_percent, 
               this_admin_fee, 
               this_gst, 
               this_total 
        from AMTB_ACCOUNT acct 
        left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.ACCOUNT_NO 
        left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.ACCOUNT_NO
        inner join AMTB_ACCOUNT top on (case when grand.cust_no is not null then grand.account_no when parent.cust_no is not null then parent.account_no else acct.account_no end) = top.account_no
   		inner join FMTB_AR_CONT_CODE_MASTER ar on top.ar_control_code_no = ar.ar_control_code_no
  		inner join FMTB_ENTITY_MASTER entity on ar.entity_no =entity.entity_no
        left join (select last_header.account_no, 
            sum(last_trip_count.TOTAL_NO_OF_TRIP) as last_trips, 
            sum(last_detail.NEW_TXN) as last_amt, 
            sum(last_detail.ADMIN_FEE) as last_admin_fee, 
            case when sum(last_detail.NEW_TXN) = 0 then 0 else (sum(last_detail.ADMIN_FEE) / sum(last_detail.NEW_TXN) * 100) end as last_admin_percent, 
            sum(last_detail.GST) as last_gst, 
            sum(last_detail.TOTAL_NEW) as last_total 
            from BMTB_INVOICE_DETAIL last_detail 
            inner join (SELECT detail.INVOICE_DETAIL_NO, 
                count(INVOICE_TXN_NO) as TOTAL_NO_OF_TRIP, 
                avg(distinct(txn.ADMIN_FEE_PERCENT)) as ADMIN_FEE_PERCENT 
                from BMTB_INVOICE_DETAIL detail 
                left join BMTB_INVOICE_TXN txn on detail.INVOICE_DETAIL_NO = txn.INVOICE_DETAIL_NO 
                where 
                --('${2. Product Type#choice()#MASTER:PT}' is null or '${2. Product Type#choice()#MASTER:PT}' = detail.PRODUCT_TYPE_ID) 
                (
                  		( '${2. Product Type#choice()#MASTER:PT}' is null and detail.PRODUCT_TYPE_ID is not null )
                  		or
                  		( '${2. Product Type#choice()#MASTER:PT}' is not null and '${2. Product Type#choice()#MASTER:PT}' = detail.PRODUCT_TYPE_ID )
               	)
                and new_txn &lt;&gt; 0
                group by detail.INVOICE_DETAIL_NO) last_trip_count on last_detail.INVOICE_DETAIL_NO = last_trip_count.INVOICE_DETAIL_NO 
                inner join BMTB_INVOICE_SUMMARY last_summary on last_detail.INVOICE_SUMMARY_NO = last_summary.INVOICE_SUMMARY_NO 
                inner join BMTB_INVOICE_HEADER last_header on last_summary.INVOICE_HEADER_NO = last_header.INVOICE_HEADER_NO and
                    last_header.INVOICE_DATE between add_months(to_date(substr('${1. Invoice Month/Year#date#MMMYY}', 0, 8) || '01 00:00:00', 'yyyy-mm-dd hh24:mi:ss'), -1) and 
                    add_months(last_day(to_date(substr('${1. Invoice Month/Year#date#MMMYY}', 0,8) || '01 23:59:59', 'yyyy-mm-dd hh24:mi:ss')), -1) 
                group by last_header.ACCOUNT_NO) last_month on last_month.account_no = acct.account_no 
            left join (select this_header.account_no, 
                sum(this_trip_count.TOTAL_NO_OF_TRIP) as this_trips, 
                sum(this_detail.NEW_TXN) as this_amt, 
                sum(this_detail.ADMIN_FEE) as this_admin_fee, 
                case when sum(this_detail.NEW_TXN) = 0 then 0 else (sum(this_detail.ADMIN_FEE) / sum(this_detail.NEW_TXN) * 100) end as this_admin_percent, 
                sum(this_detail.GST) as this_gst, 
                sum(this_detail.TOTAL_NEW) as this_total 
                from BMTB_INVOICE_DETAIL this_detail 
                inner join (SELECT detail.INVOICE_DETAIL_NO, 
                    count(INVOICE_TXN_NO) as TOTAL_NO_OF_TRIP, 
                    avg(distinct(txn.ADMIN_FEE_PERCENT)) as ADMIN_FEE_PERCENT 
                    from BMTB_INVOICE_DETAIL detail 
                    left join BMTB_INVOICE_TXN txn on detail.INVOICE_DETAIL_NO = txn.INVOICE_DETAIL_NO 
                    where 
                    --('${2. Product Type#choice()#MASTER:PT}' is null or '${2. Product Type#choice()#MASTER:PT}' = detail.PRODUCT_TYPE_ID) 
                    (
                  		( '${2. Product Type#choice()#MASTER:PT}' is null and detail.PRODUCT_TYPE_ID is not null )
                  		or
                  		( '${2. Product Type#choice()#MASTER:PT}' is not null and '${2. Product Type#choice()#MASTER:PT}' = detail.PRODUCT_TYPE_ID )
                    )
                    and new_txn &lt;&gt; 0
                    group by detail.INVOICE_DETAIL_NO) this_trip_count on this_detail.INVOICE_DETAIL_NO = this_trip_count.INVOICE_DETAIL_NO 
                    inner join BMTB_INVOICE_SUMMARY this_summary on this_detail.INVOICE_SUMMARY_NO = this_summary.INVOICE_SUMMARY_NO 
                    inner join BMTB_INVOICE_HEADER this_header on this_summary.INVOICE_HEADER_NO = this_header.INVOICE_HEADER_NO and
                        this_header.INVOICE_DATE between to_date(substr('${1. Invoice Month/Year#date#MMMYY}', 0, 8) || '01 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and 
                        last_day(to_date(substr('${1. Invoice Month/Year#date#MMMYY}', 0, 8) || '01 23:59:59', 'yyyy-mm-dd hh24:mi:ss')) 
                    group by this_header.ACCOUNT_NO) this_month on this_month.account_no = acct.account_no 
            where (last_month.last_trips is not null or this_month.this_trips is not null)
            and ('${4. Entity#choice(1,2,3)#MASTER:EM}' is null or entity.ENTITY_NO = '${4. Entity#choice(1,2,3)#MASTER:EM}')
            )
        group  by name 
        order  by case when '${3. Sort By#choice(CN, TOTAL)#NC:CUC_ORDER:REQUIRED}' = 'CN' then NAME else null end asc, case when '${3. Sort By#choice(CN, TOTAL)#NC:CUC_ORDER:REQUIRED}' = 'TOTAL' then THIS_TOTAL else null end desc</ds:sql>
  </ds:jdbc>
</ds:datasource>

