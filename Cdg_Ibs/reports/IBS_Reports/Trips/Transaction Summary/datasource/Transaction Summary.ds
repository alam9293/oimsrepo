<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Transaction Summary" type="JDBC" path="/IBS_Reports/Trips/Transaction Summary/datasource/Transaction Summary.ds" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="FIRST_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="SECOND_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIRD_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="SECOND_CODE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="THIRD_CODE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CARD_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CARD_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="PRODUCT_TYPE_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="NEW_TXN" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="ADMIN_FEE" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="GST" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TOTAL_NEW" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security name="" />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>select case when acct.cust_no is not null then acct.account_name when parent.cust_no is not null then parent.account_name else grand.account_name end as first_name,
    case when acct.cust_no is not null then null when parent.cust_no is not null then acct.account_name || ' (' || acct.code || ')' else parent.account_name || ' (' || parent.code || ')' end as second_name,
    case when acct.cust_no is not null then null when parent.cust_no is not null then null else acct.account_name || ' (' || acct.code || ')' end as third_name,
    case when acct.cust_no is not null then null when parent.cust_no is not null then acct.code else parent.code end as second_code,
    case when acct.cust_no is not null then null when parent.cust_no is not null then null else acct.code end as third_code,
    invoice.card_name, invoice.card_no, type.name as product_type_name, invoice.new_txn, invoice.admin_fee, invoice.gst, invoice.total_new from (select detail.card_no, detail.card_name, detail.account_no, detail.PRODUCT_TYPE_ID, detail.INVOICE_DETAIL_TYPE, sum(detail.NEW_TXN + nvl(detail.ISSUANCE_FEE, 0) + nvl(detail.CARD_REPLACEMENT, 0) + nvl(detail.SUBSCRIPTION_FEE, 0)) as new_txn, sum(detail.ADMIN_FEE) as admin_fee, sum(detail.GST + nvl(detail.ISSUANCE_FEE_GST, 0) + nvl(detail.CARD_REPLACEMENT_GST, 0) + nvl(detail.SUBSCRIPTION_FEE_GST, 0)) as gst, sum(detail.TOTAL_NEW + nvl(detail.ISSUANCE_FEE, 0) + nvl(detail.CARD_REPLACEMENT, 0) + nvl(detail.SUBSCRIPTION_FEE, 0) + nvl(detail.ISSUANCE_FEE_GST, 0) + nvl(detail.CARD_REPLACEMENT_GST, 0) + nvl(detail.SUBSCRIPTION_FEE_GST, 0)) as total_new from BMTB_INVOICE_DETAIL detail
    inner join BMTB_INVOICE_SUMMARY summary on detail.INVOICE_SUMMARY_NO = summary.INVOICE_SUMMARY_NO
    inner join BMTB_INVOICE_HEADER header on summary.INVOICE_HEADER_NO = header.INVOICE_HEADER_NO
    where header.INVOICE_NO = ${1. Invoice No} and detail.PRODUCT_TYPE_ID is not null and detail.product_type_id is not null and (detail.TOTAL_NEW &lt;&gt; 0 or detail.NEW_TXN &lt;&gt; 0 or detail.ADMIN_FEE &lt;&gt; 0 or detail.GST &lt;&gt; 0 or detail.SUBSCRIPTION_FEE &lt;&gt; 0 or detail.ISSUANCE_FEE &lt;&gt; 0 or detail.CARD_REPLACEMENT &lt;&gt; 0)
    group by detail.card_no, detail.card_name, detail.account_no, detail.PRODUCT_TYPE_ID, detail.INVOICE_DETAIL_TYPE) invoice
    left join PMTB_PRODUCT product on invoice.card_no = product.card_no
    left join PMTB_PRODUCT_TYPE type on invoice.PRODUCT_TYPE_ID = type.PRODUCT_TYPE_ID
    left join AMTB_ACCOUNT acct on acct.account_no = invoice.account_no
    left join AMTB_ACCOUNT parent on parent.account_no = acct.parent_no
    left join AMTB_ACCOUNT grand on grand.account_no = parent.parent_no
    order by case when acct.cust_no is not null then acct.account_name when parent.cust_no is not null then parent.account_name else grand.account_name end,
        case when acct.cust_no is not null then null when parent.cust_no is not null then acct.code else parent.code end nulls first,
        case when acct.cust_no is not null then null when parent.cust_no is not null then null else acct.code end nulls first, invoice.card_no</ds:sql>
  </ds:jdbc>
</ds:datasource>

