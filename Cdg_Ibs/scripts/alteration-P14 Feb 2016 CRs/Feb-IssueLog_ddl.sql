SET PAGES 5000
SET LINE  10000
SET TRIMSPOOL ON
set echo on

column dt new_value new_dt
column ext new_value new_ext
select  sys_context('userenv','instance_name') || '_febIssueLogs_ddl_' || to_char(sysdate,'YYYYMMDDHH24MISS') dt,'.txt' ext from dual;
SPOOL  &new_dt&new_ext
set define off
alter session set current_schema=ibssys;



/*-- 05/04/2016  #103 CR/0116/040 Invoice Reminder Email Audit  START */
CREATE TABLE SATB_EMAIL_AUDIT_LOG (
	EMAIL_LOG_ID NUMBER(8) NOT NULL,
	EMAIL_FROM VARCHAR2(500) NOT NULL,
	EMAIL_TO VARCHAR2(500) NOT NULL,
	SEND_DT TIMESTAMP NOT NULL,
	SUB_HEADER VARCHAR2(100),
	JOB VARCHAR2(50),
	STATUS VARCHAR2(8),
	STATUS_REMARKS VARCHAR2(500),
	CREATED_BY VARCHAR2(40)
);

-- Create SEQUENCE
CREATE SEQUENCE  "SASQ_EMAIL_AUDIT_LOG"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;

-- Create Index
CREATE INDEX SAIX_EMAIL_AUDIT_LOG__EMAILTO ON SATB_EMAIL_AUDIT_LOG(EMAIL_TO);
CREATE INDEX SAIX_EMAIL_AUDIT_LOG__SEND_DT ON SATB_EMAIL_AUDIT_LOG(SEND_DT);
CREATE INDEX SAIX_EMAIL_AUDIT_LOG__SUB_HDR ON SATB_EMAIL_AUDIT_LOG(SUB_HEADER);
CREATE INDEX SAIX_EMAIL_AUDIT_LOG__JOB ON SATB_EMAIL_AUDIT_LOG(JOB);
CREATE INDEX SAIX_EMAIL_AUDIT_LOG__STATUS ON SATB_EMAIL_AUDIT_LOG(STATUS);

COMMENT ON COLUMN SATB_EMAIL_AUDIT_LOG.EMAIL_FROM IS 'Email Address Send From ';
COMMENT ON COLUMN SATB_EMAIL_AUDIT_LOG.EMAIL_TO IS 'Email Address Send To';
COMMENT ON COLUMN SATB_EMAIL_AUDIT_LOG.SEND_DT IS 'Send DateTime';
COMMENT ON COLUMN SATB_EMAIL_AUDIT_LOG.SUB_HEADER IS 'Email Subject Header';
COMMENT ON COLUMN SATB_EMAIL_AUDIT_LOG.JOB IS 'Remarks';
COMMENT ON COLUMN SATB_EMAIL_AUDIT_LOG.STATUS IS 'Email Send Status; Send Successful or Fail';
COMMENT ON COLUMN SATB_EMAIL_AUDIT_LOG.STATUS_REMARKS IS 'Status Remarks if fail, reasons';

/*-- 05/04/2016  #103 CR/0116/040 Invoice Reminder Email Audit  END */



/*-- 05/04/2016  #107  CR/0116/010 New Non Billable Payment Karhoo   START */

-- Create Commission SEQUENCE
CREATE SEQUENCE  "MSSQ_COMMISSION_NO"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE;

-- Create Mstb Acquirer Payment Commission Table
CREATE TABLE MSTB_ACQUIRER_PYMT_COMM (
	COMMISSION_NO NUMBER(8) NOT NULL,
	COMMISSION_VALUE NUMBER(12,2) NOT NULL,
	COMMISSION_TYPE VARCHAR2(5),
	EFFECTIVE_DT_FROM TIMESTAMP NOT NULL,
	EFFECTIVE_DT_TO TIMESTAMP,
	PYMT_TYPE_NO NUMBER(8) NOT NULL,
	CREATED_DT timestamp, 
    CREATED_BY varchar2(80), 
    UPDATED_DT timestamp, 
    UPDATED_BY varchar2(80)
);

COMMENT ON COLUMN MSTB_ACQUIRER_PYMT_COMM.COMMISSION_VALUE IS 'Commission Value';
COMMENT ON COLUMN MSTB_ACQUIRER_PYMT_COMM.COMMISSION_TYPE IS 'Commission Type (Pct or Fix) value was used';
COMMENT ON COLUMN MSTB_ACQUIRER_PYMT_COMM.EFFECTIVE_DT_FROM IS 'Effective Date From';
COMMENT ON COLUMN MSTB_ACQUIRER_PYMT_COMM.EFFECTIVE_DT_TO IS 'Effective Date To';

/*-- 05/04/2016  #107 CR/0116/010 New Non Billable Payment Karhoo   END */




/*-- 06/04/2016 #103 CR/0116/040 Invoice Reminder Email Audit  START */

alter table SATB_EMAIL_AUDIT_LOG modify job varchar2(200);

/*-- 06/04/2016 #103 CR/0116/040 Invoice Reminder Email Audit   END */



/*-- 06/04/2016  #107 CR/0116/010 New Non Billable Payment Karhoo   START */

 -- Add commission amt, type & value to tmtb Non billable
ALTER TABLE TMTB_NON_BILLABLE_TXN ADD (COMMISSION_AMT decimal(12,2) NULL);
ALTER TABLE TMTB_NON_BILLABLE_TXN ADD (COMMISSION_TYPE varchar2(5) NULL);
ALTER TABLE TMTB_NON_BILLABLE_TXN ADD (COMMISSION_VALUE decimal(12,2) NULL);

COMMENT ON COLUMN TMTB_NON_BILLABLE_TXN.COMMISSION_AMT IS 'Commission Amount ($)';
COMMENT ON COLUMN TMTB_NON_BILLABLE_TXN.COMMISSION_TYPE IS 'Commission Type (Pct or Fix) value was used';
COMMENT ON COLUMN TMTB_NON_BILLABLE_TXN.COMMISSION_VALUE IS 'Commission Value (the % Commission or fix value that was used for calculation for this txn)';
 
/*-- 06/04/2016  #107 CR/0116/010 New Non Billable Payment Karhoo   END */


/* 15/04/2016 Overdue Reminder  CHANGE DEFAULT OVERDUE REMINDER VALUE TO 'Y' START */
ALTER TABLE AMTB_ACCOUNT MODIFY ( OVERDUE_REMINDER DEFAULT 'Y');
/* 15/04/2016 Overdue Reminder  END */


spool off
