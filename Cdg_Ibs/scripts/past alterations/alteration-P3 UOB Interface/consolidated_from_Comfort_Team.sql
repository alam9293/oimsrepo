spool ibs_giro.log

set define off

-- version 0.01

/* ********************
 * UOB Giro Interface
 * ********************/
alter table Fmtb_Bank_Code add(
	IS_DEFAULT_GIRO_BANK char(1) default 'N' not null,
	BANK_ACCT_NAME VARCHAR2(80) default ' ' not null
);
 
create TABLE ITTB_GIRO_SETUP
(
   SETUP_NO number(8) PRIMARY KEY NOT NULL,
   ENTITY_NO number(8) NOT NULL,
   CUT_OFF_DAY number(2) NOT NULL,
   REQUEST_DAY number(2) NOT NULL,
   REQUEST_TIME number(2) NOT NULL,
   VALUE_DAY number(2) NOT NULL,
   INVOICE_GIRO_DAY number(2) NOT NULL,
   VERSION number(9) DEFAULT 0,
   CREATED_BY varchar2(80),
   CREATED_DT timestamp,
   UPDATED_BY varchar2(80),
   UPDATED_DT timestamp
);
CREATE INDEX ITTB_GIRO_SETUP_N1 ON ITTB_GIRO_SETUP(ENTITY_NO);
ALTER TABLE ITTB_GIRO_SETUP ADD CONSTRAINT ITTB_GIRO_SETUP_FK1 FOREIGN KEY (ENTITY_NO) REFERENCES FMTB_ENTITY_MASTER (ENTITY_NO) ENABLE;
create SEQUENCE ITTB_GIRO_SETUP_SQ1 MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;



create TABLE ITTB_GIRO_REQ (
   REQ_NO number(18) PRIMARY KEY NOT NULL,
   SETUP_NO number(8) NOT NULL,
   REQUEST_DATE date NOT NULL,
   REQUEST_TIME number(2) NOT NULL,
   VALUE_DATE date NOT NULL,
   CUTOFF_DATE date NOT NULL,
   STATUS varchar2(1) NOT NULL,
   VERSION number(8) DEFAULT 0,
   CREATED_BY varchar2(80),
   CREATED_DT timestamp,
   UPDATED_BY varchar2(80),
   UPDATED_DT timestamp
);
 

CREATE INDEX ITTB_GIRO_REQ_N1 ON ITTB_GIRO_REQ(REQUEST_DATE, REQUEST_TIME, STATUS);
ALTER TABLE ITTB_GIRO_REQ ADD CONSTRAINT ITTB_GIRO_REQ_FK1 FOREIGN KEY (SETUP_NO) REFERENCES ITTB_GIRO_SETUP (SETUP_NO) ENABLE;
create SEQUENCE ITTB_GIRO_REQ_SQ1 MINVALUE 1 MAXVALUE 999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;

CREATE TABLE ITTB_GIRO_UOB_HEADER(
	UOB_HEADER_NO number(18) PRIMARY KEY NOT NULL,
	REQ_NO number(18) NOT NULL,
	bank_code_no number(8) not null,
	VALUE_DATE date not null,
	GENERATION_DATE date not null,
	UPLOAD_DATE date,
	GIRO_FILE_NAME varchar2(10) not null,
	RETURN_FILE_NAME varchar2(11),
	OUTGOING_COUNT number(18) not null,
	OUTGOING_AMOUNT number(12,2) not null,
	INCOMING_SUCCESS_COUNT number(18),
	INCOMING_SUCCESS_AMOUNT number(12,2),
	INCOMING_REJECTED_COUNT number(18),
	INCOMING_REJECTED_AMOUNT number(12,2),	
	VERSION number(9) DEFAULT 0,
	CREATED_BY varchar2(80),
    CREATED_DT timestamp,
    UPDATED_BY varchar2(80),
    UPDATED_DT timestamp
);
ALTER TABLE ITTB_GIRO_UOB_HEADER ADD CONSTRAINT ITTB_GIRO_UOB_HEADER_FK1 FOREIGN KEY (REQ_NO) REFERENCES ITTB_GIRO_REQ (REQ_NO) ENABLE;
ALTER TABLE ITTB_GIRO_UOB_HEADER ADD CONSTRAINT ITTB_GIRO_UOB_HEADER_FK2 FOREIGN KEY (BANK_CODE_NO) REFERENCES Fmtb_Bank_Code (BANK_CODE_NO) ENABLE;
create SEQUENCE ITTB_GIRO_UOB_HEADER_SQ1 MINVALUE 1 MAXVALUE 999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;

CREATE TABLE ITTB_GIRO_UOB_REJECTED(
	UOB_REJECTED_NO number(18) PRIMARY KEY NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	BANK_CODE VARCHAR2(10) NOT NULL,
	BRANCH_CODE VARCHAR2(10) NOT NULL,
	BANK_ACCT_NO VARCHAR2(25) NOT NULL,
	TRANSACTION_CODE NUMBER(2) NOT NULL,
	GIRO_AMOUNT NUMBER(12,2) NOT NULL,
	PARTICULARS VARCHAR2(12) NOT NULL,
	REFERENCE VARCHAR2(12) NOT NULL,
	CLEAR_FATE NUMBER(1) NOT NULL,
	REJECTION_CODE NUMBER(3) NOT NULL,
	REJECTION_REASON VARCHAR2(255),
	REJECTED_BY VARCHAR2(20) NOT NULL,
	VERSION number(9) DEFAULT 0,
	CREATED_BY varchar2(80),
    CREATED_DT timestamp,
    UPDATED_BY varchar2(80),
    UPDATED_DT timestamp
);
ALTER TABLE ITTB_GIRO_UOB_REJECTED ADD CONSTRAINT ITTB_GIRO_UOB_REJECTED_FK1 FOREIGN KEY (ACCOUNT_NO) REFERENCES AMTB_ACCOUNT (ACCOUNT_NO) ENABLE;
create SEQUENCE ITTB_GIRO_UOB_REJECTED_SQ1 MINVALUE 1 MAXVALUE 999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;

CREATE TABLE ITTB_GIRO_UOB_DETAIL(
	UOB_DETAIL_NO number(18) PRIMARY KEY NOT NULL,
	UOB_HEADER_NO number(18) NOT NULL,
	PARTICULARS varchar2(12) NOT NULL,
	REFERENCE varchar2(12) NOT NULL,
	INVOICE_HEADER_NO number(18) NOT NULL,
	INVOICE_DETAIL_NO number(18) NOT NULL,
	GIRO_AMOUNT number(12,2) not null,
	PAYMENT_RECEIPT_DETAIL_NO NUMBER(18),
	UOB_REJECTED_NO number(18),
	VERSION number(9) DEFAULT 0,
	CREATED_BY varchar2(80),
    CREATED_DT timestamp,
    UPDATED_BY varchar2(80),
    UPDATED_DT timestamp
);
ALTER TABLE ITTB_GIRO_UOB_DETAIL ADD CONSTRAINT ITTB_GIRO_UOB_DETAIL_FK1 FOREIGN KEY (UOB_HEADER_NO) REFERENCES ITTB_GIRO_UOB_HEADER (UOB_HEADER_NO) ENABLE;
ALTER TABLE ITTB_GIRO_UOB_DETAIL ADD CONSTRAINT ITTB_GIRO_UOB_DETAIL_FK2 FOREIGN KEY (INVOICE_HEADER_NO) REFERENCES BMTB_INVOICE_HEADER (INVOICE_HEADER_NO) ENABLE;
ALTER TABLE ITTB_GIRO_UOB_DETAIL ADD CONSTRAINT ITTB_GIRO_UOB_DETAIL_FK3 FOREIGN KEY (INVOICE_DETAIL_NO) REFERENCES BMTB_INVOICE_DETAIL (INVOICE_DETAIL_NO) ENABLE;
ALTER TABLE ITTB_GIRO_UOB_DETAIL ADD CONSTRAINT ITTB_GIRO_UOB_DETAIL_FK4 FOREIGN KEY (PAYMENT_RECEIPT_DETAIL_NO) REFERENCES BMTB_PAYMENT_RECEIPT_DETAIL (PAYMENT_RECEIPT_DETAIL_NO) ENABLE;
ALTER TABLE ITTB_GIRO_UOB_DETAIL ADD CONSTRAINT ITTB_GIRO_UOB_DETAIL_FK5 FOREIGN KEY (UOB_REJECTED_NO) REFERENCES ITTB_GIRO_UOB_REJECTED (UOB_REJECTED_NO) ENABLE;
CREATE INDEX ITTB_GIRO_UOB_DETAIL_N1 ON ITTB_GIRO_UOB_DETAIL(PARTICULARS, REFERENCE);
create SEQUENCE ITTB_GIRO_UOB_DETAIL_SQ1 MINVALUE 1 MAXVALUE 999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;

--INTRODUCING NEW PAYMENT MODE
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION)
SELECT 
	MSTB_MASTER_TABLE_SQ1.nextVal,
	'PM','IG',null,'INTERBANK GIRO','A',0
FROM DUAL;

--GIRO Interface resources


INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (476,25,'GIRO Interface','U','GIRO Interface',201,'GIRO Interface','Y',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (477,476,'Configure Giro Setup','U','/admin/giro_interface/configure_giro_setup.zul',1,'Configure Giro Setup','Y',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (478,476,'Create Giro Request','U','/admin/giro_interface/create_giro_request.zul',2,'Create Giro Request','Y',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (472,476,'Manage Giro Request','U','/admin/giro_interface/manage_giro_request.zul',3,'Manage Giro Request','Y',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (473,476,'View Giro Request','U','/admin/giro_interface/view_giro_request.zul',4,'View Giro Request','N',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (474,476,'Edit Giro Request','U','/admin/giro_interface/edit_giro_request.zul',5,'Edit Giro Request','N',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (475,476,'Delete Giro Request','U','/admin/giro_interface/delete_giro_request.zul',6,'Delete Giro Request','N',0);


--INVOICE
alter table BMTB_INVOICE_HEADER add (
	GIRO_BANK_ACCT_NO varchar2(30),	   
    --e.g. 21st, 22nd, 23rd, 24th...
    GIRO_DAY varchar2(4)
);

alter table BMTB_DRAFT_INV_HEADER add (
	GIRO_BANK_ACCT_NO varchar2(30),
	--e.g. 21st, 22nd, 23rd, 24th...
    GIRO_DAY varchar2(4)
);



-- version 0.02
--GIRO RETURN REQUEST
create TABLE ITTB_GIRO_RETURN_REQ
(
   REQ_NO number(18) PRIMARY KEY NOT NULL,
   UOB_HEADER_NO number(18),
   PROCESSING_DATE date NOT NULL,
   PROCESSING_TIME number(2) NOT NULL,
   STATUS varchar2(1) NOT NULL,
   VERSION number(8) DEFAULT 0,
   CREATED_BY varchar2(80),
   CREATED_DT timestamp,
   UPDATED_BY varchar2(80),
   UPDATED_DT timestamp
);
CREATE INDEX ITTB_GIRO_RETURN_REQ_N1 ON ITTB_GIRO_RETURN_REQ(PROCESSING_DATE, PROCESSING_TIME, STATUS);
ALTER TABLE ITTB_GIRO_RETURN_REQ ADD CONSTRAINT ITTB_GIRO_RETURN_REQ_FK1 FOREIGN KEY (UOB_HEADER_NO) REFERENCES ITTB_GIRO_UOB_HEADER (UOB_HEADER_NO) ENABLE;
create SEQUENCE ITTB_GIRO_RETURN_REQ_SQ1 MINVALUE 1 MAXVALUE 999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;

--GIRO Rejection Codes
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '00' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ACCEPTED' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '10' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'INVALID RECEIVING A/C NO.' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '20' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ERROR IN RECEIVING BANK CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '21' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ERROR IN RECEIVING BRANCH CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '30' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'AMOUNT EXCEEDED' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '31' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ERROR IN AMOUNT' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '40' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'NO DDA (Direct Debit Authorisation)' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '41' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'DDA TERMINATED' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '42' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'INVALID ORIGINATING A/C NO.' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '43' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ERROR IN ORIGINATING BANK CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '44' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'NON-ORIGINATING BANK CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '45' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ERROR IN ORIGINATING BRANCH CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '46' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'UNMATCHED REFERENCE NO.' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '47' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'REFERENCE NO. MISSING' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '50' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'REFER PAYING PARTY' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '51' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'EFFECTS NOT CLEARED' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '60' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ACCOUNT CLOSED' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '61' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ACCOUNT DOES NOT EXIST' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '70' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ERROR IN TRANS CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '71' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ERROR IN RECORD LENGTH' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '72' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'INVALID RECORD TYPE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '73' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'INVALID SACH CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '74' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'DUPLICATE SACH CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '75' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'INVALID RETURN CODE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '76' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'RETURN REASON MISSING' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GURC' as MASTER_TYPE, '90' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'ANY OTHER REASONS' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GIRC' as MASTER_TYPE, '100' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'GIRO AMOUNT SENT FOR DEDUCTION IS DIFFERENT FROM GIRO AMOUNT DEDUCTED FROM RETURN FILE' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;
insert into MSTB_MASTER_TABLE select MSTB_MASTER_TABLE_SQ1.nextVal as MASTER_NO, 'GIRC' as MASTER_TYPE, '101' as MASTER_CODE, null as INTERFACE_MAPPING_VALUE, 'INVOICE''S OUTSTANDING AMOUNT HAS CHANGED' as MASTER_VALUE, 'A' as MASTER_STATUS, 0 as VERSION from dual;

--giro return request screens
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (479,476,'Upload Giro Return File','U','/admin/giro_interface/upload_giro_return_file.zul',7,'Upload Giro Return File','Y',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (480,476,'Manage Giro Return Request','U','/admin/giro_interface/manage_giro_return_request.zul',8,'Manage Giro Return Request','Y',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (481,476,'View Giro Return Request','U','/admin/giro_interface/view_giro_return_request.zul',9,'View Giro Return Request','N',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (482,476,'Delete Giro Return Request','U','Delete Giro Return Request',10,'Delete Giro Return Request','N',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (483,476,'Edit Giro Return Request','U','/admin/giro_interface/edit_giro_return_request.zul',11,'Edit Giro Return Request','N',0);


-- version 0.03

--GIRO REPORTS
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (484,401,'GIRO','U','GIRO',12,'GIRO','Y',0);
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (485,484,'GIRO Summary','U','/report/giro_summary.zul?rsrcId=485',1,'GIRO Summary','Y',0);
insert into MSTB_REPORT_FORMAT_MAP (map_no, rsrc_id, report_format) values ((select max(map_no)+1 from MSTB_REPORT_FORMAT_MAP), 485, 'CSV');
INSERT INTO SATB_RESOURCE (RSRC_ID,PAR_RSRC_ID,RSRC_NAME,RSRC_TYPE,URI,SEQUENCE,DISPLAY_NAME,DISPLAY,VERSION) VALUES (486,484,'GIRO Reject','U','/report/giro_reject.zul?rsrcId=486',2,'GIRO Reject','Y',0);
insert into MSTB_REPORT_FORMAT_MAP (map_no, rsrc_id, report_format) values ((select max(map_no)+1 from MSTB_REPORT_FORMAT_MAP), 486, 'CSV');


-- version 0.04

alter table MSTB_MASTER_TABLE modify MASTER_VALUE varchar2(2000);

--BN: Begin Notification | CN:Complete Notification | NCN: Not Complete Notification | CWE: Complete With Errors (That means file completely written yet encountered errors e.g. re-scheduling
--SJ:Subject, CT:Content
--GUO: GIRO UOB GOING
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','BNCT',null,'<p style="font-family: Calibri; font-size: 16px; white-space: pre;">GIRO UOB File Generation Request #reqNo# begin processing<br /><br />Entity = #entityCode#<br />Value Date = #valueDate#<br />Cutoff Date = #cutoffDate#<br />&nbsp;</p>','A',9);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','BNSJ',null,'IBS-PROD - GIRO UOB File Generation Request #reqNo# begin processing','A',0);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','CNCT',null,'<p style="font-family: Calibri; font-size: 16px; white-space: pre;">GIRO UOB File Generation Request #reqNo#<br /><br />Process Start = #processStartTime#<br />Process End = #processEndTime#<br /><br />Giro File Generation Status = Completed<br /><br />Entity = #entityCode#<br />File Name = #fileName#<br />Value Date = #valueDate#<br />Number of records = #totalRecordCount#<br />Amount = #totalGiroAmount#</p>','A',4);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','CNSJ',null,'IBS-PROD - GIRO UOB File Generation Request #reqNo# Completed','A',1);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','CWECT',null,'<p style="font-family: Calibri; font-size: 16px; white-space: pre;">GIRO UOB File Generation Request #reqNo#<br /><br />Process Start = #processStartTime#<br />Process End = #processEndTime#<br /><br />Giro File Generation Status = Not Completed<br />Reason = #reason#<br /><br />Entity = #entityCode#<br />File Name = #fileName#<br />Number of records = #totalRecordCount#<br />Amount = #totalGiroAmount#</p>','A',2);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','CWESJ',null,'IBS-PROD - GIRO UOB File Generation Request #reqNo# Not Completed','A',1);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','NCNCT',null,'<p style="font-family: Calibri; font-size: 16px; white-space: pre;">GIRO UOB File Generation Request #reqNo#<br /><br />Process Start = #processStartTime#<br />Process End = #processEndTime#<br /><br />Giro File Generation Status = Not Completed<br />Reason = #reason#<br /><br />Entity = #entityCode#</p>','A',2);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUO','NCNSJ',null,'IBS-PROD - GIRO UOB File Generation Request #reqNo# Not Completed','A',1);

INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUI','BNCT',null,'<p style="font-family: Calibri; font-size: 16px; white-space: pre;">GIRO UOB File Upload Request #reqNo# begin processing<br /><br />Entity = #entityCode#<br />File Name = #fileName#<br />&nbsp;</p>','A',11);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUI','BNSJ',null,'IBS-PROD - GIRO UOB File Upload Request #reqNo# begin processing','A',1);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUI','CNCT',null,'<p style="font-family: Calibri; font-size: 16px; white-space: pre;">GIRO UOB File Upload Request #reqNo#<br /><br />Process Start = #processStartTime#<br />Process End = #processEndTime#<br /><br />Giro UOB File Return Status = Completed<br /><br />Entity = #entityCode#<br />File Name = #fileName#<br />Value Date = #valueDate#<br />Number of records = #totalCount#<br />Amount = $#totalAmount#<br /><br />Number of records accepted by Bank = #acceptedByBankCount#<br />Amount accepted by Bank = $#totalAmountAcceptedByBank#<br />Number of records rejected by Bank = #rejectedByBankCount#<br />Amount rejected by Bank = $#totalAmountRejectedByBank#<br /><br/> Number of receipts accepted by IBS = #receiptCreatedCount#<br />Total Amount Applied = $#totalAmountApplied#<br />Number of records rejected by IBS = #rejectedByIBSCount# <br />Amount rejected by IBS = $#totalAmountRejectedByIBS# <br /><br />Total rejected = #totalRejectedCount#<br />Total amount rejected = #totalRejectedAmount# (refer to GIRO reject report)<br /><br />To view receipt details, <a href="http://192.168.32.21/ibs">click this link</a> </p>','A',5);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUI','CNSJ',null,'IBS-PROD - GIRO UOB File Upload Request #reqNo# Completed','A',2);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUI','NCNCT',null,'<p style="font-family: Calibri; font-size: 16px; white-space: pre;">GIRO UOB File Upload Request #reqNo#<br /><br />Process Start = #processStartTime#<br />Process End = #processEndTime#<br /><br />Giro UOB File Return Status = Not Completed<br />Reason = #reason#<br /><br />Entity = #entityCode#<br />File Name = #fileName#</p>','A',3);
INSERT INTO MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal,'EMGUI','NCNSJ',null,'IBS-PROD - GIRO UOB File Upload Request #reqNo# Not Completed','A',2);



-- version 0.05

insert into MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal, 'GIRC', '102', null, 'BANK not found for payment receipt', 'A', 0);
insert into MSTB_MASTER_TABLE (MASTER_NO,MASTER_TYPE,MASTER_CODE,INTERFACE_MAPPING_VALUE,MASTER_VALUE,MASTER_STATUS,VERSION) VALUES (MSTB_MASTER_TABLE_SQ1.nextVal, 'GIRC', '103', null, 'BANK BRANCH not found for payment receipt', 'A', 0);




-- GH

/*
select count(*) from amtb_account where default_payment_Mode IS NULL;
*/
-- Set default payment mode for accounts without.
update amtb_account set default_payment_Mode = (select master_no from mstb_master_table where master_type = 'PM' AND MASTER_CODE = 'CQ')
WHERE default_payment_Mode IS NULL;

-- ACL

-- EMAIL ALERT ROLE
INSERT INTO SATB_ROLE(ROLE_ID, NAME, STATUS, CREATED_BY, CREATED_DT, VERSION) VALUES (SATB_ROLE_SQ1.NEXTVAL, 'SYS_GIRO_BATCH', 'A', 'IBS', SYSDATE, 0);
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'CHIALH'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'JCHUAMK'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'LIMSG'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'HOELH'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'DTOHAL'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'SLEEYN'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'CHOOPL'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'OENGH'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));
INSERT INTO SATB_USER_ROLE (USER_ID, ROLE_ID) VALUES ((SELECT USER_ID FROM SATB_USER WHERE LOGIN_ID = 'JTARUC'), (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'SYS_GIRO_BATCH'));


-- ACCESS RIGHTS
-- COPY FROM UAT
/*
SELECT C.NAME, A.RSRC_ID,A.PAR_RSRC_ID, A.RSRC_NAME , 'INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES ('||A.RSRC_ID||', (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = '''||C.NAME||'''));'
FROM SATB_RESOURCE A, SATB_ROLE_RESOURCE B, SATB_ROLE C
WHERE A.RSRC_ID = B.RSRC_ID
AND B.ROLE_ID = C.ROLE_ID
AND C.NAME <> 'IT_TEST'
AND B.RSRC_ID IN (476, 477, 478, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486)
ORDER BY 1, 2;
*/
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (484, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'FIN_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (485, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'FIN_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (486, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'FIN_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (472, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (473, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (476, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (480, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (481, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (484, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (485, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (486, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'IT_GENERAL'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (472, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (473, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (474, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (475, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (476, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (477, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (478, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (479, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (480, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (481, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (483, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_PROCESSOR'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (484, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_VIEW'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (485, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_VIEW'));
INSERT INTO SATB_ROLE_RESOURCE (RSRC_ID, ROLE_ID) VALUES (486, (SELECT ROLE_ID FROM SATB_ROLE WHERE NAME = 'S&M_VIEW'));


spool off;

/