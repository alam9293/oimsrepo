<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
    
<hibernate-mapping>
<!-- 
    Created by the Middlegen Hibernate plugin 2.1

    http://boss.bekk.no/boss/middlegen/
    http://www.hibernate.org/
-->

<sql-query name="cashlessTxnByAmtRange">
	<return-scalar column="master_code"	type="string"/>
	<return-scalar column="name"		type="string"/>
	<return-scalar column="range"		type="string"/>
	<return-scalar column="count"		type="string"/>
	<![CDATA[
select MASTER_CODE, NAME, range, count(txn_no) as count from 
    (select provider.MASTER_CODE, card_type.MASTER_VALUE as name,
    case
        when fare_amt <= 3 then 1
        when fare_amt <= 5 and fare_amt > 3 then 2
        when fare_amt <= 10 and fare_amt > 5 then 3
        when fare_amt <= 20 and fare_amt > 10 then 4
        when fare_amt <= 30 and fare_amt > 20 then 5
        when fare_amt <= 40 and fare_amt > 30 then 6
        when fare_amt <= 50 and fare_amt > 40 then 7
        else 8
    end as range, txn_no
    from TMTB_NON_BILLABLE_TXN txn
    inner join MSTB_MASTER_TABLE provider on txn.SERVICE_PROVIDER = provider.MASTER_NO
    inner join MSTB_ACQUIRER_PYMT_TYPE pymt_type on txn.pymt_type_no = pymt_type.PYMT_TYPE_NO
    inner join MSTB_MASTER_TABLE card_type on pymt_type.MASTER_NO = card_type.MASTER_NO
    where ((:paymentTypeNo = 0) or (:paymentTypeNo = 2 and card_type.MASTER_CODE not in ('N', 'F', 'C', 'E', 'Z')) or (:paymentTypeNo = 3 and card_type.MASTER_CODE in ('N', 'F', 'C')) or (:paymentTypeNo = 4 and card_type.MASTER_CODE in ('E', 'Z')) or (:paymentTypeNo = 5 and card_type.MASTER_CODE in ('DA')))
    and ((:tripStart is null and :tripEnd is null)or(txn.TRIP_START_DT between case when :tripStart is null then to_date(:tripEnd, 'yyyy-mm-dd hh24:mi:ss') else to_date(:tripStart, 'yyyy-mm-dd hh24:mi:ss') end and case when :tripEnd is null then to_date(:tripStart, 'yyyy-mm-dd hh24:mi:ss') else to_date(:tripEnd, 'yyyy-mm-dd hh24:mi:ss') end)) 
    and (:entityNo is null)
    and (txn.MATCHING_STATUS is NULL or txn.MATCHING_STATUS != 'T')
) group by master_code, name, range
union
select MASTER_CODE, NAME, range, count(ACQUIRE_TXN_NO) as count from
    (select provider.MASTER_CODE, type.NAME,
    case
        when fare_amt <= 3 then 1
        when fare_amt <= 5 and fare_amt > 3 then 2
        when fare_amt <= 10 and fare_amt > 5 then 3
        when fare_amt <= 20 and fare_amt > 10 then 4
        when fare_amt <= 30 and fare_amt > 20 then 5
        when fare_amt <= 40 and fare_amt > 30 then 6
        when fare_amt <= 50 and fare_amt > 40 then 7
        else 8
    end as range, ACQUIRE_TXN_NO from TMTB_ACQUIRE_TXN txn
    inner join PMTB_PRODUCT_TYPE type on type.PRODUCT_TYPE_ID = txn.PRODUCT_TYPE_ID
    inner join MSTB_MASTER_TABLE provider on txn.SERVICE_PROVIDER = provider.MASTER_NO
    
    left join AMTB_ACCOUNT acct on txn.account_no = acct.account_no
    left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.account_no
    left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.account_no
    inner join AMTB_ACCOUNT top on (case when grand.cust_no is not null then grand.account_no when parent.cust_no is not null then parent.account_no else acct.account_no end) = top.account_no
    inner join FMTB_AR_CONT_CODE_MASTER ar on top.ar_control_code_no = ar.ar_control_code_no
    inner join FMTB_ENTITY_MASTER entity on ar.entity_no =entity.entity_no
    where (:paymentTypeNo in (0,1))
    and (:entityNo is null or entity.ENTITY_NO = :entityNo)
    and ((:tripStart is null and :tripEnd is null)or(txn.TRIP_START_DT between case when :tripStart is null then to_date(:tripEnd, 'yyyy-mm-dd hh24:mi:ss') else to_date(:tripStart, 'yyyy-mm-dd hh24:mi:ss') end and case when :tripEnd is null then to_date(:tripStart, 'yyyy-mm-dd hh24:mi:ss') else to_date(:tripEnd, 'yyyy-mm-dd hh24:mi:ss') end)) 
    ) group by master_code, name, range
	]]>
</sql-query>
</hibernate-mapping>