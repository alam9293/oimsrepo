<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
    
<hibernate-mapping>
<!-- 
    Created by the Middlegen Hibernate plugin 2.1

    http://boss.bekk.no/boss/middlegen/
    http://www.hibernate.org/
-->

<sql-query name="creditCardPromoDetails">
	<return-scalar column="master_value" 	type="string"/>
	<return-scalar column="card_no" 		type="string"/>
	<return-scalar column="trip_start_dt"	type="string"/>
	<return-scalar column="fare_amt"		type="string"/>
	<return-scalar column="admin_fee"		type="string"/>
	<return-scalar column="gst"				type="string"/>
	<return-scalar column="total"			type="string"/>
	<return-scalar column="promo"			type="string"/>
	<return-scalar column="txn_status"		type="string"/>
	<return-scalar column="credit_date"		type="string"/>
	<return-scalar column="batch_no"		type="string"/>
	<return-scalar column="settlement_date"	type="string"/>
	<return-scalar column="batch_status"	type="string"/>
	<![CDATA[
select pymt_type_master.MASTER_VALUE, txn.CARD_NO,
	to_char(txn.TRIP_START_DT, 'dd/mm/yyyy') as TRIP_START_DT,
	trim(to_char(txn.FARE_AMT, '999,999,990.00')) as FARE_AMT,
    trim(to_char(txn.ADMIN_FEE, '999,999,990.00')) as ADMIN_FEE,
    trim(to_char(txn.GST, '999,999,990.00')) as GST,
    trim(to_char(txn.TOTAL, '999,999,990.00')) as TOTAL,
    trim(to_char(txn.ADMIN_FEE * :promo * 0.01, '999,999,990.00')) as PROMO,
    txn.STATUS as txn_status,
	to_char(pymt.CREDIT_DATE, 'dd/mm/yyyy') as CREDIT_DATE,
	batch.BATCH_NO,
    to_char(batch.SETTLEMENT_DATE, 'dd/mm/yyyy') as SETTLEMENT_DATE,
	batch.STATUS as batch_status from TMTB_NON_BILLABLE_TXN txn
    inner join TMTB_NON_BILLABLE_BATCH batch on txn.BATCH_ID = batch.BATCH_ID
    inner join MSTB_ACQUIRER_PYMT_TYPE pymt_type on txn.PYMT_TYPE_NO = pymt_type.PYMT_TYPE_NO
    inner join MSTB_MASTER_TABLE pymt_type_master on pymt_type.MASTER_NO = pymt_type_master.MASTER_NO
    left join (select distinct BATCH_ID, PAYMENT_NO from BMTB_BANK_PAYMENT_DETAIL) pymt_detail on pymt_detail.BATCH_ID = batch.BATCH_ID
    left join BMTB_BANK_PAYMENT pymt on pymt_detail.PAYMENT_NO = pymt.PAYMENT_NO
    where ((:batchStart is null and :batchEnd is null)or(batch.SETTLEMENT_DATE between case when :batchStart is null then to_date(:batchEnd, 'yyyy-mm-dd hh24:mi:ss') else to_date(:batchStart, 'yyyy-mm-dd hh24:mi:ss') end and case when :batchEnd is null then to_date(:batchStart, 'yyyy-mm-dd hh24:mi:ss') else to_date(:batchEnd, 'yyyy-mm-dd hh24:mi:ss') end))
    and ((:tripStart is null and :tripEnd is null)or(txn.TRIP_START_DT between case when :tripStart is null then to_date(:tripEnd, 'yyyy-mm-dd hh24:mi:ss') else to_date(:tripStart, 'yyyy-mm-dd hh24:mi:ss') end and case when :tripEnd is null then to_date(:tripStart, 'yyyy-mm-dd hh24:mi:ss') else to_date(:tripEnd, 'yyyy-mm-dd hh24:mi:ss') end))
    and (:paymentTypeNo is null or pymt_type_master.MASTER_CODE = :paymentTypeNo)
    and ((:binStart is null and :binEnd is null)or(substr(card_no, 1, 6) between case when :binStart is null then :binEnd else :binStart end and case when :binEnd is null then :binStart else :binEnd end))
    and (:txnStatus is null or txn.STATUS = :txnStatus)
    and (:batchStatus is null or batch.STATUS = :batchStatus)
    and (txn.MATCHING_STATUS is NULL or txn.MATCHING_STATUS != 'T')
    order by case when :sort = 'CN' then txn.CARD_NO else null end, case when :sort = 'TD' then txn.TRIP_START_DT else null end
	]]>
</sql-query>
</hibernate-mapping>