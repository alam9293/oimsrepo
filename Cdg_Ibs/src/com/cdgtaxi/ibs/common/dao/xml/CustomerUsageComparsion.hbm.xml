<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
    
<hibernate-mapping>
<!-- 
    Created by the Middlegen Hibernate plugin 2.1

    http://boss.bekk.no/boss/middlegen/
    http://www.hibernate.org/
-->

<sql-query name="customerUsageComparsion">
	<return-scalar column="name" 				type="string"/>
	<return-scalar column="last_trips"			type="string"/>
	<return-scalar column="last_amt"			type="string"/>
	<return-scalar column="last_admin_percent"	type="string"/>
	<return-scalar column="last_admin_fee" 		type="string"/>
	<return-scalar column="last_gst" 			type="string"/>
	<return-scalar column="last_total" 			type="string"/>
	<return-scalar column="this_trips" 			type="string"/>
	<return-scalar column="this_amt"			type="string"/>
	<return-scalar column="this_admin_percent"	type="string"/>
	<return-scalar column="this_admin_fee" 		type="string"/>
	<return-scalar column="this_gst" 			type="string"/>
	<return-scalar column="this_total"			type="string"/>
	<![CDATA[
select name, 
    trim(to_char(sum(last_trips), '999,999,990')) as last_trips, 
    trim(to_char(sum(last_amt), '999,999,990.00')) as last_amt, 
    trim(to_char(avg(last_admin_percent), '999,999,990.00')) as last_admin_percent, 
    trim(to_char(sum(last_admin_fee), '999,999,990.00')) as last_admin_fee, 
    trim(to_char(sum(last_gst), '999,999,990.00')) as last_gst, 
    trim(to_char(sum(last_total), '999,999,990.00')) as last_total, 
    trim(to_char(sum(this_trips), '999,999,990')) as this_trips, 
    trim(to_char(sum(this_amt), '999,999,990.00')) as this_amt, 
    trim(to_char(avg(this_admin_percent), '999,999,990.00')) as this_admin_percent, 
    trim(to_char(sum(this_admin_fee), '999,999,990.00')) as this_admin_fee, 
    trim(to_char(sum(this_gst), '999,999,990.00')) as this_gst, 
    trim(to_char(sum(this_total), '999,999,990.00')) as this_total 
    from (
    	select
    	top.account_name || '(' || top.CUST_NO || ')' AS name, 
               last_trips, 
               last_amt, 
               last_admin_percent, 
               last_admin_fee, 
               last_gst, 
               last_total, 
               this_trips, 
               this_amt, 
               this_admin_percent, 
               this_admin_fee, 
               this_gst, 
               this_total 
        from AMTB_ACCOUNT acct 
        left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.ACCOUNT_NO 
        left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.ACCOUNT_NO
        inner join AMTB_ACCOUNT top on (case when grand.cust_no is not null then grand.account_no when parent.cust_no is not null then parent.account_no else acct.account_no end) = top.account_no
  		inner join FMTB_AR_CONT_CODE_MASTER ar on top.ar_control_code_no = ar.ar_control_code_no
   		inner join FMTB_ENTITY_MASTER entity on ar.entity_no =entity.entity_no
        left join (select last_header.account_no, 
            sum(last_trip_count.TOTAL_NO_OF_TRIP) as last_trips, 
            sum(last_detail.NEW_TXN) as last_amt, 
            sum(last_detail.ADMIN_FEE) as last_admin_fee, 
            case when sum(last_detail.NEW_TXN) = 0 then 0 else (sum(last_detail.ADMIN_FEE) / sum(last_detail.NEW_TXN) * 100) end as last_admin_percent, 
            sum(last_detail.GST) as last_gst, 
            sum(last_detail.TOTAL_NEW) as last_total 
            from BMTB_INVOICE_DETAIL last_detail 
            inner join (SELECT detail.INVOICE_DETAIL_NO, 
                count(INVOICE_TXN_NO) as TOTAL_NO_OF_TRIP, 
                avg(distinct(txn.ADMIN_FEE_PERCENT)) as ADMIN_FEE_PERCENT 
                from BMTB_INVOICE_DETAIL detail 
                left join BMTB_INVOICE_TXN txn on detail.INVOICE_DETAIL_NO = txn.INVOICE_DETAIL_NO 
                where 
                  ( 
                  	( :productType is null and detail.PRODUCT_TYPE_ID is not null )
                  	or
                  	( :productType is not null and :productType = detail.PRODUCT_TYPE_ID ) 
                  )
                and new_txn <> 0 
                group by detail.INVOICE_DETAIL_NO) last_trip_count on last_detail.INVOICE_DETAIL_NO = last_trip_count.INVOICE_DETAIL_NO 
                inner join BMTB_INVOICE_SUMMARY last_summary on last_detail.INVOICE_SUMMARY_NO = last_summary.INVOICE_SUMMARY_NO 
                inner join BMTB_INVOICE_HEADER last_header on last_summary.INVOICE_HEADER_NO = last_header.INVOICE_HEADER_NO and
                    last_header.INVOICE_DATE between add_months(to_date(substr(:invoiceMonth, 0, 8) || '01 00:00:00', 'yyyy-mm-dd hh24:mi:ss'), -1) and 
                    add_months(last_day(to_date(substr(:invoiceMonth, 0,8) || '01 23:59:59', 'yyyy-mm-dd hh24:mi:ss')), -1) 
                group by last_header.ACCOUNT_NO) last_month on last_month.account_no = acct.account_no 
            left join (select this_header.account_no, 
                sum(this_trip_count.TOTAL_NO_OF_TRIP) as this_trips, 
                sum(this_detail.NEW_TXN) as this_amt, 
                sum(this_detail.ADMIN_FEE) as this_admin_fee, 
                case when sum(this_detail.NEW_TXN) = 0 then 0 else (sum(this_detail.ADMIN_FEE) / sum(this_detail.NEW_TXN) * 100) end as this_admin_percent, 
                sum(this_detail.GST) as this_gst, 
                sum(this_detail.TOTAL_NEW) as this_total 
                from BMTB_INVOICE_DETAIL this_detail 
                inner join (SELECT detail.INVOICE_DETAIL_NO, 
                    count(INVOICE_TXN_NO) as TOTAL_NO_OF_TRIP, 
                    avg(distinct(txn.ADMIN_FEE_PERCENT)) as ADMIN_FEE_PERCENT 
                    from BMTB_INVOICE_DETAIL detail 
                    left join BMTB_INVOICE_TXN txn on detail.INVOICE_DETAIL_NO = txn.INVOICE_DETAIL_NO 
                    where 
                    ( 
                  		( :productType is null and detail.PRODUCT_TYPE_ID is not null )
                  		or
                  		( :productType is not null and :productType = detail.PRODUCT_TYPE_ID ) 
                  	)
                    and new_txn <> 0 
                    group by detail.INVOICE_DETAIL_NO) this_trip_count on this_detail.INVOICE_DETAIL_NO = this_trip_count.INVOICE_DETAIL_NO 
                    inner join BMTB_INVOICE_SUMMARY this_summary on this_detail.INVOICE_SUMMARY_NO = this_summary.INVOICE_SUMMARY_NO 
                    inner join BMTB_INVOICE_HEADER this_header on this_summary.INVOICE_HEADER_NO = this_header.INVOICE_HEADER_NO and
                        this_header.INVOICE_DATE between to_date(substr(:invoiceMonth, 0, 8) || '01 00:00:00', 'yyyy-mm-dd hh24:mi:ss') and 
                        last_day(to_date(substr(:invoiceMonth, 0, 8) || '01 23:59:59', 'yyyy-mm-dd hh24:mi:ss')) 
                    group by this_header.ACCOUNT_NO) this_month on this_month.account_no = acct.account_no 
            where (last_month.last_trips is not null or this_month.this_trips is not null)
            and (:entityNo is null or entity.ENTITY_NO = :entityNo)
            ) 
        group  by name 
        order  by case when :sort = 'CN' then NAME else null end asc, case when :sort = 'TOTAL' then THIS_TOTAL else null end desc
	]]>
</sql-query>
</hibernate-mapping>