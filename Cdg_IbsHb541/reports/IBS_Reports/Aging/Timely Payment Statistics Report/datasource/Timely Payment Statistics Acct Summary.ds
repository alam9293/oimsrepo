<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Timely Payment Statistics Acct Summary" type="JDBC" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="ACCTS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>WITH INV_DETAIL AS
  (
    SELECT 
      trunc(bih.invoice_date, 'MONTH') AS invoice_month,
      req.req_no as req_no,
      bih.invoice_header_no,
      top.cust_no,
      top.account_name,
      bih.outstanding_amount
    FROM bmtb_invoice_header bih
    INNER JOIN amtb_account acct
    ON bih.account_no = acct.account_no
    LEFT JOIN amtb_account parent
    ON acct.parent_no = parent.account_no
    LEFT JOIN amtb_account grand
    ON PARENT.parent_no = grand.account_no
    LEFT JOIN amtb_account top
    ON top.account_no = (
        CASE
          WHEN grand.account_no IS NOT NULL
          THEN grand.account_no
          WHEN parent.account_no IS NOT NULL
          THEN parent.account_no
          ELSE acct.account_no
        END )
    INNER JOIN fmtb_ar_cont_code_master ar
    ON top.ar_control_code_no = ar.ar_control_code_no
    INNER JOIN fmtb_entity_master entity
    ON ar.entity_no =entity.entity_no
    LEFT JOIN bmtb_bill_gen_req req
    ON bih.req_no               = req.req_no
    WHERE req.setup_no         !=4
    AND req.status              in ('C', 'R')
    AND bih.new_txn            !=0
    AND bih.invoice_format NOT IN ('M', 'D')
    AND bih.invoice_no         IS NOT NULL
    AND bih.due_date    IS NOT NULL
    AND ('${3. Entity}' IS NULL OR entity.ENTITY_NO = '${3. Entity}')
    AND trunc(bih.invoice_date, 'MONTH') = '${1. Invoice Month}'
    AND setup_no = '${2. Bill Gen Setup}'
  ),
  DISTINCT_REQUEST AS (
    select distinct req_no from INV_DETAIL
  ),
  ACTIVE_ACCT AS (
   SELECT top.cust_no, top.account_no, req.request_date FROM AMTB_ACCOUNT top
   INNER JOIN fmtb_ar_cont_code_master ar ON top.ar_control_code_no = ar.ar_control_code_no
   INNER JOIN fmtb_entity_master entity ON ar.entity_no =entity.entity_no
   INNER JOIN bmtb_bill_gen_req req ON req.entity_no = entity.entity_no
   INNER JOIN DISTINCT_REQUEST d_req on d_req.req_no = req.req_no
   INNER JOIN 
    (
        SELECT ACCOUNT_NO, MAX(EFFECTIVE_DT) AS last_effective_dt FROM 
        AMTB_ACCT_STATUS status 
        where status.effective_dt &lt;= last_day(to_date('${1. Invoice Month}', 'dd-MON-yy'))
        group by ACCOUNT_NO
    ) temp_status ON temp_status.account_no = top.account_no
    INNER JOIN AMTB_ACCT_STATUS last_status ON last_status.account_no = temp_status.account_no  AND last_status.EFFECTIVE_DT = temp_status.last_effective_dt 
    WHERE last_status.acct_status = 'A'
  ),
  ACTIVE_BILL_CYCLE_ACCT AS (
  
    SELECT acct.cust_no, 'Active' as status FROM ACTIVE_ACCT acct
    INNER JOIN (
      SELECT a.account_no, MAX(effective_date) AS effective_date
      FROM ACTIVE_ACCT a
      INNER JOIN amtb_acct_bill_cycle b ON a.ACCOUNT_NO = b.account_no
      WHERE effective_date &lt;= a.request_date
      GROUP BY A.account_no
    ) temp_bill_cycle ON temp_bill_cycle.account_no = acct.account_no
    INNER JOIN amtb_acct_bill_cycle last_bill_cycle ON last_bill_cycle.account_no = temp_bill_cycle.account_no  AND last_bill_cycle.effective_date = temp_bill_cycle.effective_date 
    AND last_bill_cycle.billing_cycle = (CASE WHEN '${2. Bill Gen Setup}' IN (1,2) THEN 'W' WHEN '${2. Bill Gen Setup}'=3 THEN 'M' ELSE 'N' END)
  ),
  OUTSTANDING_ACCT AS (
   SELECT distinct 'Outstanding' as status, cust_no FROM INV_DETAIL bih
    WHERE bih.outstanding_amount &gt;= 0
  ),
  ACCTS AS (
      SELECT cust_no, status FROM ACTIVE_BILL_CYCLE_ACCT
      UNION
      SELECT cust_no, status FROM OUTSTANDING_ACCT
  )
  SELECT count(distinct cust_no) AS accts FROM ACCTS</ds:sql>
  </ds:jdbc>
</ds:datasource>

