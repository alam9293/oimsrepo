<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Revenue Misc" type="JDBC" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="CUST_NO" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="ACCOUNT_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="INVOICE_HEADER_NO" type="Double">
      <ds:attribute name="Nullable" nullable="no" />
    </ds:column>
    <ds:column name="INVOICE_NO" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="INVOICE_DATE" type="Date">
      <ds:attribute name="Nullable" nullable="no" />
    </ds:column>
    <ds:column name="DOC_TF" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="DOC_TF_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="DOC_AF" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="DOC_AF_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CV_TF" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CV_TF_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CV_AF" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="CV_AF_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="STAFF" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="STAFF_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MIGR" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MIGR_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MISC_GST" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MISC_GST_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MISC_NON_GST" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="MISC_NON_GST_DIS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TOTAL" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>select case when acct.CUST_NO is not null then acct.CUST_NO
        when parent.CUST_NO is not null then parent.CUST_NO
        when grand.CUST_NO is not null then grand.CUST_NO end as CUST_NO,
        case when acct.CUST_NO is not null then acct.ACCOUNT_NAME
        when parent.CUST_NO is not null then parent.ACCOUNT_NAME
        when grand.CUST_NO is not null then grand.ACCOUNT_NAME end as ACCOUNT_NAME,
        header.INVOICE_HEADER_NO, header.INVOICE_NO, header.INVOICE_DATE, doc_tf_summary.DOC_TF, doc_tf_summary.DOC_TF_DIS, doc_af_summary.DOC_AF, doc_af_summary.DOC_AF_DIS, cv_tf_summary.CV_TF, cv_tf_summary.CV_TF_DIS, cv_af_summary.CV_AF, cv_af_summary.CV_AF_DIS, staff_summary.STAFF, staff_summary.STAFF_DIS, migr_summary.MIGR, migr_summary.MIGR_DIS, misc_gst_summary.MISC_GST, misc_gst_summary.MISC_GST_DIS, misc_non_gst_summary.MISC_NON_GST, misc_non_gst_summary.MISC_NON_GST_DIS,
        case when doc_tf_summary.DOC_TF is null then 0 else doc_tf_summary.DOC_TF end + case when doc_tf_summary.DOC_TF_DIS is null then 0 else doc_tf_summary.DOC_TF_DIS end + case when doc_af_summary.DOC_AF is null then 0 else doc_af_summary.DOC_AF end + case when doc_af_summary.DOC_AF_DIS is null then 0 else doc_af_summary.DOC_AF_DIS end + case when cv_tf_summary.CV_TF is null then 0 else cv_tf_summary.CV_TF end + case when cv_tf_summary.CV_TF_DIS is null then 0 else cv_tf_summary.CV_TF_DIS end + case when cv_af_summary.CV_AF is null then 0 else cv_af_summary.CV_AF end + case when cv_af_summary.CV_AF_DIS is null then 0 else cv_af_summary.CV_AF_DIS end + case when staff_summary.STAFF is null then 0 else staff_summary.STAFF end + case when staff_summary.STAFF_DIS is null then 0 else staff_summary.STAFF_DIS end + case when migr_summary.MIGR is null then 0 else staff_summary.STAFF_DIS end + case when migr_summary.MIGR_DIS is null then 0 else migr_summary.MIGR_DIS end + case when misc_gst_summary.MISC_GST is null then 0 else misc_gst_summary.MISC_GST end + case when misc_gst_summary.MISC_GST_DIS is null then 0 else misc_gst_summary.MISC_GST_DIS end + case when misc_non_gst_summary.MISC_NON_GST is null then 0 else misc_non_gst_summary.MISC_NON_GST end + case when misc_non_gst_summary.MISC_NON_GST_DIS is null then 0 else misc_non_gst_summary.MISC_NON_GST_DIS end as total from BMTB_INVOICE_HEADER header
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as DOC_TF, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as DOC_TF_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'TFDOC' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) doc_tf_summary on header.INVOICE_HEADER_NO = doc_tf_summary.INVOICE_HEADER_NO
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as DOC_AF, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as DOC_AF_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'AFDOC' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) doc_af_summary on header.INVOICE_HEADER_NO = doc_af_summary.INVOICE_HEADER_NO
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as CV_TF, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as CV_TF_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'TFVCV' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) cv_tf_summary on header.INVOICE_HEADER_NO = cv_tf_summary.INVOICE_HEADER_NO
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as CV_AF, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as CV_AF_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'AFFVCV' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) cv_af_summary on header.INVOICE_HEADER_NO = cv_af_summary.INVOICE_HEADER_NO
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as STAFF, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as STAFF_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'STAFF' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) staff_summary on header.INVOICE_HEADER_NO = staff_summary.INVOICE_HEADER_NO
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as MIGR, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as MIGR_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'DMINV' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) migr_summary on header.INVOICE_HEADER_NO = migr_summary.INVOICE_HEADER_NO
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as MISC_GST, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as MISC_GST_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'MISCEG' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) misc_gst_summary on header.INVOICE_HEADER_NO = misc_gst_summary.INVOICE_HEADER_NO
    left join (select summary.INVOICE_HEADER_NO, sum(detail.NEW_TXN) as MISC_NON_GST, sum(detail.TOTAL_NEW - detail.NEW_TXN - detail.GST) as MISC_NON_GST_DIS from BMTB_INVOICE_SUMMARY summary
        left join BMTB_INVOICE_DETAIL detail on summary.INVOICE_SUMMARY_NO = detail.INVOICE_SUMMARY_NO
        where detail.TXN_CODE = (select transaction_code_no from FMTB_TRANSACTION_CODE where TXN_CODE = 'MISCE' and TXN_TYPE = 'MS')
        group by summary.INVOICE_HEADER_NO) misc_non_gst_summary on header.INVOICE_HEADER_NO = misc_non_gst_summary.INVOICE_HEADER_NO
    inner join AMTB_ACCOUNT acct on header.ACCOUNT_NO = acct.ACCOUNT_NO
    left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.ACCOUNT_NO
    left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.ACCOUNT_NO
    inner join FMTB_AR_CONT_CODE_MASTER ar_master on case when acct.CUST_NO is not null then acct.AR_CONTROL_CODE_NO when parent.CUST_NO is not null then parent.AR_CONTROL_CODE_NO else grand.AR_CONTROL_CODE_NO end = ar_master.AR_CONTROL_CODE_NO
    inner join FMTB_ENTITY_MASTER entity on ar_master.ENTITY_NO = entity.ENTITY_NO and ('${1. Entity#choice()#MASTER:EM}' is null or '${1. Entity#choice()#MASTER:EM}' = entity.ENTITY_NO)
    where (('${2. Invoice Start Date#date#REQUIRED}' is null and '${3. Invoice End Date#date}' is null)or(header.INVOICE_DATE between case when '${2. Invoice Start Date#date#REQUIRED}' is null then to_date('${3. Invoice End Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') else to_date('${2. Invoice Start Date#date#REQUIRED} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') end and case when '${3. Invoice End Date#date}' is null then last_day(to_date('${2. Invoice Start Date#date#REQUIRED} 23:59:59', 'yyyy-mm-dd hh24:mi:ss')) else to_date('${3. Invoice End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
    order by header.INVOICE_NO</ds:sql>
  </ds:jdbc>
</ds:datasource>

