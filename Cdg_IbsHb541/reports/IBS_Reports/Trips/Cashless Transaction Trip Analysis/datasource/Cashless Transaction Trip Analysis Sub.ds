<?xml version="1.0" encoding="UTF-8"?>
<ds:datasource xmlns:ds="http://www.elixirtech.com/DataSource" name="Cashless Transaction Trip Analysis Sub" type="JDBC" path="/IBS_Reports/Trips/Cashless Transaction Trip Analysis/datasource/Cashless Transaction Trip Analysis Sub.ds" description="">
  <ds:schema case-sensitive="Yes">
    <ds:column name="PRODUCT_TYPE_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="PROVIDER_NAME" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TRIPS" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="AMT" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="ADMIN" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="GST" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="UPLOAD_DATE" type="String">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
    <ds:column name="TOTAL" type="Double">
      <ds:attribute name="Nullable" nullable="yes" />
    </ds:column>
  </ds:schema>
  <ds:security name="" />
  <ds:jdbc connection-type="POOL" connection-pool="/IBS_Reports/ConnectionPool/IBS Connection Pool.pool" connection-pool-timeout="0" callable-statement="No" connection-reuse="0" nulls-to-strings="No" read-only="Yes" auto-commit="Yes">
    <ds:sql>select * from (select type.name as PRODUCT_TYPE_NAME ,
case when flatfare  = 'Y' then master.MASTER_VALUE || ' (Flat Fare)' else master.MASTER_VALUE || ' (Non Flat Fare)'  end as PROVIDER_NAME, trips, amt, admin, gst, to_char(upload_date2, 'dd/mm/yyyy') as upload_date, (amt+admin+gst) as total from (
select trunc(upload_date, 'DDD') as upload_date2, PRODUCT_TYPE_ID, PROVIDER, sum(count_trip) as trips, sum(amt) as amt, sum(admin) as admin, sum(gst) as gst, flatfare from (
select txn.CREATED_DT as upload_date, txn.PRODUCT_TYPE_ID, provider.MASTER_NO as provider, 1 as count_trip, txn.FARE_AMT as amt, txn.ADMIN_FEE_VALUE - txn.PROD_DIS_VALUE as admin, txn.GST_VALUE as gst, case when (substr(tripType.INTERFACE_MAPPING_VALUE,1,4)) = 'FLAT' then 'Y' else ''  end as flatfare from TMTB_ACQUIRE_TXN txn
    inner join MSTB_MASTER_TABLE provider on txn.SERVICE_PROVIDER = provider.MASTER_NO
    left join AMTB_ACCOUNT acct on txn.account_no = acct.account_no
	left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.account_no
	left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.account_no
	inner join AMTB_ACCOUNT top on (case when grand.cust_no is not null then grand.account_no when parent.cust_no is not null then parent.account_no else acct.account_no end) = top.account_no
	inner join FMTB_AR_CONT_CODE_MASTER ar on top.ar_control_code_no = ar.ar_control_code_no
	inner join FMTB_ENTITY_MASTER entity on ar.entity_no =entity.entity_no left outer join mstb_master_table triptype on txn.TRIP_TYPE = triptype.MASTER_NO and triptype.MASTER_TYPE = 'VTT' 
    where txn.TXN_STATUS not in ('V', 'R')
    and ('${3. Product Type#choice()#MASTER:PT}' is null or txn.PRODUCT_TYPE_ID = '${3. Product Type#choice()#MASTER:PT}')
    and (('${1. Upload Start Date#date}' is null and '${2. Upload End Date#date}' is null)or(txn.CREATED_DT between case when '${1. Upload Start Date#date}' is null then to_date('${2. Upload End Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') else to_date('${1. Upload Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') end and case when '${2. Upload End Date#date}' is null then to_date('${1. Upload Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_date('${2. Upload End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end)) 
	and ('${5. Entity#choice(1,2,3)#MASTER:EM}' is null or entity.ENTITY_NO = '${5. Entity#choice(1,2,3)#MASTER:EM}')
union all
select txn.UPDATED_DT as upload_date, txn.PRODUCT_TYPE_ID, provider.MASTER_NO as provider, -1 as count_trip, -txn.FARE_AMT as amt, txn.PROD_DIS_VALUE - txn.ADMIN_FEE_VALUE as admin, -txn.GST_VALUE as gst, case when (substr(tripType.INTERFACE_MAPPING_VALUE,1,4)) = 'FLAT' then 'Y' else ''  end as flatfare from TMTB_ACQUIRE_TXN txn
    inner join MSTB_MASTER_TABLE provider on txn.SERVICE_PROVIDER = provider.MASTER_NO
    left join AMTB_ACCOUNT acct on txn.account_no = acct.account_no
	left join AMTB_ACCOUNT parent on acct.PARENT_NO = parent.account_no
	left join AMTB_ACCOUNT grand on parent.PARENT_NO = grand.account_no
	inner join AMTB_ACCOUNT top on (case when grand.cust_no is not null then grand.account_no when parent.cust_no is not null then parent.account_no else acct.account_no end) = top.account_no
	inner join FMTB_AR_CONT_CODE_MASTER ar on top.ar_control_code_no = ar.ar_control_code_no
	inner join FMTB_ENTITY_MASTER entity on ar.entity_no =entity.entity_no left outer join mstb_master_table triptype on txn.TRIP_TYPE = triptype.MASTER_NO and triptype.MASTER_TYPE = 'VTT'
    where txn.TXN_STATUS = 'R'
    and ('${3. Product Type#choice()#MASTER:PT}' is null or txn.PRODUCT_TYPE_ID = '${3. Product Type#choice()#MASTER:PT}')
    and (('${1. Upload Start Date#date}' is null and '${2. Upload End Date#date}' is null)or(txn.UPDATED_DT between case when '${1. Upload Start Date#date}' is null then to_date('${2. Upload End Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') else to_date('${1. Upload Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') end and case when '${2. Upload End Date#date}' is null then to_date('${1. Upload Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_date('${2. Upload End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end)) 
	and ('${5. Entity#choice(1,2,3)#MASTER:EM}' is null or entity.ENTITY_NO = '${5. Entity#choice(1,2,3)#MASTER:EM}')
) sub_data
group by trunc(upload_date, 'DDD'), PRODUCT_TYPE_ID, PROVIDER, flatfare
) data inner join MSTB_MASTER_TABLE master on data.PROVIDER = master.MASTER_NO
inner join PMTB_PRODUCT_TYPE type on data.PRODUCT_TYPE_ID = type.PRODUCT_TYPE_ID
union all
select type.MASTER_VALUE as PRODUCT_TYPE_NAME, 
case when flatfare  = 'Y' then master.MASTER_VALUE || ' (Flat Fare)' else master.MASTER_VALUE || ' (Non Flat Fare)'  end as PROVIDER_NAME, trips, amt, admin, gst, to_char(upload_date2, 'dd/mm/yyyy') as upload_date, (amt+admin+gst) as total from (
select trunc(upload_date, 'DDD') as upload_date2, payment_master_no, service_provider, sum(count_trip) as trips, sum(amt) as amt, sum(admin) as admin, sum(gst) as gst, flatfare from (
select txn.CREATED_DT as upload_date, pymt_type.MASTER_NO as payment_master_no, txn.SERVICE_PROVIDER, 1 as count_trip, txn.FARE_AMT as amt, txn.ADMIN_FEE as admin, txn.GST as gst, case when (substr(tripType.INTERFACE_MAPPING_VALUE,1,4)) = 'FLAT' then 'Y' else ''  end as flatfare from TMTB_NON_BILLABLE_TXN txn
    inner join TMTB_NON_BILLABLE_BATCH batch on txn.BATCH_ID = batch.BATCH_ID
    inner join MSTB_ACQUIRER acquirer on batch.ACQUIRER_NO = acquirer.ACQUIRER_NO
    inner join MSTB_ACQUIRER_PYMT_TYPE pymt_type on txn.PYMT_TYPE_NO = pymt_type.PYMT_TYPE_NO
    inner join MSTB_MASTER_TABLE payment_type on pymt_type.MASTER_NO = payment_type.MASTER_NO  left outer join mstb_master_table triptype on txn.product_id = triptype.INTERFACE_MAPPING_VALUE and triptype.MASTER_TYPE = 'VTT' 
    where txn.STATUS not in ('R', 'B')
    and (txn.MATCHING_STATUS is NULL or txn.MATCHING_STATUS != 'T')
    and ('${4. Payment Type#choice()#CC:APT}' is null or payment_type.MASTER_CODE = '${4. Payment Type#choice()#CC:APT}')
    and (('${1. Upload Start Date#date}' is null and '${2. Upload End Date#date}' is null)or(txn.CREATED_DT between case when '${1. Upload Start Date#date}' is null then to_date('${2. Upload End Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') else to_date('${1. Upload Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') end and case when '${2. Upload End Date#date}' is null then to_date('${1. Upload Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_date('${2. Upload End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end))
	and ('${5. Entity#choice(1,2,3)#MASTER:EM}' is null)
union all
select txn.UPDATED_DT as upload_date2, pymt_type.MASTER_NO as payment_master_no, txn.SERVICE_PROVIDER, -1 as count_trip, -txn.CHARGEBACK_REFUND_FARE_AMT as amt, -txn.CHARGEBACK_REFUND_ADMIN_FEE as admin, -txn.CHARGEBACK_REFUND_GST as gst, case when (substr(tripType.INTERFACE_MAPPING_VALUE,1,4)) = 'FLAT' then 'Y' else ''  end as flatfare from TMTB_NON_BILLABLE_TXN txn
    inner join TMTB_NON_BILLABLE_BATCH batch on txn.BATCH_ID = batch.BATCH_ID
    inner join MSTB_ACQUIRER acquirer on batch.ACQUIRER_NO = acquirer.ACQUIRER_NO
    inner join MSTB_ACQUIRER_PYMT_TYPE pymt_type on txn.PYMT_TYPE_NO = pymt_type.PYMT_TYPE_NO
    inner join MSTB_MASTER_TABLE payment_type on pymt_type.MASTER_NO = payment_type.MASTER_NO  left outer join mstb_master_table triptype on txn.product_id = triptype.INTERFACE_MAPPING_VALUE and triptype.MASTER_TYPE = 'VTT'
    where txn.STATUS = 'B'
    and ('${4. Payment Type#choice()#CC:APT}' is null or payment_type.MASTER_CODE = '${4. Payment Type#choice()#CC:APT}')
    and (('${1. Upload Start Date#date}' is null and '${2. Upload End Date#date}' is null)or(txn.UPDATED_DT between case when '${1. Upload Start Date#date}' is null then to_date('${2. Upload End Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') else to_date('${1. Upload Start Date#date} 00:00:00', 'yyyy-mm-dd hh24:mi:ss') end and case when '${2. Upload End Date#date}' is null then to_date('${1. Upload Start Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') else to_date('${2. Upload End Date#date} 23:59:59', 'yyyy-mm-dd hh24:mi:ss') end)) 
	and ('${5. Entity#choice(1,2,3)#MASTER:EM}' is null)
) sub_data
group by trunc(upload_date, 'DDD'), payment_master_no, SERVICE_PROVIDER, flatfare 
) data inner join MSTB_MASTER_TABLE master on data.SERVICE_PROVIDER = master.MASTER_NO
inner join MSTB_MASTER_TABLE type on data.payment_master_no = type.MASTER_NO
) order by to_date(upload_date, 'dd/mm/yyyy'), PRODUCT_TYPE_NAME, PROVIDER_NAME</ds:sql>
  </ds:jdbc>
</ds:datasource>

