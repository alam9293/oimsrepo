-- sequence for account type --
CREATE SEQUENCE  "AMTB_ACCT_TYPE_SQ1"  MINVALUE 1 MAXVALUE 999999999999999999 INCREMENT BY 1 START WITH 3 CACHE 10 NOORDER  NOCYCLE ;
-- account type table --
CREATE TABLE AMTB_ACCT_TYPE (
	ACCT_TYPE_NO NUMBER(6) NOT NULL ,
	ACCT_TYPE VARCHAR2(80) NOT NULL ,
	ACCT_TEMPLATE VARCHAR2(1) NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
--	CONSTRAINT ACCOUNT_CATEGORY_CONS1 CHECK(ACCOUNT_CATEGORY IN('Corporate','Individual')),
	CONSTRAINT AMTB_ACCT_TYPE_PK PRIMARY KEY(ACCT_TYPE_NO)
);
-- sequence for product type --
CREATE SEQUENCE  "PMTB_PRODUCT_TYPE_SQ1"  MINVALUE 1 MAXVALUE 999999999999999999 INCREMENT BY 1 START WITH 3 CACHE 10 NOORDER  NOCYCLE ;
-- product type table --
CREATE TABLE PMTB_PRODUCT_TYPE (
	PRODUCT_TYPE_ID VARCHAR2(2) NOT NULL,
	NAME VARCHAR2(80) NOT NULL,
	BATCH_ISSUE VARCHAR2(2) NOT NULL,
	NAME_ON_PRODUCT VARCHAR2(2) NOT NULL,
	LUHN_CHECK VARCHAR2(2) NOT NULL,
	ONE_TIME_USAGE VARCHAR2(2) NOT NULL,
	FIXED_VALUE VARCHAR2(2) NOT NULL,
	CREDIT_LIMIT VARCHAR2(2) NOT NULL,
	VALIDITY_PERIOD VARCHAR2(2) NOT NULL,
	DEFAULT_CARD_STATUS VARCHAR2(2) NOT NULL,
	NUMBER_OF_DIGIT NUMBER(2) NOT NULL,
	BIN_RANGE VARCHAR2(6) NOT NULL,
	SUB_BIN_RANGE VARCHAR2(4) NOT NULL,
	NEGATIVE_FILE_CHECK VARCHAR2(1) NOT NULL,
	ISSUABLE VARCHAR2(1) NOT NULL,
	ISSUE_TYPE VARCHAR2(2) NOT NULL,
	DEFAULT_VALID_PERIOD NUMBER(3) NOT NULL,
	INTERFACE_MAPPING_VALUE VARCHAR2(80),
	VERSION NUMBER(9,0) DEFAULT 0,
	REPLACEMENT_FEES NUMBER(12,2) NOT NULL ENABLE, 
--	CONSTRAINT PRODUCT_CATEGORY_CONS1 CHECK(BATCH_ISSUE IN('Y','N','NA')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS2 CHECK(NAME_ON_PRODUCT IN('Y','N','NA')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS3 CHECK(LUHN_CHECK IN('Y','N','NA')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS4 CHECK(ONE_TIME_USAGE IN('Y','N','NA')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS5 CHECK(FIXED_VALUE IN('Y','N','NA')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS6 CHECK(CREDIT_LIMIT IN('Y','N','NA')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS7 CHECK(VALIDITY_PERIOD IN('Y','N','NA')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS8 CHECK(NEGATIVE_FILE_CHECK IN('Y','N')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS9 CHECK(ISSUABLE IN('Y','N')),
--	CONSTRAINT PRODUCT_CATEGORY_CONS10 CHECK(ISSUE_TYPE IN('Y','N','NA')),
	CONSTRAINT PMTB_PRODUCT_TYPE_PK PRIMARY KEY(PRODUCT_TYPE_ID)
);
-- account type to product type table --
CREATE TABLE AMTB_SUBSC_PROD_TYPE (
	PRODUCT_TYPE_ID VARCHAR2(2) NOT NULL,
	ACCT_TYPE_NO NUMBER(8,0) NOT NULL,
	CONSTRAINT AMTB_SUBSC_PROD_TYPE_PK PRIMARY KEY(PRODUCT_TYPE_ID, ACCT_TYPE_NO),
	CONSTRAINT AMTB_SUBSC_PROD_TYPE_FK1 FOREIGN KEY(ACCT_TYPE_NO) REFERENCES AMTB_ACCT_TYPE(ACCT_TYPE_NO),
	CONSTRAINT AMTB_SUBSC_PROD_TYPE_FK2 FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PMTB_PRODUCT_TYPE(PRODUCT_TYPE_ID)
);
-- creating indexes --
CREATE INDEX AMTB_SUBSC_PROD_TYPE_N1 ON AMTB_SUBSC_PROD_TYPE (ACCT_TYPE_NO);
CREATE INDEX AMTB_SUBSC_PROD_TYPE_N2 ON AMTB_SUBSC_PROD_TYPE (PRODUCT_TYPE_ID);
-- sequence for account --
CREATE SEQUENCE  "AMTB_ACCOUNT_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
-- for customer number
CREATE SEQUENCE  "AMTB_ACCOUNT_SQ2"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 3 CACHE 10 NOORDER  NOCYCLE ;
-- account table --
CREATE TABLE AMTB_ACCOUNT (
	ACCOUNT_NO NUMBER(8) NOT NULL,
	CUST_NO VARCHAR2(6),
	ACCT_TYPE_NO NUMBER(8),
	AR_CONTROL_CODE_NO NUMBER(8),
	ACCOUNT_CATEGORY VARCHAR2(4) NOT NULL,
	CREDIT_LIMIT NUMBER(10,2) NOT NULL,
	TEMP_CREDIT_LIMIT NUMBER(10,2),
	CREDIT_BALANCE NUMBER(10,2) NOT NULL,
	DEPOSIT NUMBER(10,2) DEFAULT 0,
	--BILLING_CYCLE VARCHAR2(1),
	BANK_ACCT_NO VARCHAR2(25),
	BANK_MASTER_NO NUMBER(8),
	BRANCH_MASTER_NO NUMBER(8),
	DEFAULT_PAYMENT_MODE NUMBER(8),
	ACCOUNT_BALANCE NUMBER(10,2),
	PARENT_NO NUMBER(8),
	NAME_ON_CARD VARCHAR2(22) NOT NULL ,
	ACCOUNT_NAME VARCHAR2(80),
	INFORMATION_SOURCE NUMBER(8),
	CODE VARCHAR2(4),
	INVOICE_FORMAT VARCHAR2(1),
	INVOICE_SORTING VARCHAR2(1),
	CREATED_DT TIMESTAMP,
	UPDATED_DT TIMESTAMP,
	UPDATED_BY VARCHAR2(80),
	CREATED_BY VARCHAR2(80),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCOUNT_PK PRIMARY KEY(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCOUNT_FK1 FOREIGN KEY(INFORMATION_SOURCE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_ACCOUNT_FK2 FOREIGN KEY(DEFAULT_PAYMENT_MODE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_ACCOUNT_FK3 FOREIGN KEY(AR_CONTROL_CODE_NO) REFERENCES FMTB_AR_CONT_CODE_MASTER(AR_CONTROL_CODE_NO),
	CONSTRAINT AMTB_ACCOUNT_FK4 FOREIGN KEY(BANK_MASTER_NO) REFERENCES MSTB_BANK_MASTER(BANK_MASTER_NO),
	CONSTRAINT AMTB_ACCOUNT_FK5 FOREIGN KEY(BRANCH_MASTER_NO) REFERENCES MSTB_BRANCH_MASTER(BRANCH_MASTER_NO),
	CONSTRAINT AMTB_ACCOUNT_FK6 FOREIGN KEY(ACCT_TYPE_NO) REFERENCES AMTB_ACCT_TYPE(ACCT_TYPE_NO),
	CONSTRAINT AMTB_ACCOUNT_FK7 FOREIGN KEY(PARENT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCOUNT_N1 ON AMTB_ACCOUNT (INFORMATION_SOURCE);
CREATE INDEX AMTB_ACCOUNT_N2 ON AMTB_ACCOUNT (DEFAULT_PAYMENT_MODE);
CREATE INDEX AMTB_ACCOUNT_N3 ON AMTB_ACCOUNT (AR_CONTROL_CODE_NO);
CREATE INDEX AMTB_ACCOUNT_N4 ON AMTB_ACCOUNT (BANK_MASTER_NO);
CREATE INDEX AMTB_ACCOUNT_N5 ON AMTB_ACCOUNT (BRANCH_MASTER_NO);
CREATE INDEX AMTB_ACCOUNT_N6 ON AMTB_ACCOUNT (ACCT_TYPE_NO);
CREATE INDEX AMTB_ACCOUNT_N7 ON AMTB_ACCOUNT (PARENT_NO);
CREATE INDEX AMTB_ACCOUNT_N8 ON AMTB_ACCOUNT (CUST_NO);
CREATE INDEX AMTB_ACCOUNT_N9 ON AMTB_ACCOUNT (CODE);
CREATE INDEX AMTB_ACCOUNT_N10 ON AMTB_ACCOUNT(PARENT_NO, INVOICE_FORMAT);
CREATE INDEX AMTB_ACCOUNT_N11 ON AMTB_ACCOUNT(CUST_NO,CODE);
-- creating comments --
COMMENT ON COLUMN AMTB_ACCOUNT.CREDIT_LIMIT IS 'credit limit after transaction. temp/perm credit limit to be extracted from credit_review_requests.';
COMMENT ON COLUMN AMTB_ACCOUNT.INFORMATION_SOURCE IS 'FK to master';
COMMENT ON COLUMN AMTB_ACCOUNT.DEFAULT_PAYMENT_MODE IS 'FK to master';
COMMENT ON COLUMN AMTB_ACCOUNT.UPDATED_BY IS 'Only store username';
COMMENT ON COLUMN AMTB_ACCOUNT.CREATED_BY IS 'Only store username';
COMMENT ON COLUMN AMTB_ACCOUNT.ACCOUNT_CATEGORY IS 'CORP = Corporate, DIV = Division, DEPT = Department, APP = Applicant, SAPP = Sub-Applicant';
--COMMENT ON COLUMN AMTB_ACCOUNT.BILLING_CYCLE IS 'M = Monthly, W = Bi-Weekly, null = charge to parent';
COMMENT ON COLUMN AMTB_ACCOUNT.INVOICE_FORMAT IS 'A = ACCOUNT FORMAT, S = SUB ACCOUNT FORMAT, P = PERSONAL FORMAT';
COMMENT ON COLUMN AMTB_ACCOUNT.INVOICE_SORTING IS 'C = CARD NO, T = TXN DATE';
-- sequence for CONTACT PERSON --
CREATE SEQUENCE  "AMTB_CONTACT_PERSON_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- CONTACT PERSON TABLE --
CREATE TABLE AMTB_CONTACT_PERSON (
	CONTACT_PERSON_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	MAIN_CONTACT_NAME VARCHAR2(80) NOT NULL,
	MAIN_CONTACT_TITLE VARCHAR2(50),
	MAIN_CONTACT_TEL VARCHAR2(20), -- nullable because of personal.
	MAIN_CONTACT_MOBILE VARCHAR2(20),
	MAIN_CONTACT_FAX VARCHAR2(20),
	MAIN_CONTACT_EMAIL VARCHAR2(255),
	MAIN_CONTACT_SAL NUMBER(8),
	SUB_CONTACT_NAME VARCHAR2(80),
	SUB_CONTACT_TITLE VARCHAR2(50),
	SUB_CONTACT_TEL VARCHAR2(20),
	SUB_CONTACT_MOBILE VARCHAR2(20),
	SUB_CONTACT_FAX VARCHAR2(20),
	SUB_CONTACT_EMAIL VARCHAR2(255),
	SUB_CONTACT_SAL NUMBER(8),
	UPDATE_COST_CENTRE VARCHAR2(1), -- Y = YES, N = NO
	SAME_AS_CORPORATE VARCHAR2(1), -- Y = YES, N = NO
	ADDRESS_BLOCK VARCHAR2(10),
	ADDRESS_UNIT VARCHAR2(25),
	ADDRESS_STREET VARCHAR2(60) NOT NULL,
	ADDRESS_BUILDING VARCHAR2(60),
	ADDRESS_AREA VARCHAR2(60),
	ADDRESS_COUNTRY NUMBER(8) NOT NULL,
	ADDRESS_POSTAL VARCHAR2(10) NOT NULL,
	ADDRESS_CITY VARCHAR2(35),
	ADDRESS_STATE VARCHAR2(35),
	CREATED_DT TIMESTAMP,
	UPDATED_DT TIMESTAMP,
	UPDATED_BY VARCHAR2(80),
	CREATED_BY VARCHAR2(80),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_CONTACT_PERSON_PK PRIMARY KEY(CONTACT_PERSON_NO),
	CONSTRAINT AMTB_CONTACT_PERSON_FK1 FOREIGN KEY(MAIN_CONTACT_SAL) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_CONTACT_PERSON_FK2 FOREIGN KEY(SUB_CONTACT_SAL) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_CONTACT_PERSON_FK3 FOREIGN KEY(ADDRESS_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_CONTACT_PERSON_FK4 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO)
);
-- creating indexes --
CREATE INDEX AMTB_CONTACT_PERSON_N1 ON AMTB_CONTACT_PERSON (MAIN_CONTACT_SAL);
CREATE INDEX AMTB_CONTACT_PERSON_N2 ON AMTB_CONTACT_PERSON (SUB_CONTACT_SAL);
CREATE INDEX AMTB_CONTACT_PERSON_N3 ON AMTB_CONTACT_PERSON (ADDRESS_COUNTRY);
CREATE INDEX AMTB_CONTACT_PERSON_N4 ON AMTB_CONTACT_PERSON (ACCOUNT_NO);
-- CONTACT ACCOUNT'S MAIN CONTACT TABLE --
CREATE TABLE AMTB_ACCT_MAIN_CONTACT (
	CONTACT_PERSON_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	MAIN_CONTACT_TYPE VARCHAR2(1) NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_MAIN_CONTACT_PK PRIMARY KEY(ACCOUNT_NO, MAIN_CONTACT_TYPE),
	CONSTRAINT AMTB_ACCT_MAIN_CONTACT_FK1 FOREIGN KEY(CONTACT_PERSON_NO) REFERENCES AMTB_CONTACT_PERSON(CONTACT_PERSON_NO),
	CONSTRAINT AMTB_ACCT_MAIN_CONTACT_FK2 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO)
);
-- CREATING COMMENTS
COMMENT ON COLUMN AMTB_ACCT_MAIN_CONTACT.MAIN_CONTACT_TYPE IS 'B = BILLING MAIN CONTACT, S = SHIPPING MAIN CONTACT';
-- creating indexes --
CREATE INDEX AMTB_ACCT_MAIN_CONTACT_N1 ON AMTB_ACCT_MAIN_CONTACT (CONTACT_PERSON_NO);
CREATE INDEX AMTB_ACCT_MAIN_CONTACT_N2 ON AMTB_ACCT_MAIN_CONTACT (ACCOUNT_NO);
-- ACCOUNT SUBSCRIBED TO TABLE --
CREATE TABLE AMTB_SUBSC_TO (
	ACCOUNT_NO NUMBER(8) NOT NULL,
	PRODUCT_TYPE_ID VARCHAR2(2) NOT NULL,
	PRODUCT_DISCOUNT_PLAN_NO NUMBER(8),
	REWARD_PLAN_NO NUMBER(8),
	SUBSCRIPTION_FEE_NO NUMBER(8),
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_SUBSC_TO_PK PRIMARY KEY(ACCOUNT_NO, PRODUCT_TYPE_ID),
	CONSTRAINT AMTB_SUBSC_TO_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_SUBSC_TO_FK2 FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PMTB_PRODUCT_TYPE(PRODUCT_TYPE_ID),
	CONSTRAINT AMTB_SUBSC_TO_FK3 FOREIGN KEY(REWARD_PLAN_NO) REFERENCES LRTB_REWARD_MASTER(REWARD_PLAN_NO),
	CONSTRAINT AMTB_SUBSC_TO_FK4 FOREIGN KEY(SUBSCRIPTION_FEE_NO) REFERENCES MSTB_SUBSC_FEE_MASTER(SUBSCRIPTION_FEE_NO),
	CONSTRAINT AMTB_SUBSC_TO_FK5 FOREIGN KEY(PRODUCT_DISCOUNT_PLAN_NO) REFERENCES MSTB_PROD_DISC_MASTER(PRODUCT_DISCOUNT_PLAN_NO)
);
-- CREATING COMMENTS
-- creating indexes --
CREATE INDEX AMTB_SUBSC_TO_N1 ON AMTB_SUBSC_TO (ACCOUNT_NO);
CREATE INDEX AMTB_SUBSC_TO_N2 ON AMTB_SUBSC_TO (PRODUCT_TYPE_ID);
CREATE INDEX AMTB_SUBSC_TO_N3 ON AMTB_SUBSC_TO (REWARD_PLAN_NO);
CREATE INDEX AMTB_SUBSC_TO_N4 ON AMTB_SUBSC_TO (SUBSCRIPTION_FEE_NO);
CREATE INDEX AMTB_SUBSC_TO_N5 ON AMTB_SUBSC_TO (PRODUCT_DISCOUNT_PLAN_NO);
CREATE INDEX AMTB_SUBSC_TO_N6 ON AMTB_SUBSC_TO (ACCOUNT_NO, PRODUCT_TYPE_ID, EFFECTIVE_DT);
CREATE INDEX AMTB_SUBSC_TO_N7 ON AMTB_SUBSC_TO(ACCOUNT_NO, EFFECTIVE_DT, reward_plan_no);
-- sequence for SUBSCRIPTION HISTORY --
CREATE SEQUENCE  "AMTB_SUBSC_TO_HIST_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT SUBSCRIBED TO HISTORY TABLE --
CREATE TABLE AMTB_SUBSC_TO_HIST (
	SUBSC_TO_HIST_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	PRODUCT_TYPE_ID VARCHAR2(2) NOT NULL,
	PRODUCT_DISCOUNT_PLAN_NO NUMBER(8),
	REWARD_PLAN_NO NUMBER(8),
	SUBSCRIPTION_FEE_NO NUMBER(8),
	EFF_DT_FROM TIMESTAMP NOT NULL,
	EFF_DT_TO TIMESTAMP,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_SUBSC_TO_HIST_PK PRIMARY KEY(SUBSC_TO_HIST_NO),
	CONSTRAINT AMTB_SUBSC_TO_HIST_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_SUBSC_TO_HIST_FK2 FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PMTB_PRODUCT_TYPE(PRODUCT_TYPE_ID),
	CONSTRAINT AMTB_SUBSC_TO_HIST_FK3 FOREIGN KEY(REWARD_PLAN_NO) REFERENCES LRTB_REWARD_MASTER(REWARD_PLAN_NO),
	CONSTRAINT AMTB_SUBSC_TO_HIST_FK4 FOREIGN KEY(SUBSCRIPTION_FEE_NO) REFERENCES MSTB_SUBSC_FEE_MASTER(SUBSCRIPTION_FEE_NO),
	CONSTRAINT AMTB_SUBSC_TO_HIST_FK5 FOREIGN KEY(PRODUCT_DISCOUNT_PLAN_NO) REFERENCES MSTB_PROD_DISC_MASTER(PRODUCT_DISCOUNT_PLAN_NO)
);
-- CREATING COMMENTS
-- creating indexes --
CREATE INDEX AMTB_SUBSC_HIST_TO_N1 ON AMTB_SUBSC_TO_HIST (ACCOUNT_NO);
CREATE INDEX AMTB_SUBSC_HIST_TO_N2 ON AMTB_SUBSC_TO_HIST (PRODUCT_TYPE_ID);
CREATE INDEX AMTB_SUBSC_HIST_TO_N3 ON AMTB_SUBSC_TO_HIST (REWARD_PLAN_NO);
CREATE INDEX AMTB_SUBSC_HIST_TO_N4 ON AMTB_SUBSC_TO_HIST (SUBSCRIPTION_FEE_NO);
CREATE INDEX AMTB_SUBSC_HIST_TO_N5 ON AMTB_SUBSC_TO_HIST (PRODUCT_DISCOUNT_PLAN_NO);
-- sequence for ACCOUNT STATUS --
CREATE SEQUENCE  "AMTB_ACCT_STATUS_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT STATUS TABLE --
CREATE TABLE AMTB_ACCT_STATUS (
	ACCT_STATUS_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	EFFECTIVE_DT TIMESTAMP,
	STATUS_REASON NUMBER(8), -- REFERENCE TO MASTER TABLE
	STATUS_REMARKS VARCHAR2(500),
	ACCT_STATUS VARCHAR2(2) NOT NULL,
	USER_ID NUMBER(10) NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_STATUS_PK PRIMARY KEY(ACCT_STATUS_NO),
	CONSTRAINT AMTB_ACCT_STATUS_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_STATUS_FK2 FOREIGN KEY(STATUS_REASON) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_ACCT_STATUS_FK3 FOREIGN KEY(USER_ID) REFERENCES SATB_USER(USER_ID)
);
-- CREATING COMMENTS --
COMMENT ON COLUMN AMTB_ACCT_STATUS.ACCT_STATUS IS 'N = NEW, PA = PENDING ACTIVATION, A = ACTIVE, S = SUSPENDED, PS = PARENT SUSPENDED, C = CLOSED, T = TERMINATED';
-- creating indexes --
CREATE INDEX AMTB_ACCT_STATUS_N1 ON AMTB_ACCT_STATUS (ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_STATUS_N2 ON AMTB_ACCT_STATUS (STATUS_REASON);
CREATE INDEX AMTB_ACCT_STATUS_N3 ON AMTB_ACCT_STATUS (USER_ID);
CREATE SEQUENCE  "AMTB_ACCT_CRED_LIMIT_SQ1"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- PRODUCT STATUS table --
CREATE TABLE AMTB_ACCT_CRED_LIMIT (
	ACCT_CRED_LIMIT_NO NUMBER(8) NOT NULL, -- TO ACCOMADATE WITH PRODUCT NO
	ACCOUNT_NO NUMBER(8) NOT NULL,
	CREDIT_LIMIT_TYPE VARCHAR2(1) NOT NULL, -- P = PERMANENT, T = TEMPORARY
	NEW_CREDIT_LIMIT NUMBER(10,2) NOT NULL,
	EFFECTIVE_DT_FROM TIMESTAMP NOT NULL,
	EFFECTIVE_DT_TO TIMESTAMP,
	REMARKS VARCHAR2(500) NOT NULL,
	APPROVER_ID NUMBER(10) NOT NULL,
	VERSION NUMBER(9) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_CRED_LIMIT_PK PRIMARY KEY(ACCT_CRED_LIMIT_NO),
	CONSTRAINT AMTB_ACCT_CRED_LIMIT_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_CRED_LIMIT_FK2 FOREIGN KEY(APPROVER_ID) REFERENCES SATB_USER(USER_ID)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_CRED_LIMIT_N1 ON AMTB_ACCT_CRED_LIMIT (ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_CRED_LIMIT_N2 ON AMTB_ACCT_CRED_LIMIT (APPROVER_ID);
-- creating comments --
COMMENT ON COLUMN AMTB_ACCT_CRED_LIMIT.CREDIT_LIMIT_TYPE IS 'P = PERMANENT, T = TEMPORARY';
-- sequence for CREDIT REVIEW REQUEST --
CREATE SEQUENCE  "AMTB_CRED_REV_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- CREDIT REVIEW REQUEST --
CREATE TABLE AMTB_CRED_REV_REQ (
	CREDIT_REVIEW_REQUEST_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	CREDIT_REVIEW_TYPE VARCHAR2(1) NOT NULL, -- P = PERMANENT, T = TEMPORARY
	NEW_CREDIT_LIMIT NUMBER(10,2) NOT NULL,
	EFFECTIVE_DT_FROM TIMESTAMP NOT NULL,
	EFFECTIVE_DT_TO TIMESTAMP,
	REMARKS VARCHAR2(500) not null,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_CRED_REV_REQ_PK PRIMARY KEY(CREDIT_REVIEW_REQUEST_NO),
	CONSTRAINT AMTB_CRED_REV_REQ_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO)
);
-- CREATING COMMENTS --
COMMENT ON COLUMN AMTB_CRED_REV_REQ.CREDIT_REVIEW_TYPE IS 'P = PERMANENT, T = TEMPORARY';
-- creating indexes --
CREATE INDEX AMTB_CRED_REV_REQ_N1 ON AMTB_CRED_REV_REQ (ACCOUNT_NO);
-- sequence for CREDIT REVIEW REQUEST FLOW --
CREATE SEQUENCE  "AMTB_CRED_REV_REQ_FLOW_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- CREDIT REVIEW REQUEST FLOW --
CREATE TABLE AMTB_CRED_REV_REQ_FLOW (
	CREDIT_REVIEW_REQUEST_FLOW_NO NUMBER(8) NOT NULL,
	CREDIT_REVIEW_REQUEST_NO NUMBER(8) NOT NULL,
	FROM_STATUS VARCHAR2(1) NOT NULL, -- N = NEW, P = PENDING, A = APPROVED, R = REJECTED
	TO_STATUS VARCHAR2(1) NOT NULL, -- N = NEW, P = PENDING, A = APPROVED, R = REJECTED
	REMARKS VARCHAR2(500),
	FLOW_DT TIMESTAMP NOT NULL,
	USER_ID NUMBER(10) NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_CRED_REV_REQ_FLOW_PK PRIMARY KEY(CREDIT_REVIEW_REQUEST_FLOW_NO),
	CONSTRAINT AMTB_CRED_REV_REQ_FLOW_FK1 FOREIGN KEY(CREDIT_REVIEW_REQUEST_NO) REFERENCES AMTB_CRED_REV_REQ(CREDIT_REVIEW_REQUEST_NO),
	CONSTRAINT AMTB_CRED_REV_REQ_FLOW_FK2 FOREIGN KEY(USER_ID) REFERENCES SATB_USER(USER_ID)
);
-- CREATING COMMENTS --
COMMENT ON COLUMN AMTB_CRED_REV_REQ_FLOW.FROM_STATUS IS 'N = NEW, P = PENDING, A = APPROVED, R = REJECTED';
COMMENT ON COLUMN AMTB_CRED_REV_REQ_FLOW.TO_STATUS IS 'N = NEW, P = PENDING, A = APPROVED, R = REJECTED';
-- creating indexes --
CREATE INDEX AMTB_CRE_REV_REQ_FLOW_N1 ON AMTB_CRED_REV_REQ_FLOW (CREDIT_REVIEW_REQUEST_NO);
CREATE INDEX AMTB_CRE_REV_REQ_FLOW_N2 ON AMTB_CRED_REV_REQ_FLOW (USER_ID);
-- sequence for ACCOUNT SALESPERSON REQUEST--
CREATE SEQUENCE  "AMTB_ACCT_SALESPERSON_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT SALESPERSON REQUEST --
CREATE TABLE AMTB_ACCT_SALESPERSON_REQ (
	ACCT_SALESPERSON_REQ_NO NUMBER(8) NOT NULL,
	FROM_SALESPERSON_NO NUMBER(8) NOT NULL,
	TO_SALESPERSON_NO NUMBER(8) NOT NULL,
	REQUEST_DT TIMESTAMP NOT NULL,
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	USER_ID NUMBER(10) NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_SALESPERSON_REQ_PK PRIMARY KEY(ACCT_SALESPERSON_REQ_NO),
	CONSTRAINT AMTB_ACCT_SALESPERSON_REQ_FK1 FOREIGN KEY(FROM_SALESPERSON_NO) REFERENCES MSTB_SALESPERSON(SALESPERSON_NO),
	CONSTRAINT AMTB_ACCT_SALESPERSON_REQ_FK2 FOREIGN KEY(TO_SALESPERSON_NO) REFERENCES MSTB_SALESPERSON(SALESPERSON_NO),
	CONSTRAINT AMTB_ACCT_SALESPERSON_REQ_FK3 FOREIGN KEY(USER_ID) REFERENCES SATB_USER(USER_ID)
);
-- creating indexes --
-- sequence for ACCOUNT SALESPERSON --
CREATE SEQUENCE  "AMTB_ACCT_SALESPERSON_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT SALESPERSON --
CREATE TABLE AMTB_ACCT_SALESPERSON (
	ACCT_SALESPERSON_NO NUMBER(8) NOT NULL,
	ACCT_SALESPERSON_REQ_NO NUMBER(8),
	SALESPERSON_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	EFFECTIVE_DT_FROM TIMESTAMP NOT NULL,
	EFFECTIVE_DT_TO TIMESTAMP,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_SALESPERSON_PK PRIMARY KEY(ACCT_SALESPERSON_NO),
	CONSTRAINT AMTB_ACCT_SALESPERSON_FK1 FOREIGN KEY(SALESPERSON_NO) REFERENCES MSTB_SALESPERSON(SALESPERSON_NO),
	CONSTRAINT AMTB_ACCT_SALESPERSON_FK2 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_SALESPERSON_FK3 FOREIGN KEY(ACCT_SALESPERSON_REQ_NO) REFERENCES AMTB_ACCT_SALESPERSON_REQ(ACCT_SALESPERSON_REQ_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_SALESPERSON_N1 ON AMTB_ACCT_SALESPERSON (SALESPERSON_NO);
CREATE INDEX AMTB_ACCT_SALESPERSON_N2 ON AMTB_ACCT_SALESPERSON (ACCOUNT_NO);
-- sequence for BILLING REQUEST --
CREATE SEQUENCE  "AMTB_BILL_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- BILLING REQUEST --
CREATE TABLE AMTB_BILL_REQ (
	BILL_REQ_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	REQUEST_DT TIMESTAMP NOT NULL,
	BANK_ACCOUNT_NO VARCHAR2(20),
	BANK_MASTER_NO NUMBER(8),
	BRANCH_MASTER_NO NUMBER(8),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_BILL_REQ_PK PRIMARY KEY(BILL_REQ_NO),
	CONSTRAINT AMTB_BILL_REQ_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_BILL_REQ_FK2 FOREIGN KEY(BRANCH_MASTER_NO) REFERENCES MSTB_BRANCH_MASTER(BRANCH_MASTER_NO),
	CONSTRAINT AMTB_BILL_REQ_FK3 FOREIGN KEY(BANK_MASTER_NO) REFERENCES MSTB_BANK_MASTER(BANK_MASTER_NO)
);
-- creating indexes --
CREATE INDEX AMTB_BILL_REQ_N1 ON AMTB_BILL_REQ (ACCOUNT_NO);
CREATE INDEX AMTB_BILL_REQ_N2 ON AMTB_BILL_REQ (BRANCH_MASTER_NO);
CREATE INDEX AMTB_BILL_REQ_N3 ON AMTB_BILL_REQ (BANK_MASTER_NO);
-- sequence for BILLING REQUEST FLOW --
CREATE SEQUENCE  "AMTB_BILL_REQ_FLOW_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- BILLING REQUEST FLOW --
CREATE TABLE AMTB_BILL_REQ_FLOW (
	BILL_REQ_FLOW_NO NUMBER(8) NOT NULL,
	BILL_REQ_NO NUMBER(8) NOT NULL,
	FROM_STATUS VARCHAR2(1) NOT NULL, -- N = NEW, P = PENDING, A = APPROVED, R = REJECTED
	TO_STATUS VARCHAR2(1) NOT NULL, -- N = NEW, P = PENDING, A = APPROVED, R = REJECTED
	USER_ID NUMBER(10) NOT NULL,
	REMARKS VARCHAR2(500),
	FLOW_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_BILL_REQ_FLOW_PK PRIMARY KEY(BILL_REQ_FLOW_NO),
	CONSTRAINT AMTB_BILL_REQ_FLOW_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO),
	CONSTRAINT AMTB_BILL_REQ_FLOW_FK3 FOREIGN KEY(USER_ID) REFERENCES SATB_USER(USER_ID)
);
-- CREATING COMMENTS --
COMMENT ON COLUMN AMTB_BILL_REQ_FLOW.FROM_STATUS IS 'N = NEW, P = PENDING, A = APPROVED, R = REJECTED';
COMMENT ON COLUMN AMTB_BILL_REQ_FLOW.TO_STATUS IS 'N = NEW, P = PENDING, A = APPROVED, R = REJECTED';
-- creating indexes --
CREATE INDEX AMTB_BILL_REQ_FLOW_N1 ON AMTB_BILL_REQ_FLOW (BILL_REQ_NO);
-- sequence for ACCOUNT BILLING CYCLE REQUEST --
CREATE SEQUENCE  "AMTB_ACCT_BILL_CYCLE_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT BILLING CYCLE REQUEST TABLE --
CREATE TABLE AMTB_ACCT_BILL_CYCLE_REQ (
	ACCT_BILL_CYCLE_REQ_NO NUMBER(8) NOT NULL,
	BILL_REQ_NO NUMBER(8) NOT NULL,
	BILLING_CYCLE VARCHAR2(1), -- M = MONTHLY, W = BI-WEEKLY, NULL = CHARGE TO PARENT
	EVENT VARCHAR2(1), -- C = CREATE, U = UPDATE, D = DELETE
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_BILL_CYCLE_REQ_PK PRIMARY KEY(ACCT_BILL_CYCLE_REQ_NO),
	CONSTRAINT AMTB_ACCT_BILL_CYCLE_REQ_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO)
);
-- CREATING COMMENTS --
COMMENT ON COLUMN AMTB_ACCT_BILL_CYCLE_REQ.BILLING_CYCLE IS 'M = MONTHLY, W = BI-WEEKLY, NULL = CHARGE TO PARENT';
-- creating indexes --
CREATE INDEX AMTB_ACCT_BILL_CYCLE_REQ_N1 ON AMTB_ACCT_BILL_CYCLE_REQ (BILL_REQ_NO);
-- sequence for ACCOUNT VOLUME DISCOUNT REQUEST --
CREATE SEQUENCE  "AMTB_ACCT_VOL_DISC_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT VOLUME DISCOUNT REQUEST TABLE --
CREATE TABLE AMTB_ACCT_VOL_DISC_REQ (
	ACCT_VOL_DISC_REQ_NO NUMBER(8) NOT NULL,
	BILL_REQ_NO NUMBER(8) NOT NULL,
	VOLUME_DISCOUNT_PLAN_NO NUMBER(8), -- nullable because not mandatory
	EVENT VARCHAR2(1), -- C = CREATE, U = UPDATE, D = DELETE
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_VOL_DISC_REQ_PK PRIMARY KEY(ACCT_VOL_DISC_REQ_NO),
	CONSTRAINT AMTB_ACCT_VOL_DISC_REQ_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO),
	CONSTRAINT AMTB_ACCT_VOL_DISC_REQ_FK2 FOREIGN KEY(VOLUME_DISCOUNT_PLAN_NO) REFERENCES MSTB_VOL_DISC_MASTER(VOLUME_DISCOUNT_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_VOL_DISC_REQ_N1 ON AMTB_ACCT_VOL_DISC_REQ (BILL_REQ_NO);
CREATE INDEX AMTB_ACCT_VOL_DISC_REQ_N2 ON AMTB_ACCT_VOL_DISC_REQ (VOLUME_DISCOUNT_PLAN_NO);
-- dumping default data --
-- sequence for ACCOUNT ADMIN FEE REQUEST --
CREATE SEQUENCE  "AMTB_ACCT_ADMIN_FEE_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT ADMIN FEE REQUEST TABLE --
CREATE TABLE AMTB_ACCT_ADMIN_FEE_REQ (
	ACCT_ADMIN_FEE_REQ_NO NUMBER(8) NOT NULL,
	BILL_REQ_NO NUMBER(8) NOT NULL,
	ADMIN_FEE_PLAN_NO NUMBER(8) NOT NULL,
	EVENT VARCHAR2(1), -- C = CREATE, U = UPDATE, D = DELETE
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_ADMIN_FEE_REQ_PK PRIMARY KEY(ACCT_ADMIN_FEE_REQ_NO),
	CONSTRAINT AMTB_ACCT_ADMIN_FEE_REQ_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO),
	CONSTRAINT AMTB_ACCT_ADMIN_FEE_REQ_FK2 FOREIGN KEY(ADMIN_FEE_PLAN_NO) REFERENCES MSTB_ADMIN_FEE_MASTER(ADMIN_FEE_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_ADMIN_FEE_REQ_N1 ON AMTB_ACCT_ADMIN_FEE_REQ (BILL_REQ_NO);
CREATE INDEX AMTB_ACCT_ADMIN_FEE_REQ_N2 ON AMTB_ACCT_ADMIN_FEE_REQ (ADMIN_FEE_PLAN_NO);
-- dumping default data --
-- sequence for ACCOUNT CREDIT TERM REQUEST --
CREATE SEQUENCE  "AMTB_ACCT_CRED_TERM_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT CREDIT TERM REQUEST TABLE --
CREATE TABLE AMTB_ACCT_CRED_TERM_REQ (
	ACCT_CRED_TERM_REQ_NO NUMBER(8) NOT NULL,
	BILL_REQ_NO NUMBER(8) NOT NULL,
	CREDIT_TERM_PLAN_NO NUMBER(8) NOT NULL,
	EVENT VARCHAR2(1), -- C = CREATE, U = UPDATE, D = DELETE
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_CRED_TERM_REQ_PK PRIMARY KEY(ACCT_CRED_TERM_REQ_NO),
	CONSTRAINT AMTB_ACCT_CRED_TERM_REQ_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO),
	CONSTRAINT AMTB_ACCT_CRED_TERM_REQ_FK2 FOREIGN KEY(CREDIT_TERM_PLAN_NO) REFERENCES MSTB_CREDIT_TERM_MASTER(CREDIT_TERM_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_CRED_TERM_REQ_N1 ON AMTB_ACCT_CRED_TERM_REQ (BILL_REQ_NO);
CREATE INDEX AMTB_ACCT_CRED_TERM_REQ_N2 ON AMTB_ACCT_CRED_TERM_REQ (CREDIT_TERM_PLAN_NO);
-- dumping default data --
-- sequence for ACCOUNT EARLY PAYMENT REQUEST --
CREATE SEQUENCE  "AMTB_ACCT_EARLY_PYMT_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT EARLY PAYMENT REQUEST TABLE --
CREATE TABLE AMTB_ACCT_EARLY_PYMT_REQ (
	ACCT_EARLY_PYMT_REQ_NO NUMBER(8) NOT NULL,
	BILL_REQ_NO NUMBER(8) NOT NULL,
	EARLY_PAYMENT_PLAN_NO NUMBER(8), -- nullable cause not mandatory
	EVENT VARCHAR2(1), -- C = CREATE, U = UPDATE, D = DELETE
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_EARLY_PYMT_REQ_PK PRIMARY KEY(ACCT_EARLY_PYMT_REQ_NO),
	CONSTRAINT AMTB_ACCT_EARLY_PYMT_REQ_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO),
	CONSTRAINT AMTB_ACCT_EARLY_PYMT_REQ_FK2 FOREIGN KEY(EARLY_PAYMENT_PLAN_NO) REFERENCES MSTB_EARLY_PAYMENT_MASTER(EARLY_PAYMENT_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_EARLY_PYMT_REQ_N1 ON AMTB_ACCT_EARLY_PYMT_REQ (BILL_REQ_NO);
CREATE INDEX AMTB_ACCT_EARLY_PYMT_REQ_N2 ON AMTB_ACCT_EARLY_PYMT_REQ (EARLY_PAYMENT_PLAN_NO);
-- dumping default data --
-- sequence for ACCOUNT LATE PAYMENT REQUEST --
CREATE SEQUENCE  "AMTB_ACCT_LATE_PYMT_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT LATE PAYMENT REQUEST TABLE --
CREATE TABLE AMTB_ACCT_LATE_PYMT_REQ (
	ACCT_LATE_PYMT_REQ_NO NUMBER(8) NOT NULL,
	BILL_REQ_NO NUMBER(8) NOT NULL,
	LATE_PAYMENT_PLAN_NO NUMBER(8) NOT NULL,
	EVENT VARCHAR2(1), -- C = CREATE, U = UPDATE, D = DELETE
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_LATE_PYMT_REQ_PK PRIMARY KEY(ACCT_LATE_PYMT_REQ_NO),
	CONSTRAINT AMTB_ACCT_LATE_PYMT_REQ_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO),
	CONSTRAINT AMTB_ACCT_LATE_PYMT_REQ_FK2 FOREIGN KEY(LATE_PAYMENT_PLAN_NO) REFERENCES MSTB_LATE_PAYMENT_MASTER(LATE_PAYMENT_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_LATE_PYMT_REQ_N1 ON AMTB_ACCT_LATE_PYMT_REQ (BILL_REQ_NO);
CREATE INDEX AMTB_ACCT_LATE_PYMT_REQ_N2 ON AMTB_ACCT_LATE_PYMT_REQ (LATE_PAYMENT_PLAN_NO);
-- dumping default data --
-- sequence for PERSONAL DETAILS --
CREATE SEQUENCE  "AMTB_PERSONAL_DETAIL_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- PERSONAL DETAILS TABLE --
CREATE TABLE AMTB_PERSONAL_DETAIL (
	PERSONAL_DETAIL_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	BIRTH_DT TIMESTAMP,
	NRIC VARCHAR2(35) NOT NULL,
	TEL VARCHAR2(20) NOT NULL,
	FAX VARCHAR2(20),
	RELATION_TO_PARENT NUMBER(8),
	ADDRESS_BLOCK VARCHAR2(10),
	ADDRESS_UNIT VARCHAR2(25),
	ADDRESS_STREET VARCHAR2(60) NOT NULL,
	ADDRESS_BUILDING VARCHAR2(60),
	ADDRESS_AREA VARCHAR2(60),
	ADDRESS_COUNTRY NUMBER(8) NOT NULL, -- TO MASTER
	ADDRESS_POSTAL VARCHAR2(10) NOT NULL,
	ADDRESS_CITY VARCHAR2(35),
	ADDRESS_STATE VARCHAR2(35),
	JOB_STATUS NUMBER(8), -- TO MASTER
	OCCUPATION VARCHAR2(35),
	INDUSTRY NUMBER(8), -- TO MASTER
	EMPLOYER_NAME VARCHAR2(35),
	MONTHLY_INCOME NUMBER(10,2),
	EMPLOY_LENGTH_YEAR NUMBER(2),
	EMPLOYER_BLOCK VARCHAR2(10),
	EMPLOYER_UNIT VARCHAR2(25),
	EMPLOYER_STREET VARCHAR2(60),
	EMPLOYER_BUILDING VARCHAR2(60),
	EMPLOYER_AREA VARCHAR2(60),
	EMPLOYER_COUNTRY NUMBER(8), -- TO MASTER
	EMPLOYER_POSTAL VARCHAR2(10),
	EMPLOYER_CITY VARCHAR2(35),
	EMPLOYER_STATE VARCHAR2(35),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_PERSONAL_DETAIL_PK PRIMARY KEY(PERSONAL_DETAIL_NO),
	CONSTRAINT AMTB_PERSONAL_DETAIL_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_PERSONAL_DETAIL_FK2 FOREIGN KEY(JOB_STATUS) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_PERSONAL_DETAIL_FK3 FOREIGN KEY(INDUSTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_PERSONAL_DETAIL_FK4 FOREIGN KEY(EMPLOYER_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_PERSONAL_DETAIL_FK5 FOREIGN KEY(ADDRESS_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_PERSONAL_DETAIL_FK6 FOREIGN KEY(RELATION_TO_PARENT) REFERENCES MSTB_MASTER_TABLE(MASTER_NO)
);
-- creating indexes --
CREATE INDEX AMTB_PERSONAL_DETAIL_N1 ON AMTB_PERSONAL_DETAIL (ACCOUNT_NO);
CREATE INDEX AMTB_PERSONAL_DETAIL_N2 ON AMTB_PERSONAL_DETAIL (JOB_STATUS);
CREATE INDEX AMTB_PERSONAL_DETAIL_N3 ON AMTB_PERSONAL_DETAIL (INDUSTRY);
CREATE INDEX AMTB_PERSONAL_DETAIL_N4 ON AMTB_PERSONAL_DETAIL (EMPLOYER_COUNTRY);
CREATE INDEX AMTB_PERSONAL_DETAIL_N5 ON AMTB_PERSONAL_DETAIL (ADDRESS_COUNTRY);
CREATE INDEX AMTB_PERSONAL_DETAIL_N6 ON AMTB_PERSONAL_DETAIL (RELATION_TO_PARENT);
-- sequence for CORPORATE DETAILS --
CREATE SEQUENCE  "AMTB_CORPORATE_DETAIL_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- CORPORATE DETAILS TABLE --
CREATE TABLE AMTB_CORPORATE_DETAIL (
	CORPORATE_DETAIL_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	TEL VARCHAR2(20) NOT NULL ,
	FAX VARCHAR2(20),
	RCB_NO VARCHAR2(35),
	RCB_DT TIMESTAMP,
	CAPITAL NUMBER(15,2),
	AUTH_PERSON_NAME VARCHAR2(50),
	AUTH_PERSON_TITLE VARCHAR2(50),
	AUTH_PERSON_SAL NUMBER(8),
	INDUSTRY NUMBER(8) NOT NULL,
	ADDRESS_BLOCK VARCHAR2(10),
	ADDRESS_UNIT VARCHAR2(25),
	ADDRESS_STREET VARCHAR2(60) NOT NULL,
	ADDRESS_BUILDING VARCHAR2(60),
	ADDRESS_AREA VARCHAR2(60),
	ADDRESS_COUNTRY NUMBER(8) NOT NULL,
	ADDRESS_CITY VARCHAR2(35),
	ADDRESS_STATE VARCHAR2(35),
	ADDRESS_POSTAL VARCHAR2(10) NOT NULL,
	PROJECT_CODE VARCHAR2(1), -- Y = YES, N = NO
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_CORPORATE_DETAIL_PK PRIMARY KEY(CORPORATE_DETAIL_NO),
	CONSTRAINT AMTB_CORPORATE_DETAIL_U1 UNIQUE (ACCOUNT_NO),
	CONSTRAINT AMTB_CORPORATE_DETAIL_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_CORPORATE_DETAIL_FK2 FOREIGN KEY(AUTH_PERSON_SAL) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_CORPORATE_DETAIL_FK3 FOREIGN KEY(ADDRESS_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_CORPORATE_DETAIL_FK4 FOREIGN KEY(INDUSTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO)
);
-- creating indexes --
CREATE INDEX AMTB_CORPORATE_DETAIL_N1 ON AMTB_CORPORATE_DETAIL (AUTH_PERSON_SAL);
CREATE INDEX AMTB_CORPORATE_DETAIL_N2 ON AMTB_CORPORATE_DETAIL (ADDRESS_COUNTRY);
CREATE INDEX AMTB_CORPORATE_DETAIL_N3 ON AMTB_CORPORATE_DETAIL (INDUSTRY);
-- sequence for account billing cycle --
CREATE SEQUENCE  "AMTB_ACCT_BILL_CYCLE_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- account billing cycle TABLE --
CREATE TABLE AMTB_ACCT_BILL_CYCLE(
	ACCT_BILL_CYCLE_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	BILLING_CYCLE VARCHAR2(1),
	EFFECTIVE_DATE DATE,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_BILL_CYCLE_PK PRIMARY KEY(ACCT_BILL_CYCLE_NO),
	CONSTRAINT AMTB_ACCT_BILL_CYCLE_U1 UNIQUE (ACCOUNT_NO, EFFECTIVE_DATE),
	CONSTRAINT AMTB_ACCT_BILL_CYCLE_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_BILL_CYCLE_N1 ON AMTB_ACCT_BILL_CYCLE(ACCOUNT_NO);
-- dumping default data --
-- sequence for account volume discount cycle --
CREATE SEQUENCE  "AMTB_ACCT_VOL_DISC_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT VOLUME DISCOUNT TABLE --
CREATE TABLE AMTB_ACCT_VOL_DISC(
	ACCT_VOL_DISC_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	VOLUME_DISCOUNT_PLAN_NO NUMBER(8),
	EFFECTIVE_DATE DATE,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_VOL_DISC_PK PRIMARY KEY(ACCT_VOL_DISC_NO),
	CONSTRAINT AMTB_ACCT_VOL_DISC_U1 UNIQUE (ACCOUNT_NO, EFFECTIVE_DATE),
	CONSTRAINT AMTB_ACCT_VOL_DISC_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_VOL_DISC_FK2 FOREIGN KEY(VOLUME_DISCOUNT_PLAN_NO) REFERENCES MSTB_VOL_DISC_MASTER(VOLUME_DISCOUNT_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_VOL_DISC_N1 ON AMTB_ACCT_VOL_DISC(ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_VOL_DISC_N2 ON AMTB_ACCT_VOL_DISC(VOLUME_DISCOUNT_PLAN_NO);
CREATE INDEX AMTB_ACCT_VOL_DISC_N3 ON AMTB_ACCT_VOL_DISC(EFFECTIVE_DATE);
-- sequence for ACCOUNT ADMIN FEE --
CREATE SEQUENCE  "AMTB_ACCT_ADMIN_FEE_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT ADMIN FEE TABLE --
CREATE TABLE AMTB_ACCT_ADMIN_FEE(
	ACCT_ADMIN_FEE_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	ADMIN_FEE_PLAN_NO NUMBER(8),
	EFFECTIVE_DATE DATE,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_ADMIN_FEE_PK PRIMARY KEY(ACCT_ADMIN_FEE_NO),
	CONSTRAINT AMTB_ACCT_ADMIN_FEE_U1 UNIQUE (ACCOUNT_NO, EFFECTIVE_DATE),
	CONSTRAINT AMTB_ACCT_ADMIN_FEE_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_ADMIN_FEE_FK2 FOREIGN KEY(ADMIN_FEE_PLAN_NO) REFERENCES MSTB_ADMIN_FEE_MASTER(ADMIN_FEE_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_ADMIN_FEE_N1 ON AMTB_ACCT_ADMIN_FEE(ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_ADMIN_FEE_N2 ON AMTB_ACCT_ADMIN_FEE(ADMIN_FEE_PLAN_NO);
CREATE INDEX AMTB_ACCT_ADMIN_FEE_N3 ON AMTB_ACCT_ADMIN_FEE(EFFECTIVE_DATE);
-- sequence for ACCOUNT CREDIT TERM --
CREATE SEQUENCE  "AMTB_ACCT_CRED_TERM_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT CREDIT TERM TABLE --
CREATE TABLE AMTB_ACCT_CRED_TERM(
	ACCT_CRED_TERM_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	CREDIT_TERM_PLAN_NO NUMBER(8),
	EFFECTIVE_DATE DATE,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_CRED_TERM_PK PRIMARY KEY(ACCT_CRED_TERM_NO),
	CONSTRAINT AMTB_ACCT_CRED_TERM_U1 UNIQUE (ACCOUNT_NO, EFFECTIVE_DATE),
	CONSTRAINT AMTB_ACCT_CRED_TERM_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_CRED_TERM_FK2 FOREIGN KEY(CREDIT_TERM_PLAN_NO) REFERENCES MSTB_CREDIT_TERM_MASTER(CREDIT_TERM_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_CRED_TERM_N1 ON AMTB_ACCT_CRED_TERM(ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_CRED_TERM_N2 ON AMTB_ACCT_CRED_TERM(CREDIT_TERM_PLAN_NO);
CREATE INDEX AMTB_ACCT_CRED_TERM_N3 ON AMTB_ACCT_CRED_TERM(EFFECTIVE_DATE);
-- sequence for ACCOUNT EARLY PAYMENT --
CREATE SEQUENCE  "AMTB_ACCT_EARLY_PYMT_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT EARLY PAYMENT TABLE --
CREATE TABLE AMTB_ACCT_EARLY_PYMT(
	ACCT_EARLY_PYMT_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	EARLY_PAYMENT_PLAN_NO NUMBER(8),
	EFFECTIVE_DATE DATE,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_EARLY_PYMT_PK PRIMARY KEY(ACCT_EARLY_PYMT_NO),
	CONSTRAINT AMTB_ACCT_EARLY_PYMT_U1 UNIQUE (ACCOUNT_NO, EFFECTIVE_DATE),
	CONSTRAINT AMTB_ACCT_EARLY_PYMT_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_EARLY_PYMT_FK2 FOREIGN KEY(EARLY_PAYMENT_PLAN_NO) REFERENCES MSTB_EARLY_PAYMENT_MASTER(EARLY_PAYMENT_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_EARLY_PYMT_N1 ON AMTB_ACCT_EARLY_PYMT(ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_EARLY_PYMT_N2 ON AMTB_ACCT_EARLY_PYMT(EARLY_PAYMENT_PLAN_NO);
-- sequence for ACCOUNT LATE PAYMENT --
CREATE SEQUENCE  "AMTB_ACCT_LATE_PYMT_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- ACCOUNT LATE PAYMENT TABLE --
CREATE TABLE AMTB_ACCT_LATE_PYMT(
	ACCT_LATE_PYMT_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	LATE_PAYMENT_PLAN_NO NUMBER(8),
	EFFECTIVE_DATE DATE,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_LATE_PYMT_PK PRIMARY KEY(ACCT_LATE_PYMT_NO),
	CONSTRAINT AMTB_ACCT_LATE_PYMT_U1 UNIQUE (ACCOUNT_NO, EFFECTIVE_DATE),
	CONSTRAINT AMTB_ACCT_LATE_PYMT_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_LATE_PYMT_FK2 FOREIGN KEY(LATE_PAYMENT_PLAN_NO) REFERENCES MSTB_LATE_PAYMENT_MASTER(LATE_PAYMENT_PLAN_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_LATE_PYMT_N1 ON AMTB_ACCT_LATE_PYMT(ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_LATE_PYMT_N2 ON AMTB_ACCT_LATE_PYMT(LATE_PAYMENT_PLAN_NO);
CREATE INDEX AMTB_ACCT_LATE_PYMT_N3 ON AMTB_ACCT_LATE_PYMT(EFFECTIVE_DATE);
-- sequence for application --
CREATE SEQUENCE  "AMTB_APPLICATION_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- application table --
CREATE TABLE AMTB_APPLICATION (
	APPLICATION_NO VARCHAR2(8) NOT NULL,
	LATE_PAYMENT_PLAN_NO NUMBER(8),-- NOT NULL,
	EARLY_PAYMENT_PLAN_NO NUMBER(8),-- NOT NULL,
	VOLUME_DISCOUNT_PLAN_NO NUMBER(8),-- NOT NULL,
	ADMIN_FEE_PLAN_NO NUMBER(8),-- NOT NULL ,
	APPLICATION_DT TIMESTAMP,
	APPLICANT_NAME VARCHAR(80),-- NOT NULL,
	RCB_NO VARCHAR2(35),
	INDUSTRY_NO NUMBER(8),
	RCB_DT TIMESTAMP,
	CAPITAL NUMBER(15,2),
	ADDRESS_BLOCK VARCHAR2(10),
	ADDRESS_UNIT VARCHAR2(25),
	ADDRESS_STREET VARCHAR2(60),-- NOT NULL,
	ADDRESS_BUILDING VARCHAR2(60),
	ADDRESS_AREA VARCHAR2(60),
	ADDRESS_COUNTRY NUMBER(8),-- NOT NULL,
	ADDRESS_CITY VARCHAR2(35),
	ADDRESS_STATE VARCHAR2(35),
	ADDRESS_POSTAL VARCHAR2(10),-- NOT NULL,
	AUTH_PERSON VARCHAR2(50),--   NOT NULL ,
	AUTH_TITLE VARCHAR2(50),--   NOT NULL ,
	AUTH_SAL NUMBER(8),
	ACCOUNT_NO NUMBER(8),
	ACCT_TYPE_NO NUMBER(8),
	AR_CONTROL_CODE_NO NUMBER(8),
	CREDIT_LIMIT NUMBER(10,2),
	DEPOSIT NUMBER(10,2),
	SALESPERSON NUMBER(8),
	INFORMATION_SOURCE NUMBER(8),
	NAME_ON_CARD VARCHAR2(22),
	NRIC VARCHAR2(35),
	TEL VARCHAR2(20),
	FAX VARCHAR2(20),
	MOBILE VARCHAR2(20),
	OFFICE VARCHAR2(20),
	EMAIL VARCHAR2(255),
	JOB_STATUS NUMBER(8),
	BILLING_SAME VARCHAR2(1), -- Y = Yes, N = No
	BILLING_BLOCK VARCHAR2(10),
	BILLING_UNIT VARCHAR2(25),
	BILLING_STREET VARCHAR2(60),
	BILLING_BUILDING VARCHAR2(60),
	BILLING_AREA VARCHAR2(60),
	BILLING_COUNTRY NUMBER(8),
	BILLING_POSTAL VARCHAR2(10),
	BILLING_CITY VARCHAR2(35),
	BILLING_STATE VARCHAR2(35),
	SHIPPING_SAME VARCHAR2(1), -- Y = Yes, N = No
	SHIPPING_BLOCK VARCHAR2(10),
	SHIPPING_UNIT VARCHAR2(25),
	SHIPPING_STREET VARCHAR2(60),
	SHIPPING_BUILDING VARCHAR2(60),
	SHIPPING_AREA VARCHAR2(60),
	SHIPPING_COUNTRY NUMBER(8),
	SHIPPING_POSTAL VARCHAR2(10),
	SHIPPING_CITY VARCHAR2(35),
	SHIPPING_STATE VARCHAR2(35),
	OCCUPATION VARCHAR2(35),
	EMPLOYER_NAME VARCHAR2(35),
	EMPLOYER_BLOCK VARCHAR2(10),
	EMPLOYER_UNIT VARCHAR2(25),
	EMPLOYER_STREET VARCHAR2(60),
	EMPLOYER_BUILDING VARCHAR2(60),
	EMPLOYER_AREA VARCHAR2(60),
	EMPLOYER_COUNTRY NUMBER(8),
	EMPLOYER_POSTAL VARCHAR2(10),
	EMPLOYER_CITY VARCHAR2(35),
	EMPLOYER_STATE VARCHAR2(35),
	MONTHLY_INCOME NUMBER(10,2),
	EMPLOY_YEARS NUMBER(2),
	PROJECT_CODE VARCHAR2(1), -- Y = YES, N = NO
	CREATED_DT TIMESTAMP,
	UPDATED_DT TIMESTAMP,
	UPDATED_BY VARCHAR2(80),
	CREATED_BY VARCHAR2(80),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_APPLICATION_PK PRIMARY KEY(APPLICATION_NO),
	CONSTRAINT AMTB_APPLICATION_FK1 FOREIGN KEY(ACCT_TYPE_NO) REFERENCES AMTB_ACCT_TYPE(ACCT_TYPE_NO),
	CONSTRAINT AMTB_APPLICATION_FK2 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_APPLICATION_FK3 FOREIGN KEY(LATE_PAYMENT_PLAN_NO) REFERENCES MSTB_LATE_PAYMENT_MASTER(LATE_PAYMENT_PLAN_NO),
	CONSTRAINT AMTB_APPLICATION_FK4 FOREIGN KEY(EARLY_PAYMENT_PLAN_NO) REFERENCES MSTB_EARLY_PAYMENT_MASTER(EARLY_PAYMENT_PLAN_NO),
	CONSTRAINT AMTB_APPLICATION_FK5 FOREIGN KEY(VOLUME_DISCOUNT_PLAN_NO) REFERENCES MSTB_VOL_DISC_MASTER(VOLUME_DISCOUNT_PLAN_NO),
	CONSTRAINT AMTB_APPLICATION_FK6 FOREIGN KEY(ADMIN_FEE_PLAN_NO) REFERENCES MSTB_ADMIN_FEE_MASTER(ADMIN_FEE_PLAN_NO),
	CONSTRAINT AMTB_APPLICATION_FK7 FOREIGN KEY(ADDRESS_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_APPLICATION_FK8 FOREIGN KEY(AUTH_SAL) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_APPLICATION_FK9 FOREIGN KEY(AR_CONTROL_CODE_NO) REFERENCES FMTB_AR_CONT_CODE_MASTER(AR_CONTROL_CODE_NO),
	CONSTRAINT AMTB_APPLICATION_FK10 FOREIGN KEY(SALESPERSON) REFERENCES MSTB_SALESPERSON(SALESPERSON_NO),
	CONSTRAINT AMTB_APPLICATION_FK11 FOREIGN KEY(INFORMATION_SOURCE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_APPLICATION_FK12 FOREIGN KEY(JOB_STATUS) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_APPLICATION_FK13 FOREIGN KEY(INDUSTRY_NO) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_APPLICATION_FK14 FOREIGN KEY(EMPLOYER_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_APPLICATION_FK15 FOREIGN KEY(BILLING_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT AMTB_APPLICATION_FK16 FOREIGN KEY(SHIPPING_COUNTRY) REFERENCES MSTB_MASTER_TABLE(MASTER_NO)
);
-- creating indexes --
CREATE INDEX AMTB_APPLICATION_N1 ON AMTB_APPLICATION (ACCT_TYPE_NO);
CREATE INDEX AMTB_APPLICATION_N2 ON AMTB_APPLICATION (ACCOUNT_NO);
CREATE INDEX AMTB_APPLICATION_N3 ON AMTB_APPLICATION (LATE_PAYMENT_PLAN_NO);
CREATE INDEX AMTB_APPLICATION_N4 ON AMTB_APPLICATION (EARLY_PAYMENT_PLAN_NO);
CREATE INDEX AMTB_APPLICATION_N5 ON AMTB_APPLICATION (VOLUME_DISCOUNT_PLAN_NO);
CREATE INDEX AMTB_APPLICATION_N6 ON AMTB_APPLICATION (ADMIN_FEE_PLAN_NO);
CREATE INDEX AMTB_APPLICATION_N7 ON AMTB_APPLICATION (ADDRESS_COUNTRY);
CREATE INDEX AMTB_APPLICATION_N8 ON AMTB_APPLICATION (AUTH_SAL);
CREATE INDEX AMTB_APPLICATION_N9 ON AMTB_APPLICATION (AR_CONTROL_CODE_NO);
CREATE INDEX AMTB_APPLICATION_N10 ON AMTB_APPLICATION (SALESPERSON);
CREATE INDEX AMTB_APPLICATION_N11 ON AMTB_APPLICATION (INFORMATION_SOURCE);
CREATE INDEX AMTB_APPLICATION_N12 ON AMTB_APPLICATION (JOB_STATUS);
CREATE INDEX AMTB_APPLICATION_N13 ON AMTB_APPLICATION (INDUSTRY_NO);
CREATE INDEX AMTB_APPLICATION_N14 ON AMTB_APPLICATION (EMPLOYER_COUNTRY);
CREATE INDEX AMTB_APPLICATION_N15 ON AMTB_APPLICATION (BILLING_COUNTRY);
CREATE INDEX AMTB_APPLICATION_N16 ON AMTB_APPLICATION (SHIPPING_COUNTRY);
-- creating comments --
COMMENT ON COLUMN AMTB_APPLICATION.APPLICATION_DT IS 'APPLICATION DATE';
COMMENT ON COLUMN AMTB_APPLICATION.APPLICANT_NAME IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.RCB_NO IS 'CORPORATE';
COMMENT ON COLUMN AMTB_APPLICATION.RCB_DT IS 'CORPORATE';
COMMENT ON COLUMN AMTB_APPLICATION.CAPITAL IS 'CORPORATE';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_BLOCK IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_UNIT IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_STREET IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_BUILDING IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_AREA IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_COUNTRY IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_CITY IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_STATE IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ADDRESS_POSTAL IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.AUTH_PERSON IS 'BOTH. NAME';
COMMENT ON COLUMN AMTB_APPLICATION.AUTH_TITLE IS 'CORPORATE';
COMMENT ON COLUMN AMTB_APPLICATION.AUTH_SAL IS 'SALUATATION. FOR BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.ACCOUNT_NO IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.AR_CONTROL_CODE_NO IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.CREDIT_LIMIT IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.DEPOSIT IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.SALESPERSON IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.INFORMATION_SOURCE IS 'BOTH';
COMMENT ON COLUMN AMTB_APPLICATION.NAME_ON_CARD IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.NRIC IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.TEL IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.MOBILE IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.OFFICE IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMAIL IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.JOB_STATUS IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.OCCUPATION IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_NAME IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_BLOCK IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_UNIT IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_STREET IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_BUILDING IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_AREA IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_COUNTRY IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_POSTAL IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_CITY IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOYER_STATE IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.MONTHLY_INCOME IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOY_YEARS IS 'PERSONAL';
COMMENT ON COLUMN AMTB_APPLICATION.SHIPPING_SAME IS 'Y = YES, N = NO';
COMMENT ON COLUMN AMTB_APPLICATION.EMPLOY_YEARS IS 'Y = YES, N = NO';
-- sequence for application product --
CREATE SEQUENCE  "AMTB_APPLICATION_PRODUCT_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
-- application product table --
CREATE TABLE AMTB_APPLICATION_PRODUCT (
	APPLICATION_PRODUCT_NO NUMBER(8) NOT NULL,
	APPLICATION_NO VARCHAR2(8) NOT NULL,
	PRODUCT_TYPE_ID VARCHAR2(2) NOT NULL,
	PRODUCT_DISCOUNT_PLAN_NO NUMBER(8),
	REWARDS_PLAN_NO NUMBER(8),
	SUBSCRIPTION_FEE_NO NUMBER(8),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_APPLICATION_PRODUCT_PK PRIMARY KEY(APPLICATION_PRODUCT_NO),
	CONSTRAINT AMTB_APPLICATION_PRODUCT_FK1 FOREIGN KEY(APPLICATION_NO) REFERENCES AMTB_APPLICATION(APPLICATION_NO),
	CONSTRAINT AMTB_APPLICATION_PRODUCT_FK2 FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PMTB_PRODUCT_TYPE(PRODUCT_TYPE_ID),
	CONSTRAINT AMTB_APPLICATION_PRODUCT_FK3 FOREIGN KEY(PRODUCT_DISCOUNT_PLAN_NO) REFERENCES MSTB_PROD_DISC_MASTER(PRODUCT_DISCOUNT_PLAN_NO),
	CONSTRAINT AMTB_APPLICATION_PRODUCT_FK4 FOREIGN KEY(REWARDS_PLAN_NO) REFERENCES LRTB_REWARD_MASTER(REWARD_PLAN_NO),
	CONSTRAINT AMTB_APPLICATION_PRODUCT_FK5 FOREIGN KEY(SUBSCRIPTION_FEE_NO) REFERENCES MSTB_SUBSC_FEE_MASTER(SUBSCRIPTION_FEE_NO)
);
-- creating indexes --
CREATE INDEX AMTB_APPLICATION_PRODUCT_N1 ON AMTB_APPLICATION_PRODUCT (APPLICATION_NO);
CREATE INDEX AMTB_APPLICATION_PRODUCT_N2 ON AMTB_APPLICATION_PRODUCT (PRODUCT_TYPE_ID);
CREATE INDEX AMTB_APPLICATION_PRODUCT_N3 ON AMTB_APPLICATION_PRODUCT (PRODUCT_DISCOUNT_PLAN_NO);
CREATE INDEX AMTB_APPLICATION_PRODUCT_N4 ON AMTB_APPLICATION_PRODUCT (REWARDS_PLAN_NO);
CREATE INDEX AMTB_APPLICATION_PRODUCT_N5 ON AMTB_APPLICATION_PRODUCT (SUBSCRIPTION_FEE_NO);
-- sequence for application FLOW --
CREATE SEQUENCE  "AMTB_APPLICATION_FLOW_SQ1"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
-- application FLOW table --
CREATE TABLE AMTB_APPLICATION_FLOW (
	APPLICATION_FLOW_NO NUMBER(8) NOT NULL,
	APPLICATION_NO VARCHAR2(8) NOT NULL,
	FLOW_DT TIMESTAMP NOT NULL,
	FROM_STATUS VARCHAR2(2) NOT NULL,
	TO_STATUS VARCHAR2(2) NOT NULL,
	REMARKS VARCHAR2(500),
	USER_ID NUMBER(10) NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_APPLICATION_FLOW_PK PRIMARY KEY(APPLICATION_FLOW_NO),
	CONSTRAINT AMTB_APPLICATION_FLOW_FK1 FOREIGN KEY(APPLICATION_NO) REFERENCES AMTB_APPLICATION(APPLICATION_NO),
	CONSTRAINT AMTB_APPLICATION_FLOW_FK2 FOREIGN KEY(USER_ID) REFERENCES SATB_USER(USER_ID)
);
-- creating indexes --
CREATE INDEX AMTB_APPLICATION_FLOW_N1 ON AMTB_APPLICATION_FLOW (APPLICATION_NO);
CREATE INDEX AMTB_APPLICATION_FLOW_N2 ON AMTB_APPLICATION_FLOW (USER_ID);
-- sequence for product --
CREATE SEQUENCE  "PMTB_PRODUCT_SQ1"  MINVALUE 1 MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
--PRODUCT table updated one
CREATE TABLE "PMTB_PRODUCT" (
	"PRODUCT_NO" NUMBER(19,0) NOT NULL, 
	"PRODUCT_TYPE_ID" VARCHAR2(2 BYTE) NOT NULL, 
	"CARD_NO" VARCHAR2(19 BYTE) NOT NULL, 
	"ACCOUNT_NO" NUMBER(8,0) NOT NULL, 
	"NAME_ON_PRODUCT" VARCHAR2(80 BYTE), 
	"CREDIT_LIMIT" NUMBER(12,2), 
	"TEMP_CREDIT_LIMIT" NUMBER(12,2), 
	"CREDIT_BALANCE" NUMBER(12,2), 
	"ISSUE_DATE" DATE NOT NULL, 
	"EXPIRY_DATE" DATE, 
	"FIXED_VALUE" NUMBER(12,2), 
	"CREATED_DT" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(80 BYTE), 
	"UPDATED_DT" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(80 BYTE), 
	"CARD_HOLDER_NAME" VARCHAR2(80 BYTE), 
	"CARD_HOLDER_TITLE" VARCHAR2(80 BYTE), 
	"CARD_HOLDER_TEL" VARCHAR2(20 BYTE), 
	"CARD_HOLDER_SALUTATION" VARCHAR2(80 BYTE), 
	"CARD_HOLDER_MOBILE" VARCHAR2(20 BYTE), 
	"CARD_HOLDER_EMAIL" VARCHAR2(255 BYTE), 
	"VERSION" NUMBER(9,0) DEFAULT 0, 
	"WAIVE_SUBSC_FEE_FLAG" VARCHAR2(1 CHAR) DEFAULT 'N' NOT NULL, 
	"LAST_SUBSC_FEE_CHARGE_DATE" DATE, 
	"CURRENT_STATUS" VARCHAR2(2 BYTE), 
	"IS_INDIVIDUAL_CARD" VARCHAR2(1), -- Y = YES, N = NO, null = not CC
	"EMBOSS_FLAG" VARCHAR2(1), -- Y = YES, null/N = NO
	CONSTRAINT "PMTB_PRODUCT_PK" PRIMARY KEY ("PRODUCT_NO"),
	CONSTRAINT "PMTB_PRODUCT_FK1" FOREIGN KEY ("PRODUCT_TYPE_ID") REFERENCES "PMTB_PRODUCT_TYPE" ("PRODUCT_TYPE_ID") ENABLE, 
	CONSTRAINT "PMTB_PRODUCT_FK2" FOREIGN KEY ("ACCOUNT_NO") REFERENCES "AMTB_ACCOUNT" ("ACCOUNT_NO") ENABLE
);
COMMENT ON COLUMN "PMTB_PRODUCT"."WAIVE_SUBSC_FEE_FLAG" IS 'new added column for waive when issue the product';
COMMENT ON COLUMN "PMTB_PRODUCT"."LAST_SUBSC_FEE_CHARGE_DATE" IS 'LAST_SUBSC_FEE_CHARGE_DATE, new column';
CREATE INDEX "PMTB_PRODUCT_N1" ON "PMTB_PRODUCT" ("PRODUCT_TYPE_ID");
CREATE INDEX "PMTB_PRODUCT_N2" ON "PMTB_PRODUCT" ("ACCOUNT_NO");
CREATE INDEX PMTB_PRODUCT_N3 ON PMTB_PRODUCT(PRODUCT_TYPE_ID, ACCOUNT_NO);
CREATE INDEX PMTB_PRODUCT_N4 ON PMTB_PRODUCT(ACCOUNT_NO,CARD_NO);
CREATE INDEX PMTB_PRODUCT_N5 ON PMTB_PRODUCT (NAME_ON_PRODUCT);

alter table PMTB_PRODUCT add ( 
 constraint PMTB_PRODUCT_U1 unique (CARD_NO,CURRENT_STATUS,ISSUE_DATE) 
);

-- sequence for PRODUCT STATUS --
CREATE SEQUENCE  "PMTB_PRODUCT_STATUS_SQ1"  MINVALUE 1 MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
-- PRODUCT STATUS table --
CREATE TABLE PMTB_PRODUCT_STATUS (
	PRODUCT_STATUS_NO NUMBER(19) NOT NULL, -- TO ACCOMADATE WITH PRODUCT NO
	PRODUCT_NO NUMBER(19) NOT NULL,
	STATUS_FROM VARCHAR2(2) NOT NULL, -- N = NEW, A = ACTIVE, U = USED, S = SUSPENDED, PS = PARENT SUSPENDED, T = TERMINATED
	STATUS_TO VARCHAR2(2) NOT NULL, -- N = NEW, A = ACTIVE, U = USED, S = SUSPENDED, PS = PARENT SUSPENDED, T = TERMINATED
	STATUS_DT TIMESTAMP NOT NULL,
	STATUS_REASON NUMBER(8) NOT NULL, -- REFERENCE TO MASTER
	STATUS_REMARKS VARCHAR2(500) NOT NULL,
	VERSION NUMBER(9) DEFAULT 0,
	"CREATED_DT" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(80 BYTE), 
	"UPDATED_DT" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(80 BYTE),
	CONSTRAINT PMTB_PRODUCT_STATUS_PK PRIMARY KEY(PRODUCT_STATUS_NO),
	CONSTRAINT PMTB_PRODUCT_STATUS_FK1 FOREIGN KEY(PRODUCT_NO) REFERENCES PMTB_PRODUCT(PRODUCT_NO),
	CONSTRAINT PMTB_PRODUCT_STATUS_FK2 FOREIGN KEY(STATUS_REASON) REFERENCES MSTB_MASTER_TABLE(MASTER_NO)
);
-- creating indexes --
CREATE INDEX PMTB_PRODUCT_STATUS_N1 ON PMTB_PRODUCT_STATUS (PRODUCT_NO);
CREATE INDEX PMTB_PRODUCT_STATUS_N2 ON PMTB_PRODUCT_STATUS (STATUS_REASON);
-- creating comments --
COMMENT ON COLUMN PMTB_PRODUCT_STATUS.STATUS_FROM IS 'N = NEW, A = ACTIVE, U = USED, S = SUSPENDED, PS = PARENT SUSPENDED, T = TERMINATED';
COMMENT ON COLUMN PMTB_PRODUCT_STATUS.STATUS_TO IS 'N = NEW, A = ACTIVE, U = USED, S = SUSPENDED, PS = PARENT SUSPENDED, T = TERMINATED';
-- sequence for PRODUCT REPLACEMENT --
CREATE SEQUENCE  "PMTB_PRODUCT_REPLACEMENT_SQ1"  MINVALUE 1 MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
-- PRODUCT STATUS table --
CREATE TABLE PMTB_PRODUCT_REPLACEMENT (
	PRODUCT_REPLACEMENT_NO NUMBER(19) NOT NULL, -- TO ACCOMADATE WITH PRODUCT NO
	PRODUCT_NO NUMBER(19) NOT NULL,
	CURRENT_CARD_NO VARCHAR2(19) NOT NULL,
	NEW_CARD_NO VARCHAR2(19) NOT NULL,
	REPLACEMENT_DATE DATE NOT NULL,
	REPLACEMENT_FEE NUMBER(12,2),
	WAIVE_REPLACEMENT VARCHAR2(1) NOT NULL, -- Y = YES, N = NO
	REPLACEMENT_REASON NUMBER(8) NOT NULL, -- REFERENCE TO MASTER
	REPLACEMENT_REMARKS VARCHAR2(500) NOT NULL,
	CURRENT_EXP_DATE DATE NOT NULL,
	NEW_EXP_DATE DATE NOT NULL,
	"EMBOSS_FLAG" VARCHAR2(1), -- Y = YES, null/N = NO
	BILLED_FLAG VARCHAR2(1) DEFAULT 'N' NOT NULL,
	VERSION NUMBER(9) DEFAULT 0,
	"CREATED_DT" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(80 BYTE), 
	"UPDATED_DT" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(80 BYTE),
	CONSTRAINT PMTB_PRODUCT_REPLACEMENT_PK PRIMARY KEY(PRODUCT_REPLACEMENT_NO),
	CONSTRAINT PMTB_PRODUCT_REPLACEMENT_FK1 FOREIGN KEY(PRODUCT_NO) REFERENCES PMTB_PRODUCT(PRODUCT_NO),
	CONSTRAINT PMTB_PRODUCT_REPLACEMENT_FK2 FOREIGN KEY(REPLACEMENT_REASON) REFERENCES MSTB_MASTER_TABLE(MASTER_NO)
);
-- creating indexes --
CREATE INDEX PMTB_PRODUCT_REPLACEMENT_N1 ON PMTB_PRODUCT_REPLACEMENT (PRODUCT_NO);
CREATE INDEX PMTB_PRODUCT_REPLACEMENT_N2 ON PMTB_PRODUCT_REPLACEMENT (REPLACEMENT_REASON);
-- creating comments --
COMMENT ON COLUMN PMTB_PRODUCT_REPLACEMENT.WAIVE_REPLACEMENT IS 'Y = YES, N = NO';
-- sequence for PRODUCT RETAG --
CREATE SEQUENCE  "PMTB_PRODUCT_RETAG_SQ1"  MINVALUE 1 MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
-- PRODUCT STATUS table --
CREATE TABLE PMTB_PRODUCT_RETAG (
	PRODUCT_RETAG_NO NUMBER(19) NOT NULL, -- TO ACCOMADATE WITH PRODUCT NO
	PRODUCT_NO NUMBER(19) NOT NULL,
	CURRENT_ACCOUNT_NO NUMBER(8) NOT NULL,
	NEW_ACCOUNT_NO NUMBER(8) NOT NULL,
	EFFECTIVE_DT TIMESTAMP NOT NULL,
	RETAG_REMARKS VARCHAR2(500) NOT NULL,
	VERSION NUMBER(9) DEFAULT 0,
	"CREATED_DT" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(80 BYTE), 
	"UPDATED_DT" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(80 BYTE),
	CONSTRAINT PMTB_PRODUCT_RETAG_PK PRIMARY KEY(PRODUCT_RETAG_NO),
	CONSTRAINT PMTB_PRODUCT_RETAG_FK1 FOREIGN KEY(PRODUCT_NO) REFERENCES PMTB_PRODUCT(PRODUCT_NO),
	CONSTRAINT PMTB_PRODUCT_RETAG_FK2 FOREIGN KEY(CURRENT_ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT PMTB_PRODUCT_RETAG_FK3 FOREIGN KEY(NEW_ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO)
);
-- creating indexes --
CREATE INDEX PMTB_PRODUCT_RETAG_N1 ON PMTB_PRODUCT_RETAG (PRODUCT_NO);
CREATE INDEX PMTB_PRODUCT_RETAG_N2 ON PMTB_PRODUCT_RETAG (CURRENT_ACCOUNT_NO);
CREATE INDEX PMTB_PRODUCT_RETAG_N3 ON PMTB_PRODUCT_RETAG (NEW_ACCOUNT_NO);
-- creating comments --
-- sequence for PRODUCT RETAG --
CREATE SEQUENCE  "PMTB_PRODUCT_RENEW_SQ1"  MINVALUE 1 MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 10 NOORDER  NOCYCLE ;
-- PRODUCT STATUS table --
CREATE TABLE PMTB_PRODUCT_RENEW (
	PRODUCT_RENEW_NO NUMBER(19) NOT NULL, -- TO ACCOMADATE WITH PRODUCT NO
	PRODUCT_NO NUMBER(19) NOT NULL,
	DURATION_TYPE VARCHAR2(5) NOT NULL,
	DURATION_LENGTH VARCHAR2(2),
	RENEW_DATE DATE NOT NULL,
	CURRENT_EXP_DATE DATE NOT NULL,
	NEW_EXP_DATE DATE NOT NULL,
	REMARKS VARCHAR2(500) NOT NULL,
	EMBOSS_FLAG VARCHAR2(1), -- Y = YES, null/N = NO
	VERSION NUMBER(9) DEFAULT 0,
	"CREATED_DT" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(80 BYTE), 
	"UPDATED_DT" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(80 BYTE),
	CONSTRAINT PMTB_PRODUCT_RENEW_PK PRIMARY KEY(PRODUCT_RENEW_NO),
	CONSTRAINT PMTB_PRODUCT_RENEW_FK1 FOREIGN KEY(PRODUCT_NO) REFERENCES PMTB_PRODUCT(PRODUCT_NO)
);
-- creating indexes --
CREATE INDEX PMTB_PRODUCT_RENEW_N1 ON PMTB_PRODUCT_RENEW (PRODUCT_NO);
-- creating comments --
CREATE SEQUENCE  "PMTB_PRODUCT_CREDIT_LIMIT_SQ1"  MINVALUE 1 MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;
-- PRODUCT STATUS table --
CREATE TABLE PMTB_PRODUCT_CREDIT_LIMIT (
	PRODUCT_CREDIT_LIMIT_NO NUMBER(19) NOT NULL, -- TO ACCOMADATE WITH PRODUCT NO
	PRODUCT_NO NUMBER(19) NOT NULL,
	CREDIT_LIMIT_TYPE VARCHAR2(1) NOT NULL, -- P = PERMANENT, T = TEMPORARY
	NEW_CREDIT_LIMIT NUMBER(10,2) NOT NULL,
	EFFECTIVE_DT_FROM TIMESTAMP NOT NULL,
	EFFECTIVE_DT_TO TIMESTAMP,
	REMARKS VARCHAR2(500) NOT NULL,
	VERSION NUMBER(9) DEFAULT 0,
	"CREATED_DT" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(80 BYTE), 
	"UPDATED_DT" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(80 BYTE),
	CONSTRAINT PMTB_PRODUCT_CREDIT_LIMIT_PK PRIMARY KEY(PRODUCT_CREDIT_LIMIT_NO),
	CONSTRAINT PMTB_PRODUCT_CREDIT_LIMIT_FK1 FOREIGN KEY(PRODUCT_NO) REFERENCES PMTB_PRODUCT(PRODUCT_NO)
);
-- creating indexes --
CREATE INDEX PMTB_PRODUCT_CREDIT_LIMIT_N1 ON PMTB_PRODUCT_CREDIT_LIMIT (PRODUCT_NO);
-- creating comments --
COMMENT ON COLUMN PMTB_PRODUCT_CREDIT_LIMIT.CREDIT_LIMIT_TYPE IS 'P = PERMANENT, T = TEMPORARY';
-- sequence for acquire txn --
CREATE SEQUENCE  "TMTB_ACQUIRE_TXN_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;
CREATE SEQUENCE  "TMTB_ACQUIRE_TXN_SQ2"  MINVALUE 9000000000 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 9000000001 CACHE 10 NOORDER  NOCYCLE ;
-- acquire txn table --
CREATE TABLE TMTB_ACQUIRE_TXN (
	ACQUIRE_TXN_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	PRODUCT_NO NUMBER(19), --nullable because premier service has no product instance
	CARD_TYPE VARCHAR2(1),
	TXN_STATUS VARCHAR2(1),
	NRIC VARCHAR2(15) NOT NULL, --DRIVER NRIC
	FARE_AMT NUMBER(12,2),
	PICKUP_ADDRESS VARCHAR2(255) NOT NULL,
	SERVICE_PROVIDER NUMBER(8), -- tie to master_table
	BILLABLE_AMT NUMBER(12,2),
	PROJECT_DESC VARCHAR2(80),
	JOB_NO VARCHAR2(10) NOT NULL,
	TAXI_NO VARCHAR2(10) NOT NULL,
	DESTINATION VARCHAR2(255),
	SURCHARGE VARCHAR2(255),
	VEHICLE_TYPE NUMBER(8), -- tie to master_table
	PASSENGER_NAME VARCHAR2(80),
	TRIP_START_DT TIMESTAMP NOT NULL,
	TRIP_END_DT TIMESTAMP NOT NULL,
	BOOKING_REF VARCHAR2(40),
	BOOKED_BY VARCHAR2(80),
	GST_PERCENT NUMBER(5,2),
	GST_VALUE NUMBER(12,2),
	ADMIN_FEE_PERCENT NUMBER(5,2),
	ADMIN_FEE_VALUE NUMBER(12,2),
	PROD_DIS_PERCENT NUMBER(5,2),
	PROD_DIS_VALUE NUMBER(12,2),
	PROMO_DIS_PERCENT NUMBER(5,2),
	PROMO_DIS_VALUE NUMBER(12,2),
	JOB_STATUS VARCHAR2(10),
	TRIP_TYPE NUMBER(8),
	PAYMENT_MODE VARCHAR2(10),
	APPROVAL_CODE VARCHAR2(20),
	COMPLIMENTARY VARCHAR2(1),
	SALES_DRAFT_NO VARCHAR2(15),
	JOB_TYPE VARCHAR2(10),
	BOOK_DATE_TIME TIMESTAMP,
	SETL_DATE DATE,
	BANK_TID VARCHAR2(8),
	BANK_BATCH_CLOSE_NO VARCHAR2(6),
	PRODUCT_TYPE_ID VARCHAR2(2) NOT NULL,
	REMARKS VARCHAR2(255),
	LEVY NUMBER(12,2),
	UPDATE_FMS VARCHAR2(80),
	FMS_AMT NUMBER(12,2),
	FMS_FLAG VARCHAR2(1),
	OTU_FLAG VARCHAR2(1),
	FLIGHT_INFO VARCHAR2(20),
	NOTE_NO NUMBER(18),
	CREATED_DT TIMESTAMP,
	UPDATED_DT TIMESTAMP,
	UPDATED_BY VARCHAR2(80),
	CREATED_BY VARCHAR2(80),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT TMTB_ACQUIRE_TXN_PK PRIMARY KEY(ACQUIRE_TXN_NO),
	CONSTRAINT TMTB_ACQUIRE_TXN_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT TMTB_ACQUIRE_TXN_FK2 FOREIGN KEY(PRODUCT_NO) REFERENCES PMTB_PRODUCT(PRODUCT_NO),
	CONSTRAINT TMTB_ACQUIRE_TXN_FK3 FOREIGN KEY(SERVICE_PROVIDER) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT TMTB_ACQUIRE_TXN_FK4 FOREIGN KEY(VEHICLE_TYPE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT TMTB_ACQUIRE_TXN_FK5 FOREIGN KEY(TRIP_TYPE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT TMTB_ACQUIRE_TXN_FK6 FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PMTB_PRODUCT_TYPE(PRODUCT_TYPE_ID)
);
-- creating indexes --
CREATE INDEX TMTB_ACQUIRE_TXN_N1 ON TMTB_ACQUIRE_TXN (ACCOUNT_NO);
CREATE INDEX TMTB_ACQUIRE_TXN_N2 ON TMTB_ACQUIRE_TXN (PRODUCT_NO);
CREATE INDEX TMTB_ACQUIRE_TXN_N3 ON TMTB_ACQUIRE_TXN (SERVICE_PROVIDER);
CREATE INDEX TMTB_ACQUIRE_TXN_N4 ON TMTB_ACQUIRE_TXN (VEHICLE_TYPE);
CREATE INDEX TMTB_ACQUIRE_TXN_N5 ON TMTB_ACQUIRE_TXN (TRIP_TYPE);
CREATE INDEX TMTB_ACQUIRE_TXN_N6 ON TMTB_ACQUIRE_TXN (PRODUCT_TYPE_ID);
CREATE INDEX TMTB_ACQUIRE_TXN_N7 ON TMTB_ACQUIRE_TXN (NOTE_NO);
CREATE INDEX TMTB_ACQUIRE_TXN_N8 ON TMTB_ACQUIRE_TXN (JOB_NO);
CREATE INDEX TMTB_ACQUIRE_TXN_N9 ON TMTB_ACQUIRE_TXN (PRODUCT_TYPE_ID,TRIP_START_DT,TRIP_END_DT);
CREATE INDEX TMTB_ACQUIRE_TXN_N10 ON TMTB_ACQUIRE_TXN(ACCOUNT_NO, TXN_STATUS);
CREATE INDEX TMTB_ACQUIRE_TXN_N11 ON TMTB_ACQUIRE_TXN(ACCOUNT_NO, TXN_STATUS, TRIP_START_DT);
CREATE INDEX TMTB_ACQUIRE_TXN_N12 ON TMTB_ACQUIRE_TXN(ACCOUNT_NO, PRODUCT_NO, TRIP_START_DT, TXN_STATUS);
-- SEQUENCE FOR TXN REVIEW TABLE --
CREATE SEQUENCE  "TMTB_TXN_REVIEW_REQ_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;
-- TXN REVIEW table --
CREATE TABLE TMTB_TXN_REVIEW_REQ (
	TXN_REVIEW_REQ_NO NUMBER(8) NOT NULL,
	ACQUIRE_TXN_NO NUMBER(8) NOT NULL,
	ACTION_TXN VARCHAR2(10),
	ACCOUNT_NO NUMBER(8),
	PRODUCT_NO NUMBER(19), --nullable because premier service has no product instance
	PRODUCT_TYPE_ID VARCHAR2(2),
	TRIP_START_DT TIMESTAMP,
	TRIP_END_DT TIMESTAMP,
	ENTITY_NO NUMBER(8),
	FARE_AMT NUMBER(12,2),
	PICKUP_ADDRESS VARCHAR2(255),
	DESTINATION VARCHAR2(255),
	REMARKS VARCHAR2(255),
	LEVY NUMBER(12,2),
	PASSENGER_NAME VARCHAR2(80),
	VEHICLE_TYPE NUMBER(8), -- tie to master_table
	SERVICE_PROVIDER NUMBER(8), -- tie to master_table
	TRIP_TYPE NUMBER(8),
	BOOKING_REF VARCHAR2(40),
	BOOKED_BY VARCHAR2(80),
	SURCHARGE VARCHAR2(255),
	SALES_DRAFT_NO VARCHAR2(15),
	UPDATE_FMS VARCHAR2(80),
	FMS_AMT NUMBER(12,2),
	FMS_FLAG VARCHAR2(1),
	OTU_FLAG VARCHAR2(1),
	FLIGHT_INFO VARCHAR2(20),
	BOOK_DATE_TIME TIMESTAMP,
	PROJECT_DESC VARCHAR2(80),
	COMPLIMENTARY VARCHAR2(1),
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT TMTB_TXN_REVIEW_REQ_PK PRIMARY KEY(TXN_REVIEW_REQ_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FK1 FOREIGN KEY(ACQUIRE_TXN_NO) REFERENCES TMTB_ACQUIRE_TXN(ACQUIRE_TXN_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FK2 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FK3 FOREIGN KEY(PRODUCT_NO) REFERENCES PMTB_PRODUCT(PRODUCT_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FK4 FOREIGN KEY(VEHICLE_TYPE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FK5 FOREIGN KEY(SERVICE_PROVIDER) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FK6 FOREIGN KEY(TRIP_TYPE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FK7 FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PMTB_PRODUCT_TYPE(PRODUCT_TYPE_ID)
);
-- creating indexes --
CREATE INDEX TMTB_TXN_REVIEW_REQ_N1 ON TMTB_TXN_REVIEW_REQ (ACQUIRE_TXN_NO);
CREATE INDEX TMTB_TXN_REVIEW_REQ_N2 ON TMTB_TXN_REVIEW_REQ (ACCOUNT_NO);
CREATE INDEX TMTB_TXN_REVIEW_REQ_N3 ON TMTB_TXN_REVIEW_REQ (PRODUCT_NO);
CREATE INDEX TMTB_TXN_REVIEW_REQ_N4 ON TMTB_TXN_REVIEW_REQ (VEHICLE_TYPE);
CREATE INDEX TMTB_TXN_REVIEW_REQ_N5 ON TMTB_TXN_REVIEW_REQ (SERVICE_PROVIDER);
CREATE INDEX TMTB_TXN_REVIEW_REQ_N6 ON TMTB_TXN_REVIEW_REQ (TRIP_TYPE);
CREATE INDEX TMTB_TXN_REVIEW_REQ_N7 ON TMTB_TXN_REVIEW_REQ (PRODUCT_TYPE_ID);
-- sequence for TXN REVIEW REQUEST FLOW --
CREATE SEQUENCE  "TMTB_TXN_REVIEW_REQ_FLOW_SQ1"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 2 CACHE 10 NOORDER  NOCYCLE ;
-- CREDIT REVIEW REQUEST FLOW --
CREATE TABLE TMTB_TXN_REVIEW_REQ_FLOW (
	TXN_REVIEW_REQ_FLOW_NO NUMBER(8) NOT NULL,
	PARENT_REQ_FLOW_NO NUMBER(8),
	TXN_REVIEW_REQ_NO NUMBER(8) NOT NULL,
	FROM_STATUS VARCHAR2(1) NOT NULL, -- N = NEW, P = PENDING, A = APPROVED, R = REJECTED
	TO_STATUS VARCHAR2(1) NOT NULL, -- N = NEW, P = PENDING, A = APPROVED, R = REJECTED
	REMARKS VARCHAR2(500),
	FLOW_DT TIMESTAMP NOT NULL,
	USER_ID NUMBER(10) NOT NULL,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FLOW_PK PRIMARY KEY(TXN_REVIEW_REQ_FLOW_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FLOW_FK1 FOREIGN KEY(TXN_REVIEW_REQ_NO) REFERENCES TMTB_TXN_REVIEW_REQ(TXN_REVIEW_REQ_NO),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FLOW_FK2 FOREIGN KEY(USER_ID) REFERENCES SATB_USER(USER_ID),
	CONSTRAINT TMTB_TXN_REVIEW_REQ_FLOW_FK3 FOREIGN KEY(PARENT_REQ_FLOW_NO) REFERENCES TMTB_TXN_REVIEW_REQ_FLOW(TXN_REVIEW_REQ_FLOW_NO)
);
-- CREATING COMMENTS --
COMMENT ON COLUMN TMTB_TXN_REVIEW_REQ_FLOW.FROM_STATUS IS 'N = NEW, P = PENDING, A = APPROVED, R = REJECTED';
COMMENT ON COLUMN TMTB_TXN_REVIEW_REQ_FLOW.TO_STATUS IS 'N = NEW, P = PENDING, A = APPROVED, R = REJECTED';
-- creating indexes --
CREATE INDEX TMTB_TXN_REVIEW_REQ_FLOW_N1 ON TMTB_TXN_REVIEW_REQ_FLOW (TXN_REVIEW_REQ_NO);
CREATE INDEX TMTB_TXN_REVIEW_REQ_FLOW_N2 ON TMTB_TXN_REVIEW_REQ_FLOW (USER_ID);
CREATE INDEX TMTB_TXN_REVIEW_REQ_FLOW_N3 ON TMTB_TXN_REVIEW_REQ_FLOW (PARENT_REQ_FLOW_NO);
CREATE INDEX TMTB_TXN_REVIEW_REQ_FLOW_N4 ON TMTB_TXN_REVIEW_REQ_FLOW (TO_STATUS);







--------------------------------- FMTB Tables ------------------------------
-- put here cause it needs to have product types table created first.
CREATE SEQUENCE  "FMTB_TRANSACTION_CODE_SQ1"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;
-- TRANSACTION CODE table --
CREATE TABLE FMTB_TRANSACTION_CODE (
	TRANSACTION_CODE_NO NUMBER(8) NOT NULL,
	ENTITY_NO NUMBER(8) NOT NULL,
	PRODUCT_TYPE_ID VARCHAR2(2),
	TXN_CODE VARCHAR2(10) NOT NULL,
	DESCRIPTION VARCHAR2(60) NOT NULL,
	TXN_TYPE VARCHAR2(2) NOT NULL,
	GL_CODE VARCHAR2(10) NOT NULL,
	COST_CENTRE VARCHAR2(10) NOT NULL,
	DISCOUNTABLE VARCHAR2(1) NOT NULL,
	DISCOUNT_GL_CODE VARCHAR2(10),
	DISCOUNT_COST_CENTRE VARCHAR2(10),
	EFFECTIVE_DATE DATE NOT NULL,
	TAX_TYPE NUMBER(8),
	IS_MANUAL VARCHAR2(1),
	VERSION NUMBER(9) DEFAULT 0,
	CONSTRAINT FMTB_TRANSACTION_CODE_PK PRIMARY KEY(TRANSACTION_CODE_NO),
	CONSTRAINT FMTB_TRANSACTION_CODE_FK1 FOREIGN KEY(ENTITY_NO) REFERENCES FMTB_ENTITY_MASTER(ENTITY_NO),
	CONSTRAINT FMTB_TRANSACTION_CODE_FK2 FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PMTB_PRODUCT_TYPE(PRODUCT_TYPE_ID),
	CONSTRAINT FMTB_TRANSACTION_CODE_FK3 FOREIGN KEY(TAX_TYPE) REFERENCES MSTB_MASTER_TABLE(MASTER_NO)
);
-- creating indexes --
CREATE INDEX FMTB_TRANSACTION_CODE_N1 ON FMTB_TRANSACTION_CODE(ENTITY_NO);
CREATE INDEX FMTB_TRANSACTION_CODE_N2 ON FMTB_TRANSACTION_CODE(PRODUCT_TYPE_ID);
CREATE INDEX FMTB_TRANSACTION_CODE_N3 ON FMTB_TRANSACTION_CODE(TAX_TYPE);
CREATE INDEX FMTB_TRANSACTION_CODE_N4 ON FMTB_TRANSACTION_CODE(EFFECTIVE_DATE);
CREATE INDEX fmtb_transaction_code_N5 ON fmtb_transaction_code(txn_type, effective_date);
CREATE INDEX FMTB_TRANSACTION_CODE_N6 ON FMTB_TRANSACTION_CODE(TXN_CODE, EFFECTIVE_DATE);
-- creating comments --
COMMENT ON COLUMN FMTB_TRANSACTION_CODE.DISCOUNTABLE IS 'Y = YES, N = NO';
-------------- Phase 2 --------------------
-- sequence for ACCOUNT PROMOTION --
CREATE SEQUENCE "AMTB_ACCT_PROMOTION_SQ1" MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER NOCYCLE ;
-- ACCOUNT PROMOTION TABLE --
CREATE TABLE AMTB_ACCT_PROMOTION(
	ACCT_PROMOTION_NO NUMBER(8) NOT NULL,
	ACCOUNT_NO NUMBER(8) NOT NULL,
	PROMO_NO NUMBER(8),
	EFFECTIVE_DATE_FROM DATE NOT NULL,
    EFFECTIVE_DATE_TO DATE,
	VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_PROMOTION_PK PRIMARY KEY(ACCT_PROMOTION_NO),
	CONSTRAINT AMTB_ACCT_PROMOTION_FK1 FOREIGN KEY(ACCOUNT_NO) REFERENCES AMTB_ACCOUNT(ACCOUNT_NO),
	CONSTRAINT AMTB_ACCT_PROMOTION_FK2 FOREIGN KEY(PROMO_NO) REFERENCES MSTB_PROMOTION(PROMO_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_PROMOTION_N1 ON AMTB_ACCT_PROMOTION(ACCOUNT_NO);
CREATE INDEX AMTB_ACCT_PROMOTION_N2 ON AMTB_ACCT_PROMOTION(PROMO_NO);
CREATE INDEX AMTB_ACCT_PROMOTION_N3 ON AMTB_ACCT_PROMOTION(EFFECTIVE_DATE_FROM);
CREATE INDEX AMTB_ACCT_PROMOTION_N4 ON AMTB_ACCT_PROMOTION(EFFECTIVE_DATE_TO);
-- sequence for ACCOUNT CREDIT TERM REQUEST --
CREATE SEQUENCE "AMTB_ACCT_PROMOTION_REQ_SQ1" MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER NOCYCLE ;
-- ACCOUNT CREDIT TERM REQUEST TABLE --
CREATE TABLE AMTB_ACCT_PROMOTION_REQ (
	ACCT_PROMOTION_REQ_NO NUMBER(8) NOT NULL,
	REQ_ACCT_PROMOTION_NO NUMBER(8),
	BILL_REQ_NO NUMBER(8) NOT NULL,
	PROMO_NO NUMBER(8) NOT NULL,
	EVENT VARCHAR2(1), -- C = CREATE, U = UPDATE, D = DELETE
	EFFECTIVE_DT_FROM TIMESTAMP NOT NULL,
	EFFECTIVE_DT_TO TIMESTAMP,
    VERSION NUMBER(9,0) DEFAULT 0,
	CONSTRAINT AMTB_ACCT_PROMOTION_REQ_PK PRIMARY KEY(ACCT_PROMOTION_REQ_NO),
	CONSTRAINT AMTB_ACCT_PROMOTION_REQ_FK1 FOREIGN KEY(BILL_REQ_NO) REFERENCES AMTB_BILL_REQ(BILL_REQ_NO),
	CONSTRAINT AMTB_ACCT_PROMOTION_REQ_FK2 FOREIGN KEY(PROMO_NO) REFERENCES MSTB_PROMOTION(PROMO_NO),
	CONSTRAINT AMTB_ACCT_PROMOTION_REQ_FK3 FOREIGN KEY(REQ_ACCT_PROMOTION_NO) REFERENCES AMTB_ACCT_PROMOTION(ACCT_PROMOTION_NO)
);
-- creating indexes --
CREATE INDEX AMTB_ACCT_PROMOTION_REQ_N1 ON AMTB_ACCT_PROMOTION_REQ (BILL_REQ_NO);
CREATE INDEX AMTB_ACCT_PROMOTION_REQ_N2 ON AMTB_ACCT_PROMOTION_REQ (PROMO_NO);


drop sequence AMTB_ACCT_PROMOTION_SQ1;
drop table AMTB_ACCT_PROMOTION;
drop sequence AMTB_ACCT_PROMOTION_REQ_SQ1;
drop table AMTB_ACCT_PROMOTION_REQ;


-------------- script to drop database ---------------
DROP TABLE FMTB_TRANSACTION_CODE;
DROP TABLE TMTB_TXN_REVIEW_REQ_FLOW;
DROP TABLE TMTB_TXN_REVIEW_REQ;
DROP TABLE TMTB_ACQUIRE_TXN;
DROP TABLE PMTB_PRODUCT_STATUS;
DROP TABLE PMTB_PRODUCT_RETAG;
DROP TABLE PMTB_PRODUCT_REPLACEMENT;
DROP TABLE PMTB_PRODUCT_CREDIT_LIMIT;
DROP TABLE PMTB_PRODUCT_RENEW;
DROP TABLE PMTB_PRODUCT;
DROP TABLE AMTB_APPLICATION_FLOW;
DROP TABLE AMTB_APPLICATION_PRODUCT;
DROP TABLE AMTB_APPLICATION;
DROP TABLE AMTB_ACCT_BILL_CYCLE;
DROP TABLE AMTB_ACCT_VOL_DISC;
DROP TABLE AMTB_ACCT_ADMIN_FEE;
DROP TABLE AMTB_ACCT_CRED_TERM;
DROP TABLE AMTB_ACCT_EARLY_PYMT;
DROP TABLE AMTB_ACCT_LATE_PYMT;
DROP TABLE AMTB_CORPORATE_DETAIL;
DROP TABLE AMTB_PERSONAL_DETAIL;
DROP TABLE AMTB_ACCT_LATE_PYMT_REQ;
DROP TABLE AMTB_ACCT_EARLY_PYMT_REQ;
DROP TABLE AMTB_ACCT_CRED_TERM_REQ;
DROP TABLE AMTB_ACCT_ADMIN_FEE_REQ;
DROP TABLE AMTB_ACCT_VOL_DISC_REQ;
DROP TABLE AMTB_ACCT_BILL_CYCLE_REQ;
DROP TABLE AMTB_ACCT_SALESPERSON;
DROP TABLE AMTB_ACCT_SALESPERSON_REQ;
DROP TABLE AMTB_BILL_REQ_FLOW;
DROP TABLE AMTB_BILL_REQ;
DROP TABLE AMTB_CRED_REV_REQ_FLOW;
DROP TABLE AMTB_CRED_REV_REQ;
DROP TABLE AMTB_ACCT_STATUS;
DROP TABLE AMTB_SUBSC_TO;
DROP TABLE AMTB_ACCT_MAIN_CONTACT;
DROP TABLE AMTB_CONTACT_PERSON;
DROP TABLE AMTB_ACCT_CRED_LIMIT;
DROP TABLE AMTB_SUBSC_TO_HIST;
DROP TABLE AMTB_ACCOUNT;
DROP TABLE AMTB_SUBSC_PROD_TYPE;
DROP TABLE PMTB_PRODUCT_TYPE;
DROP TABLE AMTB_ACCT_TYPE;

DROP SEQUENCE FMTB_TRANSACTION_CODE_SQ1;
DROP SEQUENCE TMTB_TXN_REVIEW_REQ_FLOW_SQ1;
DROP SEQUENCE TMTB_TXN_REVIEW_REQ_SQ1;
DROP SEQUENCE TMTB_ACQUIRE_TXN_SQ1;
DROP SEQUENCE TMTB_ACQUIRE_TXN_SQ2;
DROP SEQUENCE PMTB_PRODUCT_STATUS_SQ1;
DROP SEQUENCE PMTB_PRODUCT_REPLACEMENT_SQ1;
DROP SEQUENCE PMTB_PRODUCT_RETAG_SQ1;
DROP SEQUENCE PMTB_PRODUCT_CREDIT_LIMIT_SQ1;
DROP SEQUENCE PMTB_PRODUCT_RENEW_SQ1;
DROP SEQUENCE PMTB_PRODUCT_SQ1;
DROP SEQUENCE AMTB_APPLICATION_FLOW_SQ1;
DROP SEQUENCE AMTB_APPLICATION_PRODUCT_SQ1;
DROP SEQUENCE AMTB_APPLICATION_SQ1;
DROP SEQUENCE AMTB_ACCT_BILL_CYCLE_SQ1;
DROP SEQUENCE AMTB_ACCT_VOL_DISC_SQ1;
DROP SEQUENCE AMTB_ACCT_ADMIN_FEE_SQ1;
DROP SEQUENCE AMTB_ACCT_CRED_TERM_SQ1;
DROP SEQUENCE AMTB_ACCT_EARLY_PYMT_SQ1;
DROP SEQUENCE AMTB_ACCT_LATE_PYMT_SQ1;
DROP SEQUENCE AMTB_CORPORATE_DETAIL_SQ1;
DROP SEQUENCE AMTB_PERSONAL_DETAIL_SQ1;
DROP SEQUENCE AMTB_ACCT_LATE_PYMT_REQ_SQ1;
DROP SEQUENCE AMTB_ACCT_EARLY_PYMT_REQ_SQ1;
DROP SEQUENCE AMTB_ACCT_CRED_TERM_REQ_SQ1;
DROP SEQUENCE AMTB_ACCT_ADMIN_FEE_REQ_SQ1;
DROP SEQUENCE AMTB_ACCT_VOL_DISC_REQ_SQ1;
DROP SEQUENCE AMTB_ACCT_BILL_CYCLE_REQ_SQ1;
DROP SEQUENCE AMTB_BILL_REQ_FLOW_SQ1;
DROP SEQUENCE AMTB_BILL_REQ_SQ1;
DROP SEQUENCE AMTB_ACCT_SALESPERSON_SQ1;
DROP SEQUENCE AMTB_ACCT_SALESPERSON_REQ_SQ1;
DROP SEQUENCE AMTB_CRED_REV_REQ_FLOW_SQ1;
DROP SEQUENCE AMTB_CRED_REV_REQ_SQ1;
DROP SEQUENCE AMTB_ACCT_STATUS_SQ1;
DROP SEQUENCE AMTB_CONTACT_PERSON_SQ1;
DROP SEQUENCE AMTB_ACCT_CRED_LIMIT_SQ1;
DROP SEQUENCE AMTB_SUBSC_TO_HIST_SQ1;
DROP SEQUENCE AMTB_ACCOUNT_SQ2;
DROP SEQUENCE AMTB_ACCOUNT_SQ1;
DROP SEQUENCE PMTB_PRODUCT_TYPE_SQ1;
DROP SEQUENCE AMTB_ACCT_TYPE_SQ1;

-- sample data
INSERT INTO AMTB_ACCT_TYPE (ACCT_TYPE_NO, ACCT_TYPE, ACCT_TEMPLATE) VALUES (1, 'CORPORATES','C');
INSERT INTO AMTB_ACCT_TYPE (ACCT_TYPE_NO, ACCT_TYPE, ACCT_TEMPLATE) VALUES (2, 'PERSONALS','P');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('CC','CORPORATE CARD','N','Y','Y','N','N','Y','Y','A',19,'601000','6050','N','Y','NA',36,9,0,'CABC');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('FE','FIXED VALUE E-VOUCHER','Y','N','N','Y','Y','Y','Y','A',16,'601089','6505','N','Y','C',24,8,0,'EVCH');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('FV','FIXED VALUE E-VOUCHER LEGACY','Y','N','N','Y','Y','Y','Y','A',10,'NA','NA','N','Y','R',0,4,0,'EVCH');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('HC','HOTEL CARD','Y','N','Y','N','N','Y','Y','A',16,'601089','6508','N','Y','C',36,2,0,'CABC');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('HE','HOTEL E-VOUCHER','Y','N','Y','Y','Y','Y','N','A',16,'601089','6507','N','Y','C',0,4,0,'EVCH');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('OE','OPEN VALUE E-VOUCHER','Y','N','N','Y','N','Y','Y','A',16,'601089','6506','N','Y','C',24,2,0,'EVCH');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('OS','OVERSEA ISSUED PRODUCTS','NA','NA','NA','NA','NA','NA','NA','NA',0,'NA','NA','Y','N','NA',0,2,0,'OVS');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('OV','OPEN VALUE E-VOUCHER LEGACY','Y','N','N','Y','N','N','Y','A',10,'NA','NA','N','Y','R',0,6,0,'EVCH');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('PC','PERSONAL CARD','N','Y','Y','N','N','Y','Y','A',16,'601089','6504','N','Y','NA',36,3,0,'CABC');
INSERT INTO PMTB_PRODUCT_TYPE (PRODUCT_TYPE_ID,NAME,BATCH_ISSUE,NAME_ON_PRODUCT,LUHN_CHECK,ONE_TIME_USAGE,FIXED_VALUE,CREDIT_LIMIT,VALIDITY_PERIOD,DEFAULT_CARD_STATUS,NUMBER_OF_DIGIT,BIN_RANGE,SUB_BIN_RANGE,NEGATIVE_FILE_CHECK,ISSUABLE,ISSUE_TYPE,DEFAULT_VALID_PERIOD,VERSION,REPLACEMENT_FEES,INTERFACE_MAPPING_VALUE) VALUES ('PS','PREMIER SERVICE','NA','NA','NA','NA','NA','NA','NA','NA',0,'NA','NA','N','N','NA',0,6,0,'INVO');
INSERT INTO AMTB_SUBSC_PROD_TYPE(PRODUCT_TYPE_ID,ACCT_TYPE_NO) VALUES ('CC',1);
INSERT INTO AMTB_SUBSC_PROD_TYPE(PRODUCT_TYPE_ID,ACCT_TYPE_NO) VALUES ('PC',2);
INSERT INTO AMTB_ACCOUNT
	(ACCOUNT_NO, DEPOSIT, CUST_NO, ACCT_TYPE_NO, AR_CONTROL_CODE_NO, ACCOUNT_CATEGORY, CREDIT_LIMIT, TEMP_CREDIT_LIMIT, CREDIT_BALANCE, BANK_ACCT_NO, BRANCH_MASTER_NO, ACCOUNT_BALANCE, PARENT_NO, NAME_ON_CARD, ACCOUNT_NAME, INFORMATION_SOURCE, DEFAULT_PAYMENT_MODE , CODE, CREATED_DT, UPDATED_DT, UPDATED_BY, CREATED_BY, INVOICE_FORMAT, INVOICE_SORTING)
VALUES
	(1, 1000, '1', 1, 1, 'CORP', 10000, null, 9999.99, null, null, 1000, null, 'MOF', 'MINISTRY OF FOOD', null, null, null, to_date('2008/01/01', 'yyyy/mm/dd'), to_date('2008/06/01', 'yyyy/mm/dd'), 'YIMING', 'YIMING', 'A', 'T');
INSERT INTO AMTB_ACCOUNT
	(ACCOUNT_NO, DEPOSIT, CUST_NO, ACCT_TYPE_NO, AR_CONTROL_CODE_NO, ACCOUNT_CATEGORY, CREDIT_LIMIT, TEMP_CREDIT_LIMIT, CREDIT_BALANCE, BANK_ACCT_NO, BRANCH_MASTER_NO, ACCOUNT_BALANCE, PARENT_NO, NAME_ON_CARD, ACCOUNT_NAME, INFORMATION_SOURCE, DEFAULT_PAYMENT_MODE , CODE, CREATED_DT, UPDATED_DT, UPDATED_BY, CREATED_BY, INVOICE_FORMAT, INVOICE_SORTING)
VALUES
	(2, 0, NULL, 1, null, 'DIV', 9000, null, 8888.88, null, null, 900, 1, 'MOF(C)', 'Chinese Cusine Div', null, null, 'CCD1', to_date('2008/01/01', 'yyyy/mm/dd'), to_date('2008/06/01', 'yyyy/mm/dd'), 'YIMING', 'YIMING', null, null);
INSERT INTO AMTB_ACCOUNT
	(ACCOUNT_NO, DEPOSIT, CUST_NO, ACCT_TYPE_NO, AR_CONTROL_CODE_NO, ACCOUNT_CATEGORY, CREDIT_LIMIT, TEMP_CREDIT_LIMIT, CREDIT_BALANCE, BANK_ACCT_NO, BRANCH_MASTER_NO, ACCOUNT_BALANCE, PARENT_NO, NAME_ON_CARD, ACCOUNT_NAME, INFORMATION_SOURCE, DEFAULT_PAYMENT_MODE , CODE, CREATED_DT, UPDATED_DT, UPDATED_BY, CREATED_BY, INVOICE_FORMAT, INVOICE_SORTING)
VALUES
	(3, 0, null, 1, null, 'DEPT', 5000, null, 4444.44, null, null, 400, 2, 'MOF(C)(CS)', 'Char Siew Dept', null, null, 'CSD1', to_date('2008/01/01', 'yyyy/mm/dd'), to_date('2008/06/01', 'yyyy/mm/dd'), 'YIMING', 'YIMING', null, null);
INSERT INTO AMTB_ACCOUNT
	(ACCOUNT_NO, DEPOSIT, CUST_NO, ACCT_TYPE_NO, AR_CONTROL_CODE_NO, ACCOUNT_CATEGORY, CREDIT_LIMIT, TEMP_CREDIT_LIMIT, CREDIT_BALANCE, BANK_ACCT_NO, BRANCH_MASTER_NO, ACCOUNT_BALANCE, PARENT_NO, NAME_ON_CARD, ACCOUNT_NAME, INFORMATION_SOURCE, DEFAULT_PAYMENT_MODE , CODE, CREATED_DT, UPDATED_DT, UPDATED_BY, CREATED_BY, INVOICE_FORMAT, INVOICE_SORTING)
VALUES
	(4, 0, null, 1, null, 'DEPT', 5000, null, 4444.44, null, null, 400, 2, 'MOF(C)(CR)', 'Chicken Rice Dept', null, null, 'CRD1', to_date('2008/01/01', 'yyyy/mm/dd'), to_date('2008/06/01', 'yyyy/mm/dd'), 'YIMING', 'YIMING', null, null);
INSERT INTO AMTB_ACCOUNT
	(ACCOUNT_NO, DEPOSIT, CUST_NO, ACCT_TYPE_NO, AR_CONTROL_CODE_NO, ACCOUNT_CATEGORY, CREDIT_LIMIT, TEMP_CREDIT_LIMIT, CREDIT_BALANCE, BANK_ACCT_NO, BRANCH_MASTER_NO, ACCOUNT_BALANCE, PARENT_NO, NAME_ON_CARD, ACCOUNT_NAME, INFORMATION_SOURCE, DEFAULT_PAYMENT_MODE , CODE, CREATED_DT, UPDATED_DT, UPDATED_BY, CREATED_BY, INVOICE_FORMAT, INVOICE_SORTING)
VALUES
	(5, 0, null, 1, null, 'DEPT', 5000, null, 4444.44, null, null, 1000, 2, 'MOF(C)(MV)', 'Cha Cai Pen Dept', null, null, 'CCP1', to_date('2008/01/01', 'yyyy/mm/dd'), to_date('2008/06/01', 'yyyy/mm/dd'), 'YIMING', 'YIMING', null, null);
INSERT INTO AMTB_CONTACT_PERSON
	(CONTACT_PERSON_NO, ACCOUNT_NO, MAIN_CONTACT_NAME, MAIN_CONTACT_TITLE, MAIN_CONTACT_TEL, MAIN_CONTACT_MOBILE, MAIN_CONTACT_FAX, MAIN_CONTACT_EMAIL, SUB_CONTACT_NAME, SUB_CONTACT_TITLE, SUB_CONTACT_TEL, SUB_CONTACT_MOBILE, SUB_CONTACT_FAX, SUB_CONTACT_EMAIL, ADDRESS_BLOCK, ADDRESS_UNIT, ADDRESS_STREET, ADDRESS_BUILDING, ADDRESS_AREA, ADDRESS_COUNTRY, ADDRESS_POSTAL, ADDRESS_CITY, ADDRESS_STATE)
VALUES
	(1, '000001', 'YIMING', 'DIRECTION', '1234567', '1234567', NULL, 'yiming@wizvision.com', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'JOO CHIAT ROAD', NULL, NULL, 31, '123456', NULL, NULL);
INSERT INTO AMTB_ACCT_MAIN_CONTACT (CONTACT_PERSON_NO, ACCOUNT_NO, MAIN_CONTACT_TYPE) VALUES (1, 1, 'B');
INSERT INTO AMTB_ACCT_MAIN_CONTACT (CONTACT_PERSON_NO, ACCOUNT_NO, MAIN_CONTACT_TYPE) VALUES (1, 2, 'B');
INSERT INTO AMTB_ACCT_MAIN_CONTACT (CONTACT_PERSON_NO, ACCOUNT_NO, MAIN_CONTACT_TYPE) VALUES (1, 3, 'B');
INSERT INTO AMTB_ACCT_MAIN_CONTACT (CONTACT_PERSON_NO, ACCOUNT_NO, MAIN_CONTACT_TYPE) VALUES (1, 4, 'B');
INSERT INTO AMTB_ACCT_MAIN_CONTACT (CONTACT_PERSON_NO, ACCOUNT_NO, MAIN_CONTACT_TYPE) VALUES (1, 5, 'B');
INSERT INTO AMTB_SUBSC_TO (ACCOUNT_NO, PRODUCT_TYPE_ID, EFFECTIVE_DT) VALUES ('000001', 'CC', TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'));
INSERT INTO AMTB_ACCT_STATUS (ACCT_STATUS_NO, ACCOUNT_NO, EFFECTIVE_DT, STATUS_REASON, ACCT_STATUS, USER_ID) VALUES (1, 1, TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'), 35, 'PA', 3);
INSERT INTO AMTB_ACCT_CRED_LIMIT (ACCT_CRED_LIMIT_NO, ACCOUNT_NO, CREDIT_LIMIT_TYPE, NEW_CREDIT_LIMIT, EFFECTIVE_DT_FROM, EFFECTIVE_DT_TO, REMARKS, APPROVER_ID) VALUES (1, 1, 'P', 10000, TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'), null, 'INITIAL', 3);
INSERT INTO AMTB_CRED_REV_REQ (CREDIT_REVIEW_REQUEST_NO, ACCOUNT_NO, CREDIT_REVIEW_TYPE, NEW_CREDIT_LIMIT, EFFECTIVE_FROM, EFFECTIVE_TO, REMARKS) VALUES (1, '000001', 'P', 100000, TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'), NULL, 'TESTING REMARKS');
INSERT INTO AMTB_CRED_REV_REQ_FLOW (CREDIT_REVIEW_REQUEST_FLOW_NO, CREDIT_REVIEW_REQUEST_NO, FROM_STATUS, TO_STATUS, REMARKS, FLOW_DT) VALUES (1, 1, 'N', 'P', 'TESTING REMARKS', TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'));
INSERT INTO AMTB_ACCT_SALESPERSON (ACCT_SALESPERSON_NO, SALESPERSON_NO, ACCOUNT_NO, EFFECTIVE_DT_FROM, EFFECTIVE_DT_TO) VALUES (1, 1, '000001', TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'), NULL);
INSERT INTO AMTB_BILL_REQ (BILL_REQ_NO, ACCOUNT_NO, REQUEST_DT, BANK_ACCOUNT_NO, BRANCH_MASTER_NO) VALUES (1, '000001', TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'), '999-99999-9', 1);
INSERT INTO AMTB_BILL_REQ_FLOW (BILL_REQ_FLOW_NO, BILL_REQ_NO, FROM_STATUS, TO_STATUS, REMARKS, FLOW_DT) VALUES (1, 1, 'N', 'P', 'TESTING REMARKS', TO_TIMESTAMP('01/01/2006','dd/mm/yyyy'));
INSERT INTO AMTB_ACCT_BILL_CYCLE_REQ (ACCOUNT_BILL_CYCLE_REQ_NO, BILL_REQ_NO, BILLING_CYCLE, EFFECTIVE_DT) VALUES (1, 1, NULL, TO_TIMESTAMP('01/02/2006','dd/mm/yyyy'));
INSERT INTO AMTB_PERSONAL_DETAIL (PERSONAL_DETAIL_NO, BIRTH_DT, NRIC, JOB_STATUS, OCCUPATION, INDUSTRY, EMPLOYER_NAME, MONTHLY_INCOME, EMPLOY_LENGTH_YEAR, EMPLOYER_BLOCK, EMPLOYER_UNIT, EMPLOYER_STREET, EMPLOYER_BUILDING, EMPLOYER_AREA, EMPLOYER_COUNTRY, EMPLOYER_POSTAL, EMPLOYER_CITY, EMPLOYER_STATE) VALUES (1, TO_TIMESTAMP('01/01/1980','DD/MM/YYYY'), 'S12345678A', 15, 'SBS DRIVER', 3, 'SBS TRANSIT', 1500.12, 20, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
INSERT INTO AMTB_CORPORATE_DETAIL (ACCOUNT_NO, CORPORATE_DETAIL_NO, RCB_NO, RCB_DT, CAPITAL, AUTH_PERSON_NAME, AUTH_PERSON_TITLE, INDUSTRY, ADDRESS_BLOCK, ADDRESS_UNIT, ADDRESS_STREET, ADDRESS_BUILDING, ADDRESS_AREA, ADDRESS_COUNTRY, ADDRESS_CITY, ADDRESS_STATE, ADDRESS_POSTAL, TEL, FAX) VALUES (1, 1, '123456', NULL, 100000, 'AUTHORISED PERSON', 'TITLE', 3, '123', NULL, 'JOO CHIAT', NULL, NULL, 4, NULL, NULL, '123456', '63920542 x308', null);
INSERT INTO AMTB_ACCT_VOL_DISC (ACCT_VOL_DISC_NO, ACCT_NO, VOLUME_DISCOUNT_PLAN_NO, EFFECTIVE_DATE) VALUES (1, 1, 1, TO_DATE('01/02/2006','dd/mm/yyyy'));
INSERT INTO AMTB_ACCT_ADMIN_FEE (ACCT_ADMIN_FEE_NO, ACCT_NO, ADMIN_FEE_PLAN_NO, EFFECTIVE_DATE) VALUES (1, 1, 1, TO_DATE('01/02/2006','dd/mm/yyyy'));
INSERT INTO AMTB_ACCT_CRED_TERM (AMTB_ACCT_CRED_TERM_NO, ACCT_NO, CREDIT_TERM_PLAN_NO, EFFECTIVE_DATE) VALUES (1, 1, 1, TO_DATE('01/02/2006','dd/mm/yyyy'));
INSERT INTO AMTB_ACCT_EARLY_PYMT (ACCT_EARLY_PYMT_NO, ACCT_NO, EARLY_PAYMENT_PLAN_NO, EFFECTIVE_DATE) VALUES (1, 1, 1, TO_DATE('01/02/2006','dd/mm/yyyy'));
INSERT INTO AMTB_ACCT_LATE_PYMT (ACCT_LATE_PYMT_NO, ACCT_NO, LATE_PAYMENT_PLAN_NO, EFFECTIVE_DATE) VALUES (1, 1, 1, TO_DATE('01/02/2006','dd/mm/yyyy'));
INSERT INTO AMTB_APPLICATION
	(APPLICATION_NO, ACCT_TYPE_NO, LATE_PAYMENT_PLAN_NO, EARLY_PAYMENT_PLAN_NO, VOLUME_DISCOUNT_PLAN_NO, ADMIN_FEE_PLAN_NO, APPLICATION_DT, APPLICANT_NAME, RCB_NO, RCB_DT, INCORPORATION_DT, CAPITAL, ADDRESS_BLOCK, ADDRESS_UNIT, ADDRESS_STREET, ADDRESS_BUILDING, ADDRESS_AREA, ADDRESS_COUNTRY, ADDRESS_CITY, ADDRESS_STATE, POSTAL, AUTH_PERSON, AUTH_TITLE, AUTH_SAL, ACCOUNT_NO, AR_CONTROL_CODE_NO, CREDIT_LIMIT, DEPOSIT, SALESPERSON, INFORMATION_SOURCE, NAME_ON_CARD, NRIC, TEL, MOBILE, OFFICE, EMAIL, JOB_STATUS, OCCUPATION, EMPLOYER_NAME, EMPLOYER_BLOCK, EMPLOYER_UNIT, EMPLOYER_STREET, EMPLOYER_BUILDING, EMPLOYER_AREA, EMPLOYER_COUNTRY, EMPLOYER_POSTAL, EMPLOYER_CITY, EMPLOYER_STATE, MONTHLY_INCOME, EMPLOY_YEARS)
	values
	('1', 1, 1, 1, null, null, null, 'test', null, null, null, 0.0, null, null, 'test', null, null, 1, null, null, null, null, null, null, null, null, 1000.0, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
INSERT INTO AMTB_APPLICATION_PRODUCT
	(APPLICATION_PRODUCT_NO, APPLICATION_NO, PRODUCT_TYPE_ID, PRODUCT_DISCOUNT_PLAN_NO, REWARDS_PLAN_NO, SUBSCRIPTION_FEE_NO)
	values
	(1, '1', 'CC', null, null, null);
INSERT INTO AMTB_APPLICATION_FLOW
	(APPLICATION_FLOW_NO, APPLICATION_NO, FLOW_DT, FROM_STATUS, TO_STATUS, REMARKS, USER_ID)
	values
	(1, '1', to_timestamp('01/01/2010','dd/mm/yyyy'), 'N', 'D', null, 2);
select * from amtb_account acct inner join AMTB_ACCT_STATUS accta on acct.account_no = accta.account_no left join AMTB_ACCT_STATUS accta2 on accta.ACCT_STATUS_no = accta2.ACCT_STATUS_no and accta2.ACCT_STATUS = 'P' where accta.ACCT_STATUS = 'P' and accta2.ACCT_STATUS is null
select acct.*
from amtb_account acct
INNER JOIN
(select status.account_no, max(status.effective_dt) as effective_dt
from AMTB_ACCT_STATUS status where status.effective_dt < SYSTIMESTAMP
group by status.account_no) v ON
v.account_no = acct.account_no
inner join AMTB_ACCT_STATUS status on
status.account_no = acct.account_no and status.effective_dt = v.effective_dt and status.ACCT_STATUS = 'PS'
select * from AMTB_ACCOUNT acct1
    left join AMTB_ACCOUNT acct2 on acct1.ACCOUNT_NO = acct2.PARENT_NO
    left join amtb_account acct3 on acct2.ACCOUNT_NO = acct3.PARENT_NO
    where acct1.cust_no = 3
SELECT name, value 
  FROM v$parameter
 WHERE name = 'sessions'