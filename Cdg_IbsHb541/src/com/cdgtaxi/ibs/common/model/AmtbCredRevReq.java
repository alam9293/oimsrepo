package com.cdgtaxi.ibs.common.model;
// Generated Jul 20, 2009 4:09:35 PM by Hibernate Tools 3.1.0.beta4

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

import com.cdgtaxi.ibs.acl.security.Auditable;


/**
 * AmtbCredRevReq generated by hbm2java
 */

public class AmtbCredRevReq  implements java.io.Serializable, Auditable {


    // Fields    

    private Integer creditReviewRequestNo;
    private String creditReviewType;
    private BigDecimal newCreditLimit;
    private Timestamp effectiveDtFrom;
    private Timestamp effectiveDtTo;
    private String remarks;
    private Integer version;
    private Set<AmtbCredRevReqFlow> amtbCredRevReqFlows = new HashSet<AmtbCredRevReqFlow>(0);
    private AmtbAccount amtbAccount;


    // Constructors

    /** default constructor */
    public AmtbCredRevReq() {
    }

	/** minimal constructor */
    public AmtbCredRevReq(String creditReviewType, BigDecimal newCreditLimit, Timestamp effectiveDtFrom, String remarks) {
        this.creditReviewType = creditReviewType;
        this.newCreditLimit = newCreditLimit;
        this.effectiveDtFrom = effectiveDtFrom;
        this.remarks = remarks;
    }
    
    /** full constructor */
    public AmtbCredRevReq(String creditReviewType, BigDecimal newCreditLimit, Timestamp effectiveDtFrom, Timestamp effectiveDtTo, String remarks, Integer version, Set<AmtbCredRevReqFlow> amtbCredRevReqFlows, AmtbAccount amtbAccount) {
        this.creditReviewType = creditReviewType;
        this.newCreditLimit = newCreditLimit;
        this.effectiveDtFrom = effectiveDtFrom;
        this.effectiveDtTo = effectiveDtTo;
        this.remarks = remarks;
        this.version = version;
        this.amtbCredRevReqFlows = amtbCredRevReqFlows;
        this.amtbAccount = amtbAccount;
    }
    

   
    // Property accessors

    public Integer getCreditReviewRequestNo() {
        return this.creditReviewRequestNo;
    }
    
    public void setCreditReviewRequestNo(Integer creditReviewRequestNo) {
        this.creditReviewRequestNo = creditReviewRequestNo;
    }

    public String getCreditReviewType() {
        return this.creditReviewType;
    }
    
    public void setCreditReviewType(String creditReviewType) {
        this.creditReviewType = creditReviewType;
    }

    public BigDecimal getNewCreditLimit() {
        return this.newCreditLimit;
    }
    
    public void setNewCreditLimit(BigDecimal newCreditLimit) {
        this.newCreditLimit = newCreditLimit;
    }

    public Timestamp getEffectiveDtFrom() {
        return this.effectiveDtFrom;
    }
    
    public void setEffectiveDtFrom(Timestamp effectiveDtFrom) {
        this.effectiveDtFrom = effectiveDtFrom;
    }

    public Timestamp getEffectiveDtTo() {
        return this.effectiveDtTo;
    }
    
    public void setEffectiveDtTo(Timestamp effectiveDtTo) {
        this.effectiveDtTo = effectiveDtTo;
    }

    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

    public Set<AmtbCredRevReqFlow> getAmtbCredRevReqFlows() {
        return this.amtbCredRevReqFlows;
    }
    
    public void setAmtbCredRevReqFlows(Set<AmtbCredRevReqFlow> amtbCredRevReqFlows) {
        this.amtbCredRevReqFlows = amtbCredRevReqFlows;
    }

    public AmtbAccount getAmtbAccount() {
        return this.amtbAccount;
    }
    
    public void setAmtbAccount(AmtbAccount amtbAccount) {
        this.amtbAccount = amtbAccount;
    }
   

    /**
     * toString
     * @return String
     */
     public String toString() {
	  StringBuffer buffer = new StringBuffer();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("creditReviewType").append("='").append(getCreditReviewType()).append("' ");			
      buffer.append("newCreditLimit").append("='").append(getNewCreditLimit()).append("' ");			
      buffer.append("effectiveDtFrom").append("='").append(getEffectiveDtFrom()).append("' ");			
      buffer.append("effectiveDtTo").append("='").append(getEffectiveDtTo()).append("' ");			
      buffer.append("remarks").append("='").append(getRemarks()).append("' ");			
      buffer.append("version").append("='").append(getVersion()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AmtbCredRevReq) ) return false;
		 AmtbCredRevReq castOther = ( AmtbCredRevReq ) other; 
         
		 return ( (this.getCreditReviewRequestNo()==castOther.getCreditReviewRequestNo()) || ( this.getCreditReviewRequestNo()!=null && castOther.getCreditReviewRequestNo()!=null && this.getCreditReviewRequestNo().equals(castOther.getCreditReviewRequestNo()) ) )
 && ( (this.getCreditReviewType()==castOther.getCreditReviewType()) || ( this.getCreditReviewType()!=null && castOther.getCreditReviewType()!=null && this.getCreditReviewType().equals(castOther.getCreditReviewType()) ) )
 && ( (this.getNewCreditLimit()==castOther.getNewCreditLimit()) || ( this.getNewCreditLimit()!=null && castOther.getNewCreditLimit()!=null && this.getNewCreditLimit().equals(castOther.getNewCreditLimit()) ) )
 && ( (this.getEffectiveDtFrom()==castOther.getEffectiveDtFrom()) || ( this.getEffectiveDtFrom()!=null && castOther.getEffectiveDtFrom()!=null && this.getEffectiveDtFrom().equals(castOther.getEffectiveDtFrom()) ) )
 && ( (this.getEffectiveDtTo()==castOther.getEffectiveDtTo()) || ( this.getEffectiveDtTo()!=null && castOther.getEffectiveDtTo()!=null && this.getEffectiveDtTo().equals(castOther.getEffectiveDtTo()) ) )
 && ( (this.getRemarks()==castOther.getRemarks()) || ( this.getRemarks()!=null && castOther.getRemarks()!=null && this.getRemarks().equals(castOther.getRemarks()) ) )
 && ( (this.getVersion()==castOther.getVersion()) || ( this.getVersion()!=null && castOther.getVersion()!=null && this.getVersion().equals(castOther.getVersion()) ) )
 && ( (this.getAmtbAccount()==castOther.getAmtbAccount()) || ( this.getAmtbAccount()!=null && castOther.getAmtbAccount()!=null && this.getAmtbAccount().equals(castOther.getAmtbAccount()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getCreditReviewRequestNo() == null ? 0 : this.getCreditReviewRequestNo().hashCode() );
         result = 37 * result + ( getCreditReviewType() == null ? 0 : this.getCreditReviewType().hashCode() );
         result = 37 * result + ( getNewCreditLimit() == null ? 0 : this.getNewCreditLimit().hashCode() );
         result = 37 * result + ( getEffectiveDtFrom() == null ? 0 : this.getEffectiveDtFrom().hashCode() );
         result = 37 * result + ( getEffectiveDtTo() == null ? 0 : this.getEffectiveDtTo().hashCode() );
         result = 37 * result + ( getRemarks() == null ? 0 : this.getRemarks().hashCode() );
         result = 37 * result + ( getVersion() == null ? 0 : this.getVersion().hashCode() );
         
         result = 37 * result + ( getAmtbAccount() == null ? 0 : this.getAmtbAccount().hashCode() );
         return result;
   }   





}
